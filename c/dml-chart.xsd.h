// Copyright 2020 The xgen Authors. All rights reserved.
//
// DO NOT EDIT: generated by xgen XSD generator
//
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

typedef struct {
	bool ValAttr; // attr, optional
} CT_Boolean;

typedef struct {
	float ValAttr; // attr
} CT_Double;

typedef struct {
	unsigned int ValAttr; // attr
} CT_UnsignedInt;

typedef struct {
	char RIdAttr; // attr
} CT_RelId;

typedef struct {
	char UriAttr; // attr, optional
} CT_Extension;

typedef struct {
	CT_Extension Ext[];
} CT_ExtensionList;

typedef struct {
	unsigned int IdxAttr; // attr
	char FormatCodeAttr; // attr, optional
	char V[];
} CT_NumVal;

typedef struct {
	char FormatCode[];
	CT_UnsignedInt PtCount[];
	CT_NumVal Pt[];
	CT_ExtensionList ExtLst[];
} CT_NumData;

typedef struct {
	char F[];
	CT_NumData NumCache[];
	CT_ExtensionList ExtLst[];
} CT_NumRef;

typedef struct {
	CT_NumRef NumRef[];
	CT_NumData NumLit[];
} CT_NumDataSource;

typedef struct {
	unsigned int IdxAttr; // attr
	char V[];
} CT_StrVal;

typedef struct {
	CT_UnsignedInt PtCount[];
	CT_StrVal Pt[];
	CT_ExtensionList ExtLst[];
} CT_StrData;

typedef struct {
	char F[];
	CT_StrData StrCache[];
	CT_ExtensionList ExtLst[];
} CT_StrRef;

typedef struct {
	CT_StrRef StrRef[];
	CT_TextBody Rich[];
} CT_Tx;

typedef struct {
	char ValAttr; // attr
} CT_TextLanguageID;

typedef struct {
	CT_StrVal Pt[];
} CT_Lvl;

typedef struct {
	CT_UnsignedInt PtCount[];
	CT_Lvl Lvl[];
	CT_ExtensionList ExtLst[];
} CT_MultiLvlStrData;

typedef struct {
	char F[];
	CT_MultiLvlStrData MultiLvlStrCache[];
	CT_ExtensionList ExtLst[];
} CT_MultiLvlStrRef;

typedef struct {
	CT_MultiLvlStrRef MultiLvlStrRef[];
	CT_NumRef NumRef[];
	CT_NumData NumLit[];
	CT_StrRef StrRef[];
	CT_StrData StrLit[];
} CT_AxDataSource;

typedef struct {
	CT_StrRef StrRef[];
	char V[];
} CT_SerTx;

typedef char ST_LayoutTarget;

typedef struct {
	char ValAttr; // attr, optional
} CT_LayoutTarget;

typedef char ST_LayoutMode;

typedef struct {
	char ValAttr; // attr, optional
} CT_LayoutMode;

typedef struct {
	CT_LayoutTarget LayoutTarget[];
	CT_LayoutMode XMode[];
	CT_LayoutMode YMode[];
	CT_LayoutMode WMode[];
	CT_LayoutMode HMode[];
	CT_Double X[];
	CT_Double Y[];
	CT_Double W[];
	CT_Double H[];
	CT_ExtensionList ExtLst[];
} CT_ManualLayout;

typedef struct {
	CT_ManualLayout ManualLayout[];
	CT_ExtensionList ExtLst[];
} CT_Layout;

typedef struct {
	CT_Tx Tx[];
	CT_Layout Layout[];
	CT_Boolean Overlay[];
	CT_ShapeProperties SpPr[];
	CT_TextBody TxPr[];
	CT_ExtensionList ExtLst[];
} CT_Title;

typedef char ST_RotX[];

typedef struct {
	char ValAttr[]; // attr, optional
} CT_RotX;

typedef struct {
	ST_HPercentWithSymbol ST_HPercentWithSymbol;
} ST_HPercent;

typedef char ST_HPercentWithSymbol;

typedef struct {
	ST_HPercent ValAttr; // attr, optional
} CT_HPercent;

typedef unsigned int ST_RotY;

typedef struct {
	unsigned int ValAttr; // attr, optional
} CT_RotY;

typedef struct {
	ST_DepthPercentWithSymbol ST_DepthPercentWithSymbol;
} ST_DepthPercent;

typedef char ST_DepthPercentWithSymbol;

typedef struct {
	ST_DepthPercent ValAttr; // attr, optional
} CT_DepthPercent;

typedef char ST_Perspective;

typedef struct {
	char ValAttr; // attr, optional
} CT_Perspective;

typedef struct {
	CT_RotX RotX[];
	CT_HPercent HPercent[];
	CT_RotY RotY[];
	CT_DepthPercent DepthPercent[];
	CT_Boolean RAngAx[];
	CT_Perspective Perspective[];
	CT_ExtensionList ExtLst[];
} CT_View3D;

typedef struct {
	CT_Thickness Thickness[];
	CT_ShapeProperties SpPr[];
	CT_PictureOptions PictureOptions[];
	CT_ExtensionList ExtLst[];
} CT_Surface;

typedef struct {
	ST_ThicknessPercent ST_ThicknessPercent;
} ST_Thickness;

typedef char ST_ThicknessPercent;

typedef struct {
	ST_Thickness ValAttr; // attr
} CT_Thickness;

typedef struct {
	CT_Boolean ShowHorzBorder[];
	CT_Boolean ShowVertBorder[];
	CT_Boolean ShowOutline[];
	CT_Boolean ShowKeys[];
	CT_ShapeProperties SpPr[];
	CT_TextBody TxPr[];
	CT_ExtensionList ExtLst[];
} CT_DTable;

typedef struct {
	ST_GapAmountPercent ST_GapAmountPercent;
} ST_GapAmount;

typedef char ST_GapAmountPercent;

typedef struct {
	ST_GapAmount ValAttr; // attr, optional
} CT_GapAmount;

typedef struct {
	ST_OverlapPercent ST_OverlapPercent;
} ST_Overlap;

typedef char ST_OverlapPercent;

typedef struct {
	ST_Overlap ValAttr; // attr, optional
} CT_Overlap;

typedef struct {
	ST_BubbleScalePercent ST_BubbleScalePercent;
} ST_BubbleScale;

typedef char ST_BubbleScalePercent;

typedef struct {
	ST_BubbleScale ValAttr; // attr, optional
} CT_BubbleScale;

typedef char ST_SizeRepresents;

typedef struct {
	char ValAttr; // attr, optional
} CT_SizeRepresents;

typedef unsigned int ST_FirstSliceAng;

typedef struct {
	unsigned int ValAttr; // attr, optional
} CT_FirstSliceAng;

typedef struct {
	ST_HoleSizePercent ST_HoleSizePercent;
} ST_HoleSize;

typedef char ST_HoleSizePercent;

typedef struct {
	ST_HoleSize ValAttr; // attr, optional
} CT_HoleSize;

typedef char ST_SplitType;

typedef struct {
	char ValAttr; // attr, optional
} CT_SplitType;

typedef struct {
	CT_UnsignedInt SecondPiePt[];
} CT_CustSplit;

typedef struct {
	ST_SecondPieSizePercent ST_SecondPieSizePercent;
} ST_SecondPieSize;

typedef char ST_SecondPieSizePercent;

typedef struct {
	ST_SecondPieSize ValAttr; // attr, optional
} CT_SecondPieSize;

typedef struct {
	char FormatCodeAttr; // attr
	bool SourceLinkedAttr; // attr, optional
} CT_NumFmt;

typedef char ST_LblAlgn;

typedef struct {
	char ValAttr; // attr
} CT_LblAlgn;

typedef char ST_DLblPos;

typedef struct {
	char ValAttr; // attr
} CT_DLblPos;

typedef struct {
	CT_NumFmt NumFmt[];
	CT_ShapeProperties SpPr[];
	CT_TextBody TxPr[];
	CT_DLblPos DLblPos[];
	CT_Boolean ShowLegendKey[];
	CT_Boolean ShowVal[];
	CT_Boolean ShowCatName[];
	CT_Boolean ShowSerName[];
	CT_Boolean ShowPercent[];
	CT_Boolean ShowBubbleSize[];
	char Separator[];
} EG_DLblShared;

typedef struct {
	CT_Layout Layout[];
	CT_Tx Tx[];
	EG_DLblShared EG_DLblShared[];
} Group_DLbl;

typedef struct {
	Group_DLbl Group_DLbl[];
	CT_UnsignedInt Idx[];
	CT_Boolean Delete[];
	CT_ExtensionList ExtLst[];
} CT_DLbl;

typedef struct {
	CT_Boolean ShowLeaderLines[];
	CT_ChartLines LeaderLines[];
	EG_DLblShared EG_DLblShared[];
} Group_DLbls;

typedef struct {
	Group_DLbls Group_DLbls[];
	CT_DLbl DLbl[];
	CT_Boolean Delete[];
	CT_ExtensionList ExtLst[];
} CT_DLbls;

typedef char ST_MarkerStyle;

typedef struct {
	char ValAttr; // attr
} CT_MarkerStyle;

typedef char ST_MarkerSize;

typedef struct {
	char ValAttr; // attr, optional
} CT_MarkerSize;

typedef struct {
	CT_MarkerStyle Symbol[];
	CT_MarkerSize Size[];
	CT_ShapeProperties SpPr[];
	CT_ExtensionList ExtLst[];
} CT_Marker;

typedef struct {
	CT_UnsignedInt Idx[];
	CT_Boolean InvertIfNegative[];
	CT_Marker Marker[];
	CT_Boolean Bubble3D[];
	CT_UnsignedInt Explosion[];
	CT_ShapeProperties SpPr[];
	CT_PictureOptions PictureOptions[];
	CT_ExtensionList ExtLst[];
} CT_DPt;

typedef char ST_TrendlineType;

typedef struct {
	char ValAttr; // attr, optional
} CT_TrendlineType;

typedef char ST_Order;

typedef struct {
	char ValAttr; // attr, optional
} CT_Order;

typedef unsigned int ST_Period;

typedef struct {
	unsigned int ValAttr; // attr, optional
} CT_Period;

typedef struct {
	CT_Layout Layout[];
	CT_Tx Tx[];
	CT_NumFmt NumFmt[];
	CT_ShapeProperties SpPr[];
	CT_TextBody TxPr[];
	CT_ExtensionList ExtLst[];
} CT_TrendlineLbl;

typedef struct {
	char Name[];
	CT_ShapeProperties SpPr[];
	CT_TrendlineType TrendlineType[];
	CT_Order Order[];
	CT_Period Period[];
	CT_Double Forward[];
	CT_Double Backward[];
	CT_Double Intercept[];
	CT_Boolean DispRSqr[];
	CT_Boolean DispEq[];
	CT_TrendlineLbl TrendlineLbl[];
	CT_ExtensionList ExtLst[];
} CT_Trendline;

typedef char ST_ErrDir;

typedef struct {
	char ValAttr; // attr
} CT_ErrDir;

typedef char ST_ErrBarType;

typedef struct {
	char ValAttr; // attr, optional
} CT_ErrBarType;

typedef char ST_ErrValType;

typedef struct {
	char ValAttr; // attr, optional
} CT_ErrValType;

typedef struct {
	CT_ErrDir ErrDir[];
	CT_ErrBarType ErrBarType[];
	CT_ErrValType ErrValType[];
	CT_Boolean NoEndCap[];
	CT_NumDataSource Plus[];
	CT_NumDataSource Minus[];
	CT_Double Val[];
	CT_ShapeProperties SpPr[];
	CT_ExtensionList ExtLst[];
} CT_ErrBars;

typedef struct {
	CT_ShapeProperties SpPr[];
} CT_UpDownBar;

typedef struct {
	CT_GapAmount GapWidth[];
	CT_UpDownBar UpBars[];
	CT_UpDownBar DownBars[];
	CT_ExtensionList ExtLst[];
} CT_UpDownBars;

typedef struct {
	CT_UnsignedInt Idx[];
	CT_UnsignedInt Order[];
	CT_SerTx Tx[];
	CT_ShapeProperties SpPr[];
} EG_SerShared;

typedef struct {
	EG_SerShared EG_SerShared[];
	CT_Marker Marker[];
	CT_DPt DPt[];
	CT_DLbls DLbls[];
	CT_Trendline Trendline[];
	CT_ErrBars ErrBars[];
	CT_AxDataSource Cat[];
	CT_NumDataSource Val[];
	CT_Boolean Smooth[];
	CT_ExtensionList ExtLst[];
} CT_LineSer;

typedef struct {
	EG_SerShared EG_SerShared[];
	CT_Marker Marker[];
	CT_DPt DPt[];
	CT_DLbls DLbls[];
	CT_Trendline Trendline[];
	CT_ErrBars ErrBars[];
	CT_AxDataSource XVal[];
	CT_NumDataSource YVal[];
	CT_Boolean Smooth[];
	CT_ExtensionList ExtLst[];
} CT_ScatterSer;

typedef struct {
	EG_SerShared EG_SerShared[];
	CT_Marker Marker[];
	CT_DPt DPt[];
	CT_DLbls DLbls[];
	CT_AxDataSource Cat[];
	CT_NumDataSource Val[];
	CT_ExtensionList ExtLst[];
} CT_RadarSer;

typedef struct {
	EG_SerShared EG_SerShared[];
	CT_Boolean InvertIfNegative[];
	CT_PictureOptions PictureOptions[];
	CT_DPt DPt[];
	CT_DLbls DLbls[];
	CT_Trendline Trendline[];
	CT_ErrBars ErrBars[];
	CT_AxDataSource Cat[];
	CT_NumDataSource Val[];
	CT_Shape Shape[];
	CT_ExtensionList ExtLst[];
} CT_BarSer;

typedef struct {
	EG_SerShared EG_SerShared[];
	CT_PictureOptions PictureOptions[];
	CT_DPt DPt[];
	CT_DLbls DLbls[];
	CT_Trendline Trendline[];
	CT_ErrBars ErrBars[];
	CT_AxDataSource Cat[];
	CT_NumDataSource Val[];
	CT_ExtensionList ExtLst[];
} CT_AreaSer;

typedef struct {
	EG_SerShared EG_SerShared[];
	CT_UnsignedInt Explosion[];
	CT_DPt DPt[];
	CT_DLbls DLbls[];
	CT_AxDataSource Cat[];
	CT_NumDataSource Val[];
	CT_ExtensionList ExtLst[];
} CT_PieSer;

typedef struct {
	EG_SerShared EG_SerShared[];
	CT_Boolean InvertIfNegative[];
	CT_DPt DPt[];
	CT_DLbls DLbls[];
	CT_Trendline Trendline[];
	CT_ErrBars ErrBars[];
	CT_AxDataSource XVal[];
	CT_NumDataSource YVal[];
	CT_NumDataSource BubbleSize[];
	CT_Boolean Bubble3D[];
	CT_ExtensionList ExtLst[];
} CT_BubbleSer;

typedef struct {
	EG_SerShared EG_SerShared[];
	CT_AxDataSource Cat[];
	CT_NumDataSource Val[];
	CT_ExtensionList ExtLst[];
} CT_SurfaceSer;

typedef char ST_Grouping;

typedef struct {
	char ValAttr; // attr, optional
} CT_Grouping;

typedef struct {
	CT_ShapeProperties SpPr[];
} CT_ChartLines;

typedef struct {
	CT_Grouping Grouping[];
	CT_Boolean VaryColors[];
	CT_LineSer Ser[];
	CT_DLbls DLbls[];
	CT_ChartLines DropLines[];
} EG_LineChartShared;

typedef struct {
	EG_LineChartShared EG_LineChartShared[];
	CT_ChartLines HiLowLines[];
	CT_UpDownBars UpDownBars[];
	CT_Boolean Marker[];
	CT_Boolean Smooth[];
	CT_UnsignedInt AxId[];
	CT_ExtensionList ExtLst[];
} CT_LineChart;

typedef struct {
	EG_LineChartShared EG_LineChartShared[];
	CT_GapAmount GapDepth[];
	CT_UnsignedInt AxId[];
	CT_ExtensionList ExtLst[];
} CT_Line3DChart;

typedef struct {
	CT_LineSer Ser[];
	CT_DLbls DLbls[];
	CT_ChartLines DropLines[];
	CT_ChartLines HiLowLines[];
	CT_UpDownBars UpDownBars[];
	CT_UnsignedInt AxId[];
	CT_ExtensionList ExtLst[];
} CT_StockChart;

typedef char ST_ScatterStyle;

typedef struct {
	char ValAttr; // attr, optional
} CT_ScatterStyle;

typedef struct {
	CT_ScatterStyle ScatterStyle[];
	CT_Boolean VaryColors[];
	CT_ScatterSer Ser[];
	CT_DLbls DLbls[];
	CT_UnsignedInt AxId[];
	CT_ExtensionList ExtLst[];
} CT_ScatterChart;

typedef char ST_RadarStyle;

typedef struct {
	char ValAttr; // attr, optional
} CT_RadarStyle;

typedef struct {
	CT_RadarStyle RadarStyle[];
	CT_Boolean VaryColors[];
	CT_RadarSer Ser[];
	CT_DLbls DLbls[];
	CT_UnsignedInt AxId[];
	CT_ExtensionList ExtLst[];
} CT_RadarChart;

typedef char ST_BarGrouping;

typedef struct {
	char ValAttr; // attr, optional
} CT_BarGrouping;

typedef char ST_BarDir;

typedef struct {
	char ValAttr; // attr, optional
} CT_BarDir;

typedef char ST_Shape;

typedef struct {
	char ValAttr; // attr, optional
} CT_Shape;

typedef struct {
	CT_BarDir BarDir[];
	CT_BarGrouping Grouping[];
	CT_Boolean VaryColors[];
	CT_BarSer Ser[];
	CT_DLbls DLbls[];
} EG_BarChartShared;

typedef struct {
	EG_BarChartShared EG_BarChartShared[];
	CT_GapAmount GapWidth[];
	CT_Overlap Overlap[];
	CT_ChartLines SerLines[];
	CT_UnsignedInt AxId[];
	CT_ExtensionList ExtLst[];
} CT_BarChart;

typedef struct {
	EG_BarChartShared EG_BarChartShared[];
	CT_GapAmount GapWidth[];
	CT_GapAmount GapDepth[];
	CT_Shape Shape[];
	CT_UnsignedInt AxId[];
	CT_ExtensionList ExtLst[];
} CT_Bar3DChart;

typedef struct {
	CT_Grouping Grouping[];
	CT_Boolean VaryColors[];
	CT_AreaSer Ser[];
	CT_DLbls DLbls[];
	CT_ChartLines DropLines[];
} EG_AreaChartShared;

typedef struct {
	EG_AreaChartShared EG_AreaChartShared[];
	CT_UnsignedInt AxId[];
	CT_ExtensionList ExtLst[];
} CT_AreaChart;

typedef struct {
	EG_AreaChartShared EG_AreaChartShared[];
	CT_GapAmount GapDepth[];
	CT_UnsignedInt AxId[];
	CT_ExtensionList ExtLst[];
} CT_Area3DChart;

typedef struct {
	CT_Boolean VaryColors[];
	CT_PieSer Ser[];
	CT_DLbls DLbls[];
} EG_PieChartShared;

typedef struct {
	EG_PieChartShared EG_PieChartShared[];
	CT_FirstSliceAng FirstSliceAng[];
	CT_ExtensionList ExtLst[];
} CT_PieChart;

typedef struct {
	EG_PieChartShared EG_PieChartShared[];
	CT_ExtensionList ExtLst[];
} CT_Pie3DChart;

typedef struct {
	EG_PieChartShared EG_PieChartShared[];
	CT_FirstSliceAng FirstSliceAng[];
	CT_HoleSize HoleSize[];
	CT_ExtensionList ExtLst[];
} CT_DoughnutChart;

typedef char ST_OfPieType;

typedef struct {
	char ValAttr; // attr, optional
} CT_OfPieType;

typedef struct {
	EG_PieChartShared EG_PieChartShared[];
	CT_OfPieType OfPieType[];
	CT_GapAmount GapWidth[];
	CT_SplitType SplitType[];
	CT_Double SplitPos[];
	CT_CustSplit CustSplit[];
	CT_SecondPieSize SecondPieSize[];
	CT_ChartLines SerLines[];
	CT_ExtensionList ExtLst[];
} CT_OfPieChart;

typedef struct {
	CT_Boolean VaryColors[];
	CT_BubbleSer Ser[];
	CT_DLbls DLbls[];
	CT_Boolean Bubble3D[];
	CT_BubbleScale BubbleScale[];
	CT_Boolean ShowNegBubbles[];
	CT_SizeRepresents SizeRepresents[];
	CT_UnsignedInt AxId[];
	CT_ExtensionList ExtLst[];
} CT_BubbleChart;

typedef struct {
	CT_UnsignedInt Idx[];
	CT_ShapeProperties SpPr[];
} CT_BandFmt;

typedef struct {
	CT_BandFmt BandFmt[];
} CT_BandFmts;

typedef struct {
	CT_Boolean Wireframe[];
	CT_SurfaceSer Ser[];
	CT_BandFmts BandFmts[];
} EG_SurfaceChartShared;

typedef struct {
	EG_SurfaceChartShared EG_SurfaceChartShared[];
	CT_UnsignedInt AxId[];
	CT_ExtensionList ExtLst[];
} CT_SurfaceChart;

typedef struct {
	EG_SurfaceChartShared EG_SurfaceChartShared[];
	CT_UnsignedInt AxId[];
	CT_ExtensionList ExtLst[];
} CT_Surface3DChart;

typedef char ST_AxPos;

typedef struct {
	char ValAttr; // attr
} CT_AxPos;

typedef char ST_Crosses;

typedef struct {
	char ValAttr; // attr
} CT_Crosses;

typedef char ST_CrossBetween;

typedef struct {
	char ValAttr; // attr
} CT_CrossBetween;

typedef char ST_TickMark;

typedef struct {
	char ValAttr; // attr, optional
} CT_TickMark;

typedef char ST_TickLblPos;

typedef struct {
	char ValAttr; // attr, optional
} CT_TickLblPos;

typedef unsigned int ST_Skip;

typedef struct {
	unsigned int ValAttr; // attr
} CT_Skip;

typedef char ST_TimeUnit;

typedef struct {
	char ValAttr; // attr, optional
} CT_TimeUnit;

typedef float ST_AxisUnit;

typedef struct {
	float ValAttr; // attr
} CT_AxisUnit;

typedef char ST_BuiltInUnit;

typedef struct {
	char ValAttr; // attr, optional
} CT_BuiltInUnit;

typedef char ST_PictureFormat;

typedef struct {
	char ValAttr; // attr
} CT_PictureFormat;

typedef float ST_PictureStackUnit;

typedef struct {
	float ValAttr; // attr
} CT_PictureStackUnit;

typedef struct {
	CT_Boolean ApplyToFront[];
	CT_Boolean ApplyToSides[];
	CT_Boolean ApplyToEnd[];
	CT_PictureFormat PictureFormat[];
	CT_PictureStackUnit PictureStackUnit[];
} CT_PictureOptions;

typedef struct {
	CT_Layout Layout[];
	CT_Tx Tx[];
	CT_ShapeProperties SpPr[];
	CT_TextBody TxPr[];
} CT_DispUnitsLbl;

typedef struct {
	CT_Double CustUnit[];
	CT_BuiltInUnit BuiltInUnit[];
	CT_DispUnitsLbl DispUnitsLbl[];
	CT_ExtensionList ExtLst[];
} CT_DispUnits;

typedef char ST_Orientation;

typedef struct {
	char ValAttr; // attr, optional
} CT_Orientation;

typedef float ST_LogBase;

typedef struct {
	float ValAttr; // attr
} CT_LogBase;

typedef struct {
	CT_LogBase LogBase[];
	CT_Orientation Orientation[];
	CT_Double Max[];
	CT_Double Min[];
	CT_ExtensionList ExtLst[];
} CT_Scaling;

typedef struct {
	ST_LblOffsetPercent ST_LblOffsetPercent;
} ST_LblOffset;

typedef char ST_LblOffsetPercent;

typedef struct {
	ST_LblOffset ValAttr; // attr, optional
} CT_LblOffset;

typedef struct {
	CT_UnsignedInt AxId[];
	CT_Scaling Scaling[];
	CT_Boolean Delete[];
	CT_AxPos AxPos[];
	CT_ChartLines MajorGridlines[];
	CT_ChartLines MinorGridlines[];
	CT_Title Title[];
	CT_NumFmt NumFmt[];
	CT_TickMark MajorTickMark[];
	CT_TickMark MinorTickMark[];
	CT_TickLblPos TickLblPos[];
	CT_ShapeProperties SpPr[];
	CT_TextBody TxPr[];
	CT_UnsignedInt CrossAx[];
	CT_Crosses Crosses[];
	CT_Double CrossesAt[];
} EG_AxShared;

typedef struct {
	EG_AxShared EG_AxShared[];
	CT_Boolean Auto[];
	CT_LblAlgn LblAlgn[];
	CT_LblOffset LblOffset[];
	CT_Skip TickLblSkip[];
	CT_Skip TickMarkSkip[];
	CT_Boolean NoMultiLvlLbl[];
	CT_ExtensionList ExtLst[];
} CT_CatAx;

typedef struct {
	EG_AxShared EG_AxShared[];
	CT_Boolean Auto[];
	CT_LblOffset LblOffset[];
	CT_TimeUnit BaseTimeUnit[];
	CT_AxisUnit MajorUnit[];
	CT_TimeUnit MajorTimeUnit[];
	CT_AxisUnit MinorUnit[];
	CT_TimeUnit MinorTimeUnit[];
	CT_ExtensionList ExtLst[];
} CT_DateAx;

typedef struct {
	EG_AxShared EG_AxShared[];
	CT_Skip TickLblSkip[];
	CT_Skip TickMarkSkip[];
	CT_ExtensionList ExtLst[];
} CT_SerAx;

typedef struct {
	EG_AxShared EG_AxShared[];
	CT_CrossBetween CrossBetween[];
	CT_AxisUnit MajorUnit[];
	CT_AxisUnit MinorUnit[];
	CT_DispUnits DispUnits[];
	CT_ExtensionList ExtLst[];
} CT_ValAx;

typedef struct {
	CT_Layout Layout[];
	CT_AreaChart AreaChart[];
	CT_Area3DChart Area3DChart[];
	CT_LineChart LineChart[];
	CT_Line3DChart Line3DChart[];
	CT_StockChart StockChart[];
	CT_RadarChart RadarChart[];
	CT_ScatterChart ScatterChart[];
	CT_PieChart PieChart[];
	CT_Pie3DChart Pie3DChart[];
	CT_DoughnutChart DoughnutChart[];
	CT_BarChart BarChart[];
	CT_Bar3DChart Bar3DChart[];
	CT_OfPieChart OfPieChart[];
	CT_SurfaceChart SurfaceChart[];
	CT_Surface3DChart Surface3DChart[];
	CT_BubbleChart BubbleChart[];
	CT_ValAx ValAx[];
	CT_CatAx CatAx[];
	CT_DateAx DateAx[];
	CT_SerAx SerAx[];
	CT_DTable DTable[];
	CT_ShapeProperties SpPr[];
	CT_ExtensionList ExtLst[];
} CT_PlotArea;

typedef struct {
	CT_UnsignedInt Idx[];
	CT_ShapeProperties SpPr[];
	CT_TextBody TxPr[];
	CT_Marker Marker[];
	CT_DLbl DLbl[];
	CT_ExtensionList ExtLst[];
} CT_PivotFmt;

typedef struct {
	CT_PivotFmt PivotFmt[];
} CT_PivotFmts;

typedef char ST_LegendPos;

typedef struct {
	char ValAttr; // attr, optional
} CT_LegendPos;

typedef struct {
	CT_TextBody TxPr[];
} EG_LegendEntryData;

typedef struct {
	EG_LegendEntryData EG_LegendEntryData[];
	CT_UnsignedInt Idx[];
	CT_Boolean Delete[];
	CT_ExtensionList ExtLst[];
} CT_LegendEntry;

typedef struct {
	CT_LegendPos LegendPos[];
	CT_LegendEntry LegendEntry[];
	CT_Layout Layout[];
	CT_Boolean Overlay[];
	CT_ShapeProperties SpPr[];
	CT_TextBody TxPr[];
	CT_ExtensionList ExtLst[];
} CT_Legend;

typedef char ST_DispBlanksAs;

typedef struct {
	char ValAttr; // attr, optional
} CT_DispBlanksAs;

typedef struct {
	CT_Title Title[];
	CT_Boolean AutoTitleDeleted[];
	CT_PivotFmts PivotFmts[];
	CT_View3D View3D[];
	CT_Surface Floor[];
	CT_Surface SideWall[];
	CT_Surface BackWall[];
	CT_PlotArea PlotArea[];
	CT_Legend Legend[];
	CT_Boolean PlotVisOnly[];
	CT_DispBlanksAs DispBlanksAs[];
	CT_Boolean ShowDLblsOverMax[];
	CT_ExtensionList ExtLst[];
} CT_Chart;

typedef char ST_Style;

typedef struct {
	char ValAttr; // attr
} CT_Style;

typedef struct {
	char Name[];
	CT_UnsignedInt FmtId[];
	CT_ExtensionList ExtLst[];
} CT_PivotSource;

typedef struct {
	CT_Boolean ChartObject[];
	CT_Boolean Data[];
	CT_Boolean Formatting[];
	CT_Boolean Selection[];
	CT_Boolean UserInterface[];
} CT_Protection;

typedef struct {
	bool AlignWithMarginsAttr; // attr, optional
	bool DifferentOddEvenAttr; // attr, optional
	bool DifferentFirstAttr; // attr, optional
	char OddHeader[];
	char OddFooter[];
	char EvenHeader[];
	char EvenFooter[];
	char FirstHeader[];
	char FirstFooter[];
} CT_HeaderFooter;

typedef struct {
	float LAttr; // attr
	float RAttr; // attr
	float TAttr; // attr
	float BAttr; // attr
	float HeaderAttr; // attr
	float FooterAttr; // attr
} CT_PageMargins;

typedef char ST_PageSetupOrientation;

typedef struct {
	char RIdAttr; // attr
	CT_Boolean AutoUpdate[];
} CT_ExternalData;

typedef struct {
	unsigned int PaperSizeAttr; // attr, optional
	char PaperHeightAttr; // attr, optional
	char PaperWidthAttr; // attr, optional
	unsigned int FirstPageNumberAttr; // attr, optional
	char OrientationAttr; // attr, optional
	bool BlackAndWhiteAttr; // attr, optional
	bool DraftAttr; // attr, optional
	bool UseFirstPageNumberAttr; // attr, optional
	int HorizontalDpiAttr; // attr, optional
	int VerticalDpiAttr; // attr, optional
	unsigned int CopiesAttr; // attr, optional
} CT_PageSetup;

typedef struct {
	CT_HeaderFooter HeaderFooter[];
	CT_PageMargins PageMargins[];
	CT_PageSetup PageSetup[];
} CT_PrintSettings;

typedef struct {
	CT_Boolean Date1904[];
	CT_TextLanguageID Lang[];
	CT_Boolean RoundedCorners[];
	CT_Style Style[];
	CT_ColorMapping ClrMapOvr[];
	CT_PivotSource PivotSource[];
	CT_Protection Protection[];
	CT_Chart Chart[];
	CT_ShapeProperties SpPr[];
	CT_TextBody TxPr[];
	CT_ExternalData ExternalData[];
	CT_PrintSettings PrintSettings[];
	CT_RelId UserShapes[];
	CT_ExtensionList ExtLst[];
} CT_ChartSpace;

typedef CT_ChartSpace ChartSpace;

typedef CT_Drawing UserShapes;

typedef CT_RelId Chart;
