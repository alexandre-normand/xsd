// Code generated by xgen. DO NOT EDIT.

typedef struct {
	char RefAttr; // attr, optional
	CT_FilterColumn FilterColumn[];
	CT_SortState SortState[];
	CT_ExtensionList ExtLst[];
} CT_AutoFilter;

typedef struct {
	unsigned int ColIdAttr; // attr
	bool HiddenButtonAttr; // attr, optional
	bool ShowButtonAttr; // attr, optional
	CT_Filters Filters[];
	CT_Top10 Top10[];
	CT_CustomFilters CustomFilters[];
	CT_DynamicFilter DynamicFilter[];
	CT_ColorFilter ColorFilter[];
	CT_IconFilter IconFilter[];
	CT_ExtensionList ExtLst[];
} CT_FilterColumn;

typedef struct {
	bool BlankAttr; // attr, optional
	char CalendarTypeAttr; // attr, optional
	CT_Filter Filter[];
	CT_DateGroupItem DateGroupItem[];
} CT_Filters;

typedef struct {
	char ValAttr; // attr, optional
} CT_Filter;

typedef struct {
	bool AndAttr; // attr, optional
	CT_CustomFilter CustomFilter[];
} CT_CustomFilters;

typedef struct {
	char OperatorAttr; // attr, optional
	char ValAttr; // attr, optional
} CT_CustomFilter;

typedef struct {
	bool TopAttr; // attr, optional
	bool PercentAttr; // attr, optional
	float ValAttr; // attr
	float FilterValAttr; // attr, optional
} CT_Top10;

typedef struct {
	unsigned int DxfIdAttr; // attr, optional
	bool CellColorAttr; // attr, optional
} CT_ColorFilter;

typedef struct {
	char IconSetAttr; // attr
	unsigned int IconIdAttr; // attr, optional
} CT_IconFilter;

typedef char ST_FilterOperator;

typedef struct {
	char TypeAttr; // attr
	float ValAttr; // attr, optional
	char ValIsoAttr; // attr, optional
	char MaxValIsoAttr; // attr, optional
} CT_DynamicFilter;

typedef char ST_DynamicFilterType;

typedef char ST_IconSetType;

typedef struct {
	bool ColumnSortAttr; // attr, optional
	bool CaseSensitiveAttr; // attr, optional
	char SortMethodAttr; // attr, optional
	char RefAttr; // attr
	CT_SortCondition SortCondition[];
	CT_ExtensionList ExtLst[];
} CT_SortState;

typedef struct {
	bool DescendingAttr; // attr, optional
	char SortByAttr; // attr, optional
	char RefAttr; // attr
	char CustomListAttr; // attr, optional
	unsigned int DxfIdAttr; // attr, optional
	char IconSetAttr; // attr, optional
	unsigned int IconIdAttr; // attr, optional
} CT_SortCondition;

typedef char ST_SortBy;

typedef char ST_SortMethod;

typedef struct {
	unsigned int YearAttr; // attr
	unsigned int MonthAttr; // attr, optional
	unsigned int DayAttr; // attr, optional
	unsigned int HourAttr; // attr, optional
	unsigned int MinuteAttr; // attr, optional
	unsigned int SecondAttr; // attr, optional
	char DateTimeGroupingAttr; // attr
} CT_DateGroupItem;

typedef char ST_DateTimeGrouping;

typedef char ST_CellRef;

typedef char ST_Ref;

typedef char ST_RefA;

typedef char ST_Sqref[];

typedef char ST_Formula;

typedef char ST_UnsignedIntHex[];

typedef struct {
	char VAttr; // attr
} CT_XStringElement;

typedef struct {
	char UriAttr; // attr, optional
} CT_Extension;

typedef struct {
	bool MoveWithCellsAttr; // attr, optional
	bool SizeWithCellsAttr; // attr, optional
	CT_Marker XdrFrom[];
	CT_Marker XdrTo[];
} CT_ObjectAnchor;

typedef struct {
	CT_Extension Ext[];
} EG_ExtensionList;

typedef struct {
	EG_ExtensionList EG_ExtensionList;
} CT_ExtensionList;

typedef CT_CalcChain CalcChain;

typedef struct {
	CT_CalcCell C[];
	CT_ExtensionList ExtLst;
} CT_CalcChain;

typedef struct {
	char RAttr; // attr
	int IAttr; // attr, optional
	bool SAttr; // attr, optional
	bool LAttr; // attr, optional
	bool TAttr; // attr, optional
	bool AAttr; // attr, optional
} CT_CalcCell;

typedef CT_Comments Comments;

typedef struct {
	CT_Authors Authors[];
	CT_CommentList CommentList[];
	CT_ExtensionList ExtLst;
} CT_Comments;

typedef struct {
	char Author[];
} CT_Authors;

typedef struct {
	CT_Comment Comment[];
} CT_CommentList;

typedef struct {
	char RefAttr; // attr
	unsigned int AuthorIdAttr; // attr
	char GuidAttr; // attr, optional
	unsigned int ShapeIdAttr; // attr, optional
	CT_Rst Text[];
	CT_CommentPr CommentPr[];
} CT_Comment;

typedef struct {
	bool LockedAttr; // attr, optional
	bool DefaultSizeAttr; // attr, optional
	bool PrintAttr; // attr, optional
	bool DisabledAttr; // attr, optional
	bool AutoFillAttr; // attr, optional
	bool AutoLineAttr; // attr, optional
	char AltTextAttr; // attr, optional
	char TextHAlignAttr; // attr, optional
	char TextVAlignAttr; // attr, optional
	bool LockTextAttr; // attr, optional
	bool JustLastXAttr; // attr, optional
	bool AutoScaleAttr; // attr, optional
	CT_ObjectAnchor Anchor[];
} CT_CommentPr;

typedef char ST_TextHAlign;

typedef char ST_TextVAlign;

typedef CT_MapInfo MapInfo;

typedef struct {
	char SelectionNamespacesAttr; // attr
	CT_Schema Schema[];
	CT_Map Map[];
} CT_MapInfo;

typedef struct {
	char IDAttr; // attr
	char SchemaRefAttr; // attr, optional
	char NamespaceAttr; // attr, optional
	char SchemaLanguageAttr; // attr, optional
} CT_Schema;

typedef struct {
	unsigned int IDAttr; // attr
	char NameAttr; // attr
	char RootElementAttr; // attr
	char SchemaIDAttr; // attr
	bool ShowImportExportValidationErrorsAttr; // attr
	bool AutoFitAttr; // attr
	bool AppendAttr; // attr
	bool PreserveSortAFLayoutAttr; // attr
	bool PreserveFormatAttr; // attr
	CT_DataBinding DataBinding[];
} CT_Map;

typedef struct {
	char DataBindingNameAttr; // attr, optional
	bool FileBindingAttr; // attr, optional
	unsigned int ConnectionIDAttr; // attr, optional
	char FileBindingNameAttr; // attr, optional
	unsigned int DataBindingLoadModeAttr; // attr
} CT_DataBinding;

typedef CT_Connections Connections;

typedef struct {
	CT_Connection Connection[];
} CT_Connections;

typedef struct {
	unsigned int IdAttr; // attr
	char SourceFileAttr; // attr, optional
	char OdcFileAttr; // attr, optional
	bool KeepAliveAttr; // attr, optional
	unsigned int IntervalAttr; // attr, optional
	char NameAttr; // attr, optional
	char DescriptionAttr; // attr, optional
	unsigned int TypeAttr; // attr, optional
	unsigned int ReconnectionMethodAttr; // attr, optional
	char RefreshedVersionAttr; // attr
	char MinRefreshableVersionAttr; // attr, optional
	bool SavePasswordAttr; // attr, optional
	bool NewAttr; // attr, optional
	bool DeletedAttr; // attr, optional
	bool OnlyUseConnectionFileAttr; // attr, optional
	bool BackgroundAttr; // attr, optional
	bool RefreshOnLoadAttr; // attr, optional
	bool SaveDataAttr; // attr, optional
	char CredentialsAttr; // attr, optional
	char SingleSignOnIdAttr; // attr, optional
	CT_DbPr DbPr[];
	CT_OlapPr OlapPr[];
	CT_WebPr WebPr[];
	CT_TextPr TextPr[];
	CT_Parameters Parameters[];
	CT_ExtensionList ExtLst[];
} CT_Connection;

typedef char ST_CredMethod;

typedef struct {
	char ConnectionAttr; // attr
	char CommandAttr; // attr, optional
	char ServerCommandAttr; // attr, optional
	unsigned int CommandTypeAttr; // attr, optional
} CT_DbPr;

typedef struct {
	bool LocalAttr; // attr, optional
	char LocalConnectionAttr; // attr, optional
	bool LocalRefreshAttr; // attr, optional
	bool SendLocaleAttr; // attr, optional
	unsigned int RowDrillCountAttr; // attr, optional
	bool ServerFillAttr; // attr, optional
	bool ServerNumberFormatAttr; // attr, optional
	bool ServerFontAttr; // attr, optional
	bool ServerFontColorAttr; // attr, optional
} CT_OlapPr;

typedef struct {
	bool XmlAttr; // attr, optional
	bool SourceDataAttr; // attr, optional
	bool ParsePreAttr; // attr, optional
	bool ConsecutiveAttr; // attr, optional
	bool FirstRowAttr; // attr, optional
	bool Xl97Attr; // attr, optional
	bool TextDatesAttr; // attr, optional
	bool Xl2000Attr; // attr, optional
	char UrlAttr; // attr, optional
	char PostAttr; // attr, optional
	bool HtmlTablesAttr; // attr, optional
	char HtmlFormatAttr; // attr, optional
	char EditPageAttr; // attr, optional
	CT_Tables Tables[];
} CT_WebPr;

typedef char ST_HtmlFmt;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Parameter Parameter[];
} CT_Parameters;

typedef struct {
	char NameAttr; // attr, optional
	int SqlTypeAttr; // attr, optional
	char ParameterTypeAttr; // attr, optional
	bool RefreshOnChangeAttr; // attr, optional
	char PromptAttr; // attr, optional
	bool BooleanAttr; // attr, optional
	float DoubleAttr; // attr, optional
	int IntegerAttr; // attr, optional
	char StringAttr; // attr, optional
	char CellAttr; // attr, optional
} CT_Parameter;

typedef char ST_ParameterType;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_TableMissing M;
	CT_XStringElement S;
	CT_Index X;
} CT_Tables;

typedef struct {
} CT_TableMissing;

typedef struct {
	bool PromptAttr; // attr, optional
	char FileTypeAttr; // attr, optional
	char CharacterSetAttr; // attr, optional
	unsigned int FirstRowAttr; // attr, optional
	char SourceFileAttr; // attr, optional
	bool DelimitedAttr; // attr, optional
	char DecimalAttr; // attr, optional
	char ThousandsAttr; // attr, optional
	bool TabAttr; // attr, optional
	bool SpaceAttr; // attr, optional
	bool CommaAttr; // attr, optional
	bool SemicolonAttr; // attr, optional
	bool ConsecutiveAttr; // attr, optional
	char QualifierAttr; // attr, optional
	char DelimiterAttr; // attr, optional
	CT_TextFields TextFields[];
} CT_TextPr;

typedef char ST_FileType;

typedef char ST_Qualifier;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_TextField TextField[];
} CT_TextFields;

typedef struct {
	char TypeAttr; // attr, optional
	unsigned int PositionAttr; // attr, optional
} CT_TextField;

typedef char ST_ExternalConnectionType;

typedef CT_PivotCacheDefinition PivotCacheDefinition;

typedef CT_PivotCacheRecords PivotCacheRecords;

typedef CT_pivotTableDefinition PivotTableDefinition;

typedef struct {
	char RIdAttr; // attr, optional
	bool InvalidAttr; // attr, optional
	bool SaveDataAttr; // attr, optional
	bool RefreshOnLoadAttr; // attr, optional
	bool OptimizeMemoryAttr; // attr, optional
	bool EnableRefreshAttr; // attr, optional
	char RefreshedByAttr; // attr, optional
	char RefreshedDateIsoAttr; // attr, optional
	bool BackgroundQueryAttr; // attr, optional
	unsigned int MissingItemsLimitAttr; // attr, optional
	char CreatedVersionAttr; // attr, optional
	char RefreshedVersionAttr; // attr, optional
	char MinRefreshableVersionAttr; // attr, optional
	unsigned int RecordCountAttr; // attr, optional
	bool UpgradeOnRefreshAttr; // attr, optional
	bool TupleCacheAttr; // attr, optional
	bool SupportSubqueryAttr; // attr, optional
	bool SupportAdvancedDrillAttr; // attr, optional
	CT_CacheSource CacheSource[];
	CT_CacheFields CacheFields[];
	CT_CacheHierarchies CacheHierarchies;
	CT_PCDKPIs Kpis;
	CT_TupleCache TupleCache;
	CT_CalculatedItems CalculatedItems;
	CT_CalculatedMembers CalculatedMembers;
	CT_Dimensions Dimensions;
	CT_MeasureGroups MeasureGroups;
	CT_MeasureDimensionMaps Maps;
	CT_ExtensionList ExtLst;
} CT_PivotCacheDefinition;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_CacheField CacheField[];
} CT_CacheFields;

typedef struct {
	char NameAttr; // attr
	char CaptionAttr; // attr, optional
	char PropertyNameAttr; // attr, optional
	bool ServerFieldAttr; // attr, optional
	bool UniqueListAttr; // attr, optional
	unsigned int NumFmtIdAttr; // attr, optional
	char FormulaAttr; // attr, optional
	int SqlTypeAttr; // attr, optional
	int HierarchyAttr; // attr, optional
	unsigned int LevelAttr; // attr, optional
	bool DatabaseFieldAttr; // attr, optional
	unsigned int MappingCountAttr; // attr, optional
	bool MemberPropertyFieldAttr; // attr, optional
	CT_SharedItems SharedItems[];
	CT_FieldGroup FieldGroup;
	CT_X MpMap[];
	CT_ExtensionList ExtLst;
} CT_CacheField;

typedef struct {
	char TypeAttr; // attr
	unsigned int ConnectionIdAttr; // attr, optional
	CT_WorksheetSource WorksheetSource[];
	CT_Consolidation Consolidation[];
	CT_ExtensionList ExtLst;
} CT_CacheSource;

typedef char ST_SourceType;

typedef struct {
	char RefAttr; // attr, optional
	char NameAttr; // attr, optional
	char SheetAttr; // attr, optional
	char RIdAttr; // attr, optional
} CT_WorksheetSource;

typedef struct {
	bool AutoPageAttr; // attr, optional
	CT_Pages Pages[];
	CT_RangeSets RangeSets[];
} CT_Consolidation;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_PCDSCPage Page[];
} CT_Pages;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_PageItem PageItem[];
} CT_PCDSCPage;

typedef struct {
	char NameAttr; // attr
} CT_PageItem;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_RangeSet RangeSet[];
} CT_RangeSets;

typedef struct {
	unsigned int I1Attr; // attr, optional
	unsigned int I2Attr; // attr, optional
	unsigned int I3Attr; // attr, optional
	unsigned int I4Attr; // attr, optional
	char RefAttr; // attr, optional
	char NameAttr; // attr, optional
	char SheetAttr; // attr, optional
	char RIdAttr; // attr, optional
} CT_RangeSet;

typedef struct {
	bool ContainsSemiMixedTypesAttr; // attr, optional
	bool ContainsNonDateAttr; // attr, optional
	bool ContainsDateAttr; // attr, optional
	bool ContainsStringAttr; // attr, optional
	bool ContainsBlankAttr; // attr, optional
	bool ContainsMixedTypesAttr; // attr, optional
	bool ContainsNumberAttr; // attr, optional
	bool ContainsIntegerAttr; // attr, optional
	float MinValueAttr; // attr, optional
	float MaxValueAttr; // attr, optional
	char MinDateAttr; // attr, optional
	char MaxDateAttr; // attr, optional
	unsigned int CountAttr; // attr, optional
	bool LongTextAttr; // attr, optional
	CT_Missing M[];
	CT_Number N[];
	CT_Boolean B[];
	CT_Error E[];
	CT_String S[];
	CT_DateTime D[];
} CT_SharedItems;

typedef struct {
	bool UAttr; // attr, optional
	bool FAttr; // attr, optional
	char CAttr; // attr, optional
	unsigned int CpAttr; // attr, optional
	unsigned int InAttr; // attr, optional
	char BcAttr[]; // attr, optional
	char FcAttr[]; // attr, optional
	bool IAttr; // attr, optional
	bool UnAttr; // attr, optional
	bool StAttr; // attr, optional
	bool BAttr; // attr, optional
	CT_Tuples Tpls[];
	CT_X X[];
} CT_Missing;

typedef struct {
	float VAttr; // attr
	bool UAttr; // attr, optional
	bool FAttr; // attr, optional
	char CAttr; // attr, optional
	unsigned int CpAttr; // attr, optional
	unsigned int InAttr; // attr, optional
	char BcAttr[]; // attr, optional
	char FcAttr[]; // attr, optional
	bool IAttr; // attr, optional
	bool UnAttr; // attr, optional
	bool StAttr; // attr, optional
	bool BAttr; // attr, optional
	CT_Tuples Tpls[];
	CT_X X[];
} CT_Number;

typedef struct {
	bool VAttr; // attr
	bool UAttr; // attr, optional
	bool FAttr; // attr, optional
	char CAttr; // attr, optional
	unsigned int CpAttr; // attr, optional
	CT_X X[];
} CT_Boolean;

typedef struct {
	char VAttr; // attr
	bool UAttr; // attr, optional
	bool FAttr; // attr, optional
	char CAttr; // attr, optional
	unsigned int CpAttr; // attr, optional
	unsigned int InAttr; // attr, optional
	char BcAttr[]; // attr, optional
	char FcAttr[]; // attr, optional
	bool IAttr; // attr, optional
	bool UnAttr; // attr, optional
	bool StAttr; // attr, optional
	bool BAttr; // attr, optional
	CT_Tuples Tpls;
	CT_X X[];
} CT_Error;

typedef struct {
	char VAttr; // attr
	bool UAttr; // attr, optional
	bool FAttr; // attr, optional
	char CAttr; // attr, optional
	unsigned int CpAttr; // attr, optional
	unsigned int InAttr; // attr, optional
	char BcAttr[]; // attr, optional
	char FcAttr[]; // attr, optional
	bool IAttr; // attr, optional
	bool UnAttr; // attr, optional
	bool StAttr; // attr, optional
	bool BAttr; // attr, optional
	CT_Tuples Tpls[];
	CT_X X[];
} CT_String;

typedef struct {
	char VAttr; // attr
	bool UAttr; // attr, optional
	bool FAttr; // attr, optional
	char CAttr; // attr, optional
	unsigned int CpAttr; // attr, optional
	CT_X X[];
} CT_DateTime;

typedef struct {
	unsigned int ParAttr; // attr, optional
	unsigned int BaseAttr; // attr, optional
	CT_RangePr RangePr;
	CT_DiscretePr DiscretePr;
	CT_GroupItems GroupItems;
} CT_FieldGroup;

typedef struct {
	bool AutoStartAttr; // attr, optional
	bool AutoEndAttr; // attr, optional
	char GroupByAttr; // attr, optional
	float StartNumAttr; // attr, optional
	float EndNumAttr; // attr, optional
	char StartDateAttr; // attr, optional
	char EndDateAttr; // attr, optional
	float GroupIntervalAttr; // attr, optional
} CT_RangePr;

typedef char ST_GroupBy;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Index X[];
} CT_DiscretePr;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Missing M;
	CT_Number N;
	CT_Boolean B;
	CT_Error E;
	CT_String S;
	CT_DateTime D;
} CT_GroupItems;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Record R[];
	CT_ExtensionList ExtLst;
} CT_PivotCacheRecords;

typedef struct {
	CT_Missing M;
	CT_Number N;
	CT_Boolean B;
	CT_Error E;
	CT_String S;
	CT_DateTime D;
	CT_Index X;
} CT_Record;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_PCDKPI Kpi[];
} CT_PCDKPIs;

typedef struct {
	char UniqueNameAttr; // attr
	char CaptionAttr; // attr, optional
	char DisplayFolderAttr; // attr, optional
	char MeasureGroupAttr; // attr, optional
	char ParentAttr; // attr, optional
	char ValueAttr; // attr
	char GoalAttr; // attr, optional
	char StatusAttr; // attr, optional
	char TrendAttr; // attr, optional
	char WeightAttr; // attr, optional
	char TimeAttr; // attr, optional
} CT_PCDKPI;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_CacheHierarchy CacheHierarchy[];
} CT_CacheHierarchies;

typedef struct {
	char UniqueNameAttr; // attr
	char CaptionAttr; // attr, optional
	bool MeasureAttr; // attr, optional
	bool SetAttr; // attr, optional
	unsigned int ParentSetAttr; // attr, optional
	int IconSetAttr; // attr, optional
	bool AttributeAttr; // attr, optional
	bool TimeAttr; // attr, optional
	bool KeyAttributeAttr; // attr, optional
	char DefaultMemberUniqueNameAttr; // attr, optional
	char AllUniqueNameAttr; // attr, optional
	char AllCaptionAttr; // attr, optional
	char DimensionUniqueNameAttr; // attr, optional
	char DisplayFolderAttr; // attr, optional
	char MeasureGroupAttr; // attr, optional
	bool MeasuresAttr; // attr, optional
	unsigned int CountAttr; // attr
	bool OneFieldAttr; // attr, optional
	unsigned int MemberValueDatatypeAttr; // attr, optional
	bool UnbalancedAttr; // attr, optional
	bool UnbalancedGroupAttr; // attr, optional
	bool HiddenAttr; // attr, optional
	CT_FieldsUsage FieldsUsage;
	CT_GroupLevels GroupLevels;
	CT_ExtensionList ExtLst;
} CT_CacheHierarchy;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_FieldUsage FieldUsage[];
} CT_FieldsUsage;

typedef struct {
	int XAttr; // attr
} CT_FieldUsage;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_GroupLevel GroupLevel[];
} CT_GroupLevels;

typedef struct {
	char UniqueNameAttr; // attr
	char CaptionAttr; // attr
	bool UserAttr; // attr, optional
	bool CustomRollUpAttr; // attr, optional
	CT_Groups Groups;
	CT_ExtensionList ExtLst;
} CT_GroupLevel;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_LevelGroup Group[];
} CT_Groups;

typedef struct {
	char NameAttr; // attr
	char UniqueNameAttr; // attr
	char CaptionAttr; // attr
	char UniqueParentAttr; // attr, optional
	int IdAttr; // attr, optional
	CT_GroupMembers GroupMembers;
} CT_LevelGroup;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_GroupMember GroupMember[];
} CT_GroupMembers;

typedef struct {
	char UniqueNameAttr; // attr
	bool GroupAttr; // attr, optional
} CT_GroupMember;

typedef struct {
	CT_PCDSDTCEntries Entries;
	CT_Sets Sets;
	CT_QueryCache QueryCache;
	CT_ServerFormats ServerFormats[];
	CT_ExtensionList ExtLst;
} CT_TupleCache;

typedef struct {
	char CultureAttr; // attr, optional
	char FormatAttr; // attr, optional
} CT_ServerFormat;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_ServerFormat ServerFormat[];
} CT_ServerFormats;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Missing M;
	CT_Number N;
	CT_Error E;
	CT_String S;
} CT_PCDSDTCEntries;

typedef struct {
	unsigned int CAttr; // attr, optional
	CT_Tuple Tpl[];
} CT_Tuples;

typedef struct {
	unsigned int FldAttr; // attr, optional
	unsigned int HierAttr; // attr, optional
	unsigned int ItemAttr; // attr
} CT_Tuple;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Set Set[];
} CT_Sets;

typedef struct {
	unsigned int CountAttr; // attr, optional
	int MaxRankAttr; // attr
	char SetDefinitionAttr; // attr
	char SortTypeAttr; // attr, optional
	bool QueryFailedAttr; // attr, optional
	CT_Tuples Tpls[];
	CT_Tuples SortByTuple;
} CT_Set;

typedef char ST_SortType;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Query Query[];
} CT_QueryCache;

typedef struct {
	char MdxAttr; // attr
	CT_Tuples Tpls;
} CT_Query;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_CalculatedItem CalculatedItem[];
} CT_CalculatedItems;

typedef struct {
	unsigned int FieldAttr; // attr, optional
	char FormulaAttr; // attr, optional
	CT_PivotArea PivotArea;
	CT_ExtensionList ExtLst;
} CT_CalculatedItem;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_CalculatedMember CalculatedMember[];
} CT_CalculatedMembers;

typedef struct {
	char NameAttr; // attr
	char MdxAttr; // attr
	char MemberNameAttr; // attr, optional
	char HierarchyAttr; // attr, optional
	char ParentAttr; // attr, optional
	int SolveOrderAttr; // attr, optional
	bool SetAttr; // attr, optional
	CT_ExtensionList ExtLst;
} CT_CalculatedMember;

typedef struct {
	AG_AutoFormat AG_AutoFormat;
	char NameAttr; // attr
	unsigned int CacheIdAttr; // attr
	bool DataOnRowsAttr; // attr, optional
	unsigned int DataPositionAttr; // attr, optional
	char DataCaptionAttr; // attr
	char GrandTotalCaptionAttr; // attr, optional
	char ErrorCaptionAttr; // attr, optional
	bool ShowErrorAttr; // attr, optional
	char MissingCaptionAttr; // attr, optional
	bool ShowMissingAttr; // attr, optional
	char PageStyleAttr; // attr, optional
	char PivotTableStyleAttr; // attr, optional
	char VacatedStyleAttr; // attr, optional
	char TagAttr; // attr, optional
	char UpdatedVersionAttr; // attr, optional
	char MinRefreshableVersionAttr; // attr, optional
	bool AsteriskTotalsAttr; // attr, optional
	bool ShowItemsAttr; // attr, optional
	bool EditDataAttr; // attr, optional
	bool DisableFieldListAttr; // attr, optional
	bool ShowCalcMbrsAttr; // attr, optional
	bool VisualTotalsAttr; // attr, optional
	bool ShowMultipleLabelAttr; // attr, optional
	bool ShowDataDropDownAttr; // attr, optional
	bool ShowDrillAttr; // attr, optional
	bool PrintDrillAttr; // attr, optional
	bool ShowMemberPropertyTipsAttr; // attr, optional
	bool ShowDataTipsAttr; // attr, optional
	bool EnableWizardAttr; // attr, optional
	bool EnableDrillAttr; // attr, optional
	bool EnableFieldPropertiesAttr; // attr, optional
	bool PreserveFormattingAttr; // attr, optional
	bool UseAutoFormattingAttr; // attr, optional
	unsigned int PageWrapAttr; // attr, optional
	bool PageOverThenDownAttr; // attr, optional
	bool SubtotalHiddenItemsAttr; // attr, optional
	bool RowGrandTotalsAttr; // attr, optional
	bool ColGrandTotalsAttr; // attr, optional
	bool FieldPrintTitlesAttr; // attr, optional
	bool ItemPrintTitlesAttr; // attr, optional
	bool MergeItemAttr; // attr, optional
	bool ShowDropZonesAttr; // attr, optional
	char CreatedVersionAttr; // attr, optional
	unsigned int IndentAttr; // attr, optional
	bool ShowEmptyRowAttr; // attr, optional
	bool ShowEmptyColAttr; // attr, optional
	bool ShowHeadersAttr; // attr, optional
	bool CompactAttr; // attr, optional
	bool OutlineAttr; // attr, optional
	bool OutlineDataAttr; // attr, optional
	bool CompactDataAttr; // attr, optional
	bool PublishedAttr; // attr, optional
	bool GridDropZonesAttr; // attr, optional
	bool ImmersiveAttr; // attr, optional
	bool MultipleFieldFiltersAttr; // attr, optional
	unsigned int ChartFormatAttr; // attr, optional
	char RowHeaderCaptionAttr; // attr, optional
	char ColHeaderCaptionAttr; // attr, optional
	bool FieldListSortAscendingAttr; // attr, optional
	bool MdxSubqueriesAttr; // attr, optional
	bool CustomListSortAttr; // attr, optional
	CT_Location Location;
	CT_PivotFields PivotFields;
	CT_RowFields RowFields;
	CT_rowItems RowItems;
	CT_ColFields ColFields;
	CT_colItems ColItems;
	CT_PageFields PageFields;
	CT_DataFields DataFields;
	CT_Formats Formats;
	CT_ConditionalFormats ConditionalFormats;
	CT_ChartFormats ChartFormats;
	CT_PivotHierarchies PivotHierarchies;
	CT_PivotTableStyle PivotTableStyleInfo[];
	CT_PivotFilters Filters[];
	CT_RowHierarchiesUsage RowHierarchiesUsage[];
	CT_ColHierarchiesUsage ColHierarchiesUsage[];
	CT_ExtensionList ExtLst;
} CT_pivotTableDefinition;

typedef struct {
	char RefAttr; // attr
	unsigned int FirstHeaderRowAttr; // attr
	unsigned int FirstDataRowAttr; // attr
	unsigned int FirstDataColAttr; // attr
	unsigned int RowPageCountAttr; // attr, optional
	unsigned int ColPageCountAttr; // attr, optional
} CT_Location;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_PivotField PivotField[];
} CT_PivotFields;

typedef struct {
	char NameAttr; // attr, optional
	char AxisAttr; // attr, optional
	bool DataFieldAttr; // attr, optional
	char SubtotalCaptionAttr; // attr, optional
	bool ShowDropDownsAttr; // attr, optional
	bool HiddenLevelAttr; // attr, optional
	char UniqueMemberPropertyAttr; // attr, optional
	bool CompactAttr; // attr, optional
	bool AllDrilledAttr; // attr, optional
	unsigned int NumFmtIdAttr; // attr, optional
	bool OutlineAttr; // attr, optional
	bool SubtotalTopAttr; // attr, optional
	bool DragToRowAttr; // attr, optional
	bool DragToColAttr; // attr, optional
	bool MultipleItemSelectionAllowedAttr; // attr, optional
	bool DragToPageAttr; // attr, optional
	bool DragToDataAttr; // attr, optional
	bool DragOffAttr; // attr, optional
	bool ShowAllAttr; // attr, optional
	bool InsertBlankRowAttr; // attr, optional
	bool ServerFieldAttr; // attr, optional
	bool InsertPageBreakAttr; // attr, optional
	bool AutoShowAttr; // attr, optional
	bool TopAutoShowAttr; // attr, optional
	bool HideNewItemsAttr; // attr, optional
	bool MeasureFilterAttr; // attr, optional
	bool IncludeNewItemsInFilterAttr; // attr, optional
	unsigned int ItemPageCountAttr; // attr, optional
	char SortTypeAttr; // attr, optional
	bool DataSourceSortAttr; // attr, optional
	bool NonAutoSortDefaultAttr; // attr, optional
	unsigned int RankByAttr; // attr, optional
	bool DefaultSubtotalAttr; // attr, optional
	bool SumSubtotalAttr; // attr, optional
	bool CountASubtotalAttr; // attr, optional
	bool AvgSubtotalAttr; // attr, optional
	bool MaxSubtotalAttr; // attr, optional
	bool MinSubtotalAttr; // attr, optional
	bool ProductSubtotalAttr; // attr, optional
	bool CountSubtotalAttr; // attr, optional
	bool StdDevSubtotalAttr; // attr, optional
	bool StdDevPSubtotalAttr; // attr, optional
	bool VarSubtotalAttr; // attr, optional
	bool VarPSubtotalAttr; // attr, optional
	bool ShowPropCellAttr; // attr, optional
	bool ShowPropTipAttr; // attr, optional
	bool ShowPropAsCaptionAttr; // attr, optional
	bool DefaultAttributeDrillStateAttr; // attr, optional
	CT_Items Items;
	CT_AutoSortScope AutoSortScope;
	CT_ExtensionList ExtLst;
} CT_PivotField;

typedef struct {
	CT_PivotArea PivotArea;
} CT_AutoSortScope;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Item Item[];
} CT_Items;

typedef struct {
	char NAttr; // attr, optional
	char TAttr; // attr, optional
	bool HAttr; // attr, optional
	bool SAttr; // attr, optional
	bool SdAttr; // attr, optional
	bool FAttr; // attr, optional
	bool MAttr; // attr, optional
	bool CAttr; // attr, optional
	unsigned int XAttr; // attr, optional
	bool DAttr; // attr, optional
	bool EAttr; // attr, optional
} CT_Item;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_PageField PageField[];
} CT_PageFields;

typedef struct {
	int FldAttr; // attr
	unsigned int ItemAttr; // attr, optional
	int HierAttr; // attr, optional
	char NameAttr; // attr, optional
	char CapAttr; // attr, optional
	CT_ExtensionList ExtLst;
} CT_PageField;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_DataField DataField[];
} CT_DataFields;

typedef struct {
	char NameAttr; // attr, optional
	unsigned int FldAttr; // attr
	char SubtotalAttr; // attr, optional
	char ShowDataAsAttr; // attr, optional
	int BaseFieldAttr; // attr, optional
	unsigned int BaseItemAttr; // attr, optional
	unsigned int NumFmtIdAttr; // attr, optional
	CT_ExtensionList ExtLst;
} CT_DataField;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_I I[];
} CT_rowItems;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_I I[];
} CT_colItems;

typedef struct {
	char TAttr; // attr, optional
	unsigned int RAttr; // attr, optional
	unsigned int IAttr; // attr, optional
	CT_X X[];
} CT_I;

typedef struct {
	int VAttr; // attr, optional
} CT_X;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Field Field[];
} CT_RowFields;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Field Field[];
} CT_ColFields;

typedef struct {
	int XAttr; // attr
} CT_Field;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Format Format[];
} CT_Formats;

typedef struct {
	char ActionAttr; // attr, optional
	unsigned int DxfIdAttr; // attr, optional
	CT_PivotArea PivotArea;
	CT_ExtensionList ExtLst;
} CT_Format;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_ConditionalFormat ConditionalFormat[];
} CT_ConditionalFormats;

typedef struct {
	char ScopeAttr; // attr, optional
	char TypeAttr; // attr, optional
	unsigned int PriorityAttr; // attr
	CT_PivotAreas PivotAreas;
	CT_ExtensionList ExtLst;
} CT_ConditionalFormat;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_PivotArea PivotArea[];
} CT_PivotAreas;

typedef char ST_Scope;

typedef char ST_Type;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_ChartFormat ChartFormat[];
} CT_ChartFormats;

typedef struct {
	unsigned int ChartAttr; // attr
	unsigned int FormatAttr; // attr
	bool SeriesAttr; // attr, optional
	CT_PivotArea PivotArea;
} CT_ChartFormat;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_PivotHierarchy PivotHierarchy[];
} CT_PivotHierarchies;

typedef struct {
	bool OutlineAttr; // attr, optional
	bool MultipleItemSelectionAllowedAttr; // attr, optional
	bool SubtotalTopAttr; // attr, optional
	bool ShowInFieldListAttr; // attr, optional
	bool DragToRowAttr; // attr, optional
	bool DragToColAttr; // attr, optional
	bool DragToPageAttr; // attr, optional
	bool DragToDataAttr; // attr, optional
	bool DragOffAttr; // attr, optional
	bool IncludeNewItemsInFilterAttr; // attr, optional
	char CaptionAttr; // attr, optional
	CT_MemberProperties Mps;
	CT_Members Members[];
	CT_ExtensionList ExtLst;
} CT_PivotHierarchy;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_HierarchyUsage RowHierarchyUsage[];
} CT_RowHierarchiesUsage;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_HierarchyUsage ColHierarchyUsage[];
} CT_ColHierarchiesUsage;

typedef struct {
	int HierarchyUsageAttr; // attr
} CT_HierarchyUsage;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_MemberProperty Mp[];
} CT_MemberProperties;

typedef struct {
	char NameAttr; // attr, optional
	bool ShowCellAttr; // attr, optional
	bool ShowTipAttr; // attr, optional
	bool ShowAsCaptionAttr; // attr, optional
	unsigned int NameLenAttr; // attr, optional
	unsigned int PPosAttr; // attr, optional
	unsigned int PLenAttr; // attr, optional
	unsigned int LevelAttr; // attr, optional
	unsigned int FieldAttr; // attr
} CT_MemberProperty;

typedef struct {
	unsigned int CountAttr; // attr, optional
	unsigned int LevelAttr; // attr, optional
	CT_Member Member[];
} CT_Members;

typedef struct {
	char NameAttr; // attr
} CT_Member;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_PivotDimension Dimension[];
} CT_Dimensions;

typedef struct {
	bool MeasureAttr; // attr, optional
	char NameAttr; // attr
	char UniqueNameAttr; // attr
	char CaptionAttr; // attr
} CT_PivotDimension;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_MeasureGroup MeasureGroup[];
} CT_MeasureGroups;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_MeasureDimensionMap Map[];
} CT_MeasureDimensionMaps;

typedef struct {
	char NameAttr; // attr
	char CaptionAttr; // attr
} CT_MeasureGroup;

typedef struct {
	unsigned int MeasureGroupAttr; // attr, optional
	unsigned int DimensionAttr; // attr, optional
} CT_MeasureDimensionMap;

typedef struct {
	char NameAttr; // attr, optional
	bool ShowRowHeadersAttr; // attr, optional
	bool ShowColHeadersAttr; // attr, optional
	bool ShowRowStripesAttr; // attr, optional
	bool ShowColStripesAttr; // attr, optional
	bool ShowLastColumnAttr; // attr, optional
} CT_PivotTableStyle;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_PivotFilter Filter[];
} CT_PivotFilters;

typedef struct {
	unsigned int FldAttr; // attr
	unsigned int MpFldAttr; // attr, optional
	char TypeAttr; // attr
	int EvalOrderAttr; // attr, optional
	unsigned int IdAttr; // attr
	unsigned int IMeasureHierAttr; // attr, optional
	unsigned int IMeasureFldAttr; // attr, optional
	char NameAttr; // attr, optional
	char DescriptionAttr; // attr, optional
	char StringValue1Attr; // attr, optional
	char StringValue2Attr; // attr, optional
	CT_AutoFilter AutoFilter[];
	CT_ExtensionList ExtLst;
} CT_PivotFilter;

typedef char ST_ShowDataAs;

typedef char ST_ItemType;

typedef char ST_FormatAction;

typedef char ST_FieldSortType;

typedef char ST_PivotFilterType;

typedef struct {
	int FieldAttr; // attr, optional
	char TypeAttr; // attr, optional
	bool DataOnlyAttr; // attr, optional
	bool LabelOnlyAttr; // attr, optional
	bool GrandRowAttr; // attr, optional
	bool GrandColAttr; // attr, optional
	bool CacheIndexAttr; // attr, optional
	bool OutlineAttr; // attr, optional
	char OffsetAttr; // attr, optional
	bool CollapsedLevelsAreSubtotalsAttr; // attr, optional
	char AxisAttr; // attr, optional
	unsigned int FieldPositionAttr; // attr, optional
	CT_PivotAreaReferences References;
	CT_ExtensionList ExtLst;
} CT_PivotArea;

typedef char ST_PivotAreaType;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_PivotAreaReference Reference[];
} CT_PivotAreaReferences;

typedef struct {
	unsigned int FieldAttr; // attr, optional
	unsigned int CountAttr; // attr, optional
	bool SelectedAttr; // attr, optional
	bool ByPositionAttr; // attr, optional
	bool RelativeAttr; // attr, optional
	bool DefaultSubtotalAttr; // attr, optional
	bool SumSubtotalAttr; // attr, optional
	bool CountASubtotalAttr; // attr, optional
	bool AvgSubtotalAttr; // attr, optional
	bool MaxSubtotalAttr; // attr, optional
	bool MinSubtotalAttr; // attr, optional
	bool ProductSubtotalAttr; // attr, optional
	bool CountSubtotalAttr; // attr, optional
	bool StdDevSubtotalAttr; // attr, optional
	bool StdDevPSubtotalAttr; // attr, optional
	bool VarSubtotalAttr; // attr, optional
	bool VarPSubtotalAttr; // attr, optional
	CT_Index X[];
	CT_ExtensionList ExtLst;
} CT_PivotAreaReference;

typedef struct {
	unsigned int VAttr; // attr
} CT_Index;

typedef char ST_Axis;

typedef CT_QueryTable QueryTable;

typedef struct {
	AG_AutoFormat AG_AutoFormat;
	char NameAttr; // attr
	bool HeadersAttr; // attr, optional
	bool RowNumbersAttr; // attr, optional
	bool DisableRefreshAttr; // attr, optional
	bool BackgroundRefreshAttr; // attr, optional
	bool FirstBackgroundRefreshAttr; // attr, optional
	bool RefreshOnLoadAttr; // attr, optional
	char GrowShrinkTypeAttr; // attr, optional
	bool FillFormulasAttr; // attr, optional
	bool RemoveDataOnSaveAttr; // attr, optional
	bool DisableEditAttr; // attr, optional
	bool PreserveFormattingAttr; // attr, optional
	bool AdjustColumnWidthAttr; // attr, optional
	bool IntermediateAttr; // attr, optional
	unsigned int ConnectionIdAttr; // attr
	CT_QueryTableRefresh QueryTableRefresh[];
	CT_ExtensionList ExtLst[];
} CT_QueryTable;

typedef struct {
	bool PreserveSortFilterLayoutAttr; // attr, optional
	bool FieldIdWrappedAttr; // attr, optional
	bool HeadersInLastRefreshAttr; // attr, optional
	char MinimumVersionAttr; // attr, optional
	unsigned int NextIdAttr; // attr, optional
	unsigned int UnboundColumnsLeftAttr; // attr, optional
	unsigned int UnboundColumnsRightAttr; // attr, optional
	CT_QueryTableFields QueryTableFields[];
	CT_QueryTableDeletedFields QueryTableDeletedFields[];
	CT_SortState SortState[];
	CT_ExtensionList ExtLst[];
} CT_QueryTableRefresh;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_DeletedField DeletedField[];
} CT_QueryTableDeletedFields;

typedef struct {
	char NameAttr; // attr
} CT_DeletedField;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_QueryTableField QueryTableField[];
} CT_QueryTableFields;

typedef struct {
	unsigned int IdAttr; // attr
	char NameAttr; // attr, optional
	bool DataBoundAttr; // attr, optional
	bool RowNumbersAttr; // attr, optional
	bool FillFormulasAttr; // attr, optional
	bool ClippedAttr; // attr, optional
	unsigned int TableColumnIdAttr; // attr, optional
	CT_ExtensionList ExtLst[];
} CT_QueryTableField;

typedef char ST_GrowShrinkType;

typedef CT_Sst Sst;

typedef struct {
	unsigned int CountAttr; // attr, optional
	unsigned int UniqueCountAttr; // attr, optional
	CT_Rst Si[];
	CT_ExtensionList ExtLst;
} CT_Sst;

typedef char ST_PhoneticType;

typedef char ST_PhoneticAlignment;

typedef struct {
	unsigned int SbAttr; // attr
	unsigned int EbAttr; // attr
	char T[];
} CT_PhoneticRun;

typedef struct {
	CT_RPrElt RPr[];
	char T[];
} CT_RElt;

typedef struct {
	CT_FontName RFont[];
	CT_IntProperty Charset[];
	CT_IntProperty Family[];
	CT_BooleanProperty B[];
	CT_BooleanProperty I[];
	CT_BooleanProperty Strike[];
	CT_BooleanProperty Outline[];
	CT_BooleanProperty Shadow[];
	CT_BooleanProperty Condense[];
	CT_BooleanProperty Extend[];
	CT_Color Color[];
	CT_FontSize Sz[];
	CT_UnderlineProperty U[];
	CT_VerticalAlignFontProperty VertAlign[];
	CT_FontScheme Scheme[];
} CT_RPrElt;

typedef struct {
	char T[];
	CT_RElt R[];
	CT_PhoneticRun RPh[];
	CT_PhoneticPr PhoneticPr[];
} CT_Rst;

typedef struct {
	unsigned int FontIdAttr; // attr
	char TypeAttr; // attr, optional
	char AlignmentAttr; // attr, optional
} CT_PhoneticPr;

typedef CT_RevisionHeaders Headers;

typedef CT_Revisions Revisions;

typedef struct {
	char GuidAttr; // attr
	char LastGuidAttr; // attr, optional
	bool SharedAttr; // attr, optional
	bool DiskRevisionsAttr; // attr, optional
	bool HistoryAttr; // attr, optional
	bool TrackRevisionsAttr; // attr, optional
	bool ExclusiveAttr; // attr, optional
	unsigned int RevisionIdAttr; // attr, optional
	int VersionAttr; // attr, optional
	bool KeepChangeHistoryAttr; // attr, optional
	bool ProtectedAttr; // attr, optional
	unsigned int PreserveHistoryAttr; // attr, optional
	CT_RevisionHeader Header[];
} CT_RevisionHeaders;

typedef struct {
	CT_RevisionRowColumn Rrc[];
	CT_RevisionMove Rm[];
	CT_RevisionCustomView Rcv[];
	CT_RevisionSheetRename Rsnm[];
	CT_RevisionInsertSheet Ris[];
	CT_RevisionCellChange Rcc[];
	CT_RevisionFormatting Rfmt[];
	CT_RevisionAutoFormatting Raf[];
	CT_RevisionDefinedName Rdn[];
	CT_RevisionComment Rcmt[];
	CT_RevisionQueryTableField Rqt[];
	CT_RevisionConflict Rcft[];
} CT_Revisions;

typedef struct {
	unsigned int RIdAttr; // attr
	bool UaAttr; // attr, optional
	bool RaAttr; // attr, optional
} AG_RevData;

typedef struct {
	char GuidAttr; // attr
	char DateTimeAttr; // attr
	unsigned int MaxSheetIdAttr; // attr
	char UserNameAttr; // attr
	char RIdAttr; // attr
	unsigned int MinRIdAttr; // attr, optional
	unsigned int MaxRIdAttr; // attr, optional
	CT_SheetIdMap SheetIdMap[];
	CT_ReviewedRevisions ReviewedList[];
	CT_ExtensionList ExtLst;
} CT_RevisionHeader;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_SheetId SheetId[];
} CT_SheetIdMap;

typedef struct {
	unsigned int ValAttr; // attr
} CT_SheetId;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Reviewed Reviewed[];
} CT_ReviewedRevisions;

typedef struct {
	unsigned int RIdAttr; // attr
} CT_Reviewed;

typedef struct {
	unsigned int IndexAttr; // attr
	char ExpAttr; // attr
	bool Ref3DAttr; // attr, optional
	bool ArrayAttr; // attr, optional
	bool VAttr; // attr, optional
	bool NfAttr; // attr, optional
	bool CsAttr; // attr, optional
	char DrAttr; // attr
	char DnAttr; // attr, optional
	char RAttr; // attr, optional
	unsigned int SIdAttr; // attr, optional
} CT_UndoInfo;

typedef struct {
	AG_RevData AG_RevData;
	unsigned int SIdAttr; // attr
	bool EolAttr; // attr, optional
	char RefAttr; // attr
	char ActionAttr; // attr
	bool EdgeAttr; // attr, optional
	CT_UndoInfo Undo[];
	CT_RevisionCellChange Rcc[];
	CT_RevisionFormatting Rfmt[];
} CT_RevisionRowColumn;

typedef struct {
	AG_RevData AG_RevData;
	unsigned int SheetIdAttr; // attr
	char SourceAttr; // attr
	char DestinationAttr; // attr
	unsigned int SourceSheetIdAttr; // attr, optional
	CT_UndoInfo Undo[];
	CT_RevisionCellChange Rcc[];
	CT_RevisionFormatting Rfmt[];
} CT_RevisionMove;

typedef struct {
	char GuidAttr; // attr
	char ActionAttr; // attr
} CT_RevisionCustomView;

typedef struct {
	AG_RevData AG_RevData;
	unsigned int SheetIdAttr; // attr
	char OldNameAttr; // attr
	char NewNameAttr; // attr
	CT_ExtensionList ExtLst;
} CT_RevisionSheetRename;

typedef struct {
	AG_RevData AG_RevData;
	unsigned int SheetIdAttr; // attr
	char NameAttr; // attr
	unsigned int SheetPositionAttr; // attr
} CT_RevisionInsertSheet;

typedef struct {
	AG_RevData AG_RevData;
	unsigned int SIdAttr; // attr
	bool OdxfAttr; // attr, optional
	bool XfDxfAttr; // attr, optional
	bool SAttr; // attr, optional
	bool DxfAttr; // attr, optional
	unsigned int NumFmtIdAttr; // attr, optional
	bool QuotePrefixAttr; // attr, optional
	bool OldQuotePrefixAttr; // attr, optional
	bool PhAttr; // attr, optional
	bool OldPhAttr; // attr, optional
	bool EndOfListFormulaUpdateAttr; // attr, optional
	CT_Cell Oc[];
	CT_Cell Nc[];
	CT_Dxf Odxf[];
	CT_Dxf Ndxf[];
	CT_ExtensionList ExtLst;
} CT_RevisionCellChange;

typedef struct {
	unsigned int SheetIdAttr; // attr
	bool XfDxfAttr; // attr, optional
	bool SAttr; // attr, optional
	ST_Sqref SqrefAttr; // attr
	unsigned int StartAttr; // attr, optional
	unsigned int LengthAttr; // attr, optional
	CT_Dxf Dxf[];
	CT_ExtensionList ExtLst;
} CT_RevisionFormatting;

typedef struct {
	AG_AutoFormat AG_AutoFormat;
	unsigned int SheetIdAttr; // attr
	char RefAttr; // attr
} CT_RevisionAutoFormatting;

typedef struct {
	unsigned int SheetIdAttr; // attr
	char CellAttr; // attr
	char GuidAttr; // attr
	char ActionAttr; // attr, optional
	bool AlwaysShowAttr; // attr, optional
	bool OldAttr; // attr, optional
	bool HiddenRowAttr; // attr, optional
	bool HiddenColumnAttr; // attr, optional
	char AuthorAttr; // attr
	unsigned int OldLengthAttr; // attr, optional
	unsigned int NewLengthAttr; // attr, optional
} CT_RevisionComment;

typedef struct {
	AG_RevData AG_RevData;
	unsigned int LocalSheetIdAttr; // attr, optional
	bool CustomViewAttr; // attr, optional
	char NameAttr; // attr
	bool FunctionAttr; // attr, optional
	bool OldFunctionAttr; // attr, optional
	char FunctionGroupIdAttr; // attr, optional
	char OldFunctionGroupIdAttr; // attr, optional
	char ShortcutKeyAttr; // attr, optional
	char OldShortcutKeyAttr; // attr, optional
	bool HiddenAttr; // attr, optional
	bool OldHiddenAttr; // attr, optional
	char CustomMenuAttr; // attr, optional
	char OldCustomMenuAttr; // attr, optional
	char DescriptionAttr; // attr, optional
	char OldDescriptionAttr; // attr, optional
	char HelpAttr; // attr, optional
	char OldHelpAttr; // attr, optional
	char StatusBarAttr; // attr, optional
	char OldStatusBarAttr; // attr, optional
	char CommentAttr; // attr, optional
	char OldCommentAttr; // attr, optional
	char Formula[];
	char OldFormula[];
	CT_ExtensionList ExtLst;
} CT_RevisionDefinedName;

typedef struct {
	AG_RevData AG_RevData;
	unsigned int SheetIdAttr; // attr, optional
} CT_RevisionConflict;

typedef struct {
	unsigned int SheetIdAttr; // attr
	char RefAttr; // attr
	unsigned int FieldIdAttr; // attr
} CT_RevisionQueryTableField;

typedef char ST_rwColActionType;

typedef char ST_RevisionAction;

typedef char ST_FormulaExpression;

typedef CT_Users Users;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_SharedUser UserInfo[];
} CT_Users;

typedef struct {
	char GuidAttr; // attr
	char NameAttr; // attr
	int IdAttr; // attr
	char DateTimeAttr; // attr
	CT_ExtensionList ExtLst;
} CT_SharedUser;

typedef CT_Worksheet Worksheet;

typedef CT_Chartsheet Chartsheet;

typedef CT_Dialogsheet Dialogsheet;

typedef struct {
	CT_SheetPr SheetPr[];
	CT_SheetDimension Dimension[];
	CT_SheetViews SheetViews[];
	CT_SheetFormatPr SheetFormatPr[];
	CT_Cols Cols[];
	CT_SheetData SheetData[];
	CT_SheetProtection SheetProtection[];
	CT_AutoFilter AutoFilter[];
	CT_SortState SortState[];
	CT_DataConsolidate DataConsolidate[];
	CT_CustomSheetViews CustomSheetViews[];
	CT_PhoneticPr PhoneticPr[];
	CT_ConditionalFormatting ConditionalFormatting[];
	CT_PrintOptions PrintOptions[];
	CT_PageMargins PageMargins[];
	CT_PageSetup PageSetup[];
	CT_HeaderFooter HeaderFooter[];
	CT_PageBreak RowBreaks[];
	CT_PageBreak ColBreaks[];
	CT_CustomProperties CustomProperties[];
	CT_Drawing Drawing[];
	CT_DrawingHF DrawingHF[];
	CT_SheetBackgroundPicture Picture[];
	CT_OleObjects OleObjects[];
	CT_ExtensionList ExtLst;
} CT_Macrosheet;

typedef struct {
	CT_SheetPr SheetPr;
	CT_SheetViews SheetViews;
	CT_SheetFormatPr SheetFormatPr;
	CT_SheetProtection SheetProtection[];
	CT_CustomSheetViews CustomSheetViews;
	CT_PrintOptions PrintOptions;
	CT_PageMargins PageMargins;
	CT_PageSetup PageSetup;
	CT_HeaderFooter HeaderFooter;
	CT_Drawing Drawing;
	CT_DrawingHF DrawingHF[];
	CT_OleObjects OleObjects[];
	CT_Controls Controls[];
	CT_ExtensionList ExtLst;
} CT_Dialogsheet;

typedef struct {
	CT_SheetPr SheetPr[];
	CT_SheetDimension Dimension[];
	CT_SheetViews SheetViews[];
	CT_SheetFormatPr SheetFormatPr[];
	CT_Cols Cols[];
	CT_SheetData SheetData[];
	CT_SheetCalcPr SheetCalcPr[];
	CT_SheetProtection SheetProtection[];
	CT_ProtectedRanges ProtectedRanges[];
	CT_Scenarios Scenarios[];
	CT_AutoFilter AutoFilter[];
	CT_SortState SortState[];
	CT_DataConsolidate DataConsolidate[];
	CT_CustomSheetViews CustomSheetViews[];
	CT_MergeCells MergeCells[];
	CT_PhoneticPr PhoneticPr[];
	CT_ConditionalFormatting ConditionalFormatting[];
	CT_DataValidations DataValidations[];
	CT_Hyperlinks Hyperlinks[];
	CT_PrintOptions PrintOptions[];
	CT_PageMargins PageMargins[];
	CT_PageSetup PageSetup[];
	CT_HeaderFooter HeaderFooter[];
	CT_PageBreak RowBreaks[];
	CT_PageBreak ColBreaks[];
	CT_CustomProperties CustomProperties[];
	CT_CellWatches CellWatches[];
	CT_IgnoredErrors IgnoredErrors[];
	CT_SmartTags SmartTags[];
	CT_Drawing Drawing[];
	CT_DrawingHF DrawingHF[];
	CT_SheetBackgroundPicture Picture[];
	CT_OleObjects OleObjects[];
	CT_Controls Controls[];
	CT_WebPublishItems WebPublishItems[];
	CT_TableParts TableParts[];
	CT_ExtensionList ExtLst[];
} CT_Worksheet;

typedef struct {
	CT_Row Row[];
} CT_SheetData;

typedef struct {
	bool FullCalcOnLoadAttr; // attr, optional
} CT_SheetCalcPr;

typedef struct {
	unsigned int BaseColWidthAttr; // attr, optional
	float DefaultColWidthAttr; // attr, optional
	float DefaultRowHeightAttr; // attr
	bool CustomHeightAttr; // attr, optional
	bool ZeroHeightAttr; // attr, optional
	bool ThickTopAttr; // attr, optional
	bool ThickBottomAttr; // attr, optional
	char OutlineLevelRowAttr; // attr, optional
	char OutlineLevelColAttr; // attr, optional
} CT_SheetFormatPr;

typedef struct {
	CT_Col Col[];
} CT_Cols;

typedef struct {
	unsigned int MinAttr; // attr
	unsigned int MaxAttr; // attr
	float WidthAttr; // attr, optional
	unsigned int StyleAttr; // attr, optional
	bool HiddenAttr; // attr, optional
	bool BestFitAttr; // attr, optional
	bool CustomWidthAttr; // attr, optional
	bool PhoneticAttr; // attr, optional
	char OutlineLevelAttr; // attr, optional
	bool CollapsedAttr; // attr, optional
} CT_Col;

typedef char ST_CellSpan;

typedef char ST_CellSpans[];

typedef struct {
	unsigned int RAttr; // attr, optional
	ST_CellSpans SpansAttr; // attr, optional
	unsigned int SAttr; // attr, optional
	bool CustomFormatAttr; // attr, optional
	float HtAttr; // attr, optional
	bool HiddenAttr; // attr, optional
	bool CustomHeightAttr; // attr, optional
	char OutlineLevelAttr; // attr, optional
	bool CollapsedAttr; // attr, optional
	bool ThickTopAttr; // attr, optional
	bool ThickBotAttr; // attr, optional
	bool PhAttr; // attr, optional
	CT_Cell C[];
	CT_ExtensionList ExtLst;
} CT_Row;

typedef struct {
	char RAttr; // attr, optional
	unsigned int SAttr; // attr, optional
	char TAttr; // attr, optional
	unsigned int CmAttr; // attr, optional
	unsigned int VmAttr; // attr, optional
	bool PhAttr; // attr, optional
	CT_CellFormula F[];
	char V[];
	CT_Rst Is[];
	CT_ExtensionList ExtLst;
} CT_Cell;

typedef char ST_CellType;

typedef char ST_CellFormulaType;

typedef struct {
	bool SyncHorizontalAttr; // attr, optional
	bool SyncVerticalAttr; // attr, optional
	char SyncRefAttr; // attr, optional
	bool TransitionEvaluationAttr; // attr, optional
	bool TransitionEntryAttr; // attr, optional
	bool PublishedAttr; // attr, optional
	char CodeNameAttr; // attr, optional
	bool FilterModeAttr; // attr, optional
	bool EnableFormatConditionsCalculationAttr; // attr, optional
	CT_Color TabColor[];
	CT_OutlinePr OutlinePr[];
	CT_PageSetUpPr PageSetUpPr[];
} CT_SheetPr;

typedef struct {
	char RefAttr; // attr
} CT_SheetDimension;

typedef struct {
	CT_SheetView SheetView[];
	CT_ExtensionList ExtLst[];
} CT_SheetViews;

typedef struct {
	bool WindowProtectionAttr; // attr, optional
	bool ShowFormulasAttr; // attr, optional
	bool ShowGridLinesAttr; // attr, optional
	bool ShowRowColHeadersAttr; // attr, optional
	bool ShowZerosAttr; // attr, optional
	bool RightToLeftAttr; // attr, optional
	bool TabSelectedAttr; // attr, optional
	bool ShowRulerAttr; // attr, optional
	bool ShowOutlineSymbolsAttr; // attr, optional
	bool DefaultGridColorAttr; // attr, optional
	bool ShowWhiteSpaceAttr; // attr, optional
	char ViewAttr; // attr, optional
	char TopLeftCellAttr; // attr, optional
	unsigned int ColorIdAttr; // attr, optional
	unsigned int ZoomScaleAttr; // attr, optional
	unsigned int ZoomScaleNormalAttr; // attr, optional
	unsigned int ZoomScaleSheetLayoutViewAttr; // attr, optional
	unsigned int ZoomScalePageLayoutViewAttr; // attr, optional
	unsigned int WorkbookViewIdAttr; // attr
	CT_Pane Pane[];
	CT_Selection Selection[];
	CT_PivotSelection PivotSelection[];
	CT_ExtensionList ExtLst[];
} CT_SheetView;

typedef struct {
	float XSplitAttr; // attr, optional
	float YSplitAttr; // attr, optional
	char TopLeftCellAttr; // attr, optional
	char ActivePaneAttr; // attr, optional
	char StateAttr; // attr, optional
} CT_Pane;

typedef struct {
	char PaneAttr; // attr, optional
	bool ShowHeaderAttr; // attr, optional
	bool LabelAttr; // attr, optional
	bool DataAttr; // attr, optional
	bool ExtendableAttr; // attr, optional
	unsigned int CountAttr; // attr, optional
	char AxisAttr; // attr, optional
	unsigned int DimensionAttr; // attr, optional
	unsigned int StartAttr; // attr, optional
	unsigned int MinAttr; // attr, optional
	unsigned int MaxAttr; // attr, optional
	unsigned int ActiveRowAttr; // attr, optional
	unsigned int ActiveColAttr; // attr, optional
	unsigned int PreviousRowAttr; // attr, optional
	unsigned int PreviousColAttr; // attr, optional
	unsigned int ClickAttr; // attr, optional
	char RIdAttr; // attr, optional
	CT_PivotArea PivotArea;
} CT_PivotSelection;

typedef struct {
	char PaneAttr; // attr, optional
	char ActiveCellAttr; // attr, optional
	unsigned int ActiveCellIdAttr; // attr, optional
	ST_Sqref SqrefAttr; // attr, optional
} CT_Selection;

typedef char ST_Pane;

typedef struct {
	unsigned int CountAttr; // attr, optional
	unsigned int ManualBreakCountAttr; // attr, optional
	CT_Break Brk[];
} CT_PageBreak;

typedef struct {
	unsigned int IdAttr; // attr, optional
	unsigned int MinAttr; // attr, optional
	unsigned int MaxAttr; // attr, optional
	bool ManAttr; // attr, optional
	bool PtAttr; // attr, optional
} CT_Break;

typedef char ST_SheetViewType;

typedef struct {
	bool ApplyStylesAttr; // attr, optional
	bool SummaryBelowAttr; // attr, optional
	bool SummaryRightAttr; // attr, optional
	bool ShowOutlineSymbolsAttr; // attr, optional
} CT_OutlinePr;

typedef struct {
	bool AutoPageBreaksAttr; // attr, optional
	bool FitToPageAttr; // attr, optional
} CT_PageSetUpPr;

typedef struct {
	char FunctionAttr; // attr, optional
	bool StartLabelsAttr; // attr, optional
	bool TopLabelsAttr; // attr, optional
	bool LinkAttr; // attr, optional
	CT_DataRefs DataRefs[];
} CT_DataConsolidate;

typedef char ST_DataConsolidateFunction;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_DataRef DataRef[];
} CT_DataRefs;

typedef struct {
	char RefAttr; // attr, optional
	char NameAttr; // attr, optional
	char SheetAttr; // attr, optional
	char RIdAttr; // attr, optional
} CT_DataRef;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_MergeCell MergeCell[];
} CT_MergeCells;

typedef struct {
	char RefAttr; // attr
} CT_MergeCell;

typedef struct {
	CT_CellSmartTags CellSmartTags[];
} CT_SmartTags;

typedef struct {
	char RAttr; // attr
	CT_CellSmartTag CellSmartTag[];
} CT_CellSmartTags;

typedef struct {
	unsigned int TypeAttr; // attr
	bool DeletedAttr; // attr, optional
	bool XmlBasedAttr; // attr, optional
	CT_CellSmartTagPr CellSmartTagPr[];
} CT_CellSmartTag;

typedef struct {
	char KeyAttr; // attr
	char ValAttr; // attr
} CT_CellSmartTagPr;

typedef struct {
	char RIdAttr; // attr
} CT_Drawing;

typedef struct {
	char RIdAttr; // attr
	unsigned int LhoAttr; // attr, optional
	unsigned int LheAttr; // attr, optional
	unsigned int LhfAttr; // attr, optional
	unsigned int ChoAttr; // attr, optional
	unsigned int CheAttr; // attr, optional
	unsigned int ChfAttr; // attr, optional
	unsigned int RhoAttr; // attr, optional
	unsigned int RheAttr; // attr, optional
	unsigned int RhfAttr; // attr, optional
	unsigned int LfoAttr; // attr, optional
	unsigned int LfeAttr; // attr, optional
	unsigned int LffAttr; // attr, optional
	unsigned int CfoAttr; // attr, optional
	unsigned int CfeAttr; // attr, optional
	unsigned int CffAttr; // attr, optional
	unsigned int RfoAttr; // attr, optional
	unsigned int RfeAttr; // attr, optional
	unsigned int RffAttr; // attr, optional
} CT_DrawingHF;

typedef struct {
	CT_CustomSheetView CustomSheetView[];
} CT_CustomSheetViews;

typedef struct {
	char GuidAttr; // attr
	unsigned int ScaleAttr; // attr, optional
	unsigned int ColorIdAttr; // attr, optional
	bool ShowPageBreaksAttr; // attr, optional
	bool ShowFormulasAttr; // attr, optional
	bool ShowGridLinesAttr; // attr, optional
	bool ShowRowColAttr; // attr, optional
	bool OutlineSymbolsAttr; // attr, optional
	bool ZeroValuesAttr; // attr, optional
	bool FitToPageAttr; // attr, optional
	bool PrintAreaAttr; // attr, optional
	bool FilterAttr; // attr, optional
	bool ShowAutoFilterAttr; // attr, optional
	bool HiddenRowsAttr; // attr, optional
	bool HiddenColumnsAttr; // attr, optional
	char StateAttr; // attr, optional
	bool FilterUniqueAttr; // attr, optional
	char ViewAttr; // attr, optional
	bool ShowRulerAttr; // attr, optional
	char TopLeftCellAttr; // attr, optional
	CT_Pane Pane[];
	CT_Selection Selection[];
	CT_PageBreak RowBreaks[];
	CT_PageBreak ColBreaks[];
	CT_PageMargins PageMargins[];
	CT_PrintOptions PrintOptions[];
	CT_PageSetup PageSetup[];
	CT_HeaderFooter HeaderFooter[];
	CT_AutoFilter AutoFilter[];
	CT_ExtensionList ExtLst;
} CT_CustomSheetView;

typedef struct {
	bool DisablePromptsAttr; // attr, optional
	unsigned int XWindowAttr; // attr, optional
	unsigned int YWindowAttr; // attr, optional
	unsigned int CountAttr; // attr, optional
	CT_DataValidation DataValidation[];
} CT_DataValidations;

typedef struct {
	char TypeAttr; // attr, optional
	char ErrorStyleAttr; // attr, optional
	char ImeModeAttr; // attr, optional
	char OperatorAttr; // attr, optional
	bool AllowBlankAttr; // attr, optional
	bool ShowDropDownAttr; // attr, optional
	bool ShowInputMessageAttr; // attr, optional
	bool ShowErrorMessageAttr; // attr, optional
	char ErrorTitleAttr; // attr, optional
	char ErrorAttr; // attr, optional
	char PromptTitleAttr; // attr, optional
	char PromptAttr; // attr, optional
	ST_Sqref SqrefAttr; // attr
	char Formula1[];
	char Formula2[];
} CT_DataValidation;

typedef char ST_DataValidationType;

typedef char ST_DataValidationOperator;

typedef char ST_DataValidationErrorStyle;

typedef char ST_DataValidationImeMode;

typedef char ST_CfType;

typedef char ST_TimePeriod;

typedef char ST_ConditionalFormattingOperator;

typedef char ST_CfvoType;

typedef struct {
	bool PivotAttr; // attr, optional
	ST_Sqref SqrefAttr; // attr, optional
	CT_CfRule CfRule[];
	CT_ExtensionList ExtLst;
} CT_ConditionalFormatting;

typedef struct {
	char TypeAttr; // attr, optional
	unsigned int DxfIdAttr; // attr, optional
	int PriorityAttr; // attr
	bool StopIfTrueAttr; // attr, optional
	bool AboveAverageAttr; // attr, optional
	bool PercentAttr; // attr, optional
	bool BottomAttr; // attr, optional
	char OperatorAttr; // attr, optional
	char TextAttr; // attr, optional
	char TimePeriodAttr; // attr, optional
	unsigned int RankAttr; // attr, optional
	int StdDevAttr; // attr, optional
	bool EqualAverageAttr; // attr, optional
	char Formula[];
	CT_ColorScale ColorScale[];
	CT_DataBar DataBar[];
	CT_IconSet IconSet[];
	CT_ExtensionList ExtLst;
} CT_CfRule;

typedef struct {
	CT_Hyperlink Hyperlink[];
} CT_Hyperlinks;

typedef struct {
	char RefAttr; // attr
	char RIdAttr; // attr, optional
	char LocationAttr; // attr, optional
	char TooltipAttr; // attr, optional
	char DisplayAttr; // attr, optional
} CT_Hyperlink;

typedef struct {
	char TAttr; // attr, optional
	bool AcaAttr; // attr, optional
	char RefAttr; // attr, optional
	bool Dt2DAttr; // attr, optional
	bool DtrAttr; // attr, optional
	bool Del1Attr; // attr, optional
	bool Del2Attr; // attr, optional
	char R1Attr; // attr, optional
	char R2Attr; // attr, optional
	bool CaAttr; // attr, optional
	unsigned int SiAttr; // attr, optional
	bool BxAttr; // attr, optional
} CT_CellFormula;

typedef struct {
	CT_Cfvo Cfvo[];
	CT_Color Color[];
} CT_ColorScale;

typedef struct {
	unsigned int MinLengthAttr; // attr, optional
	unsigned int MaxLengthAttr; // attr, optional
	bool ShowValueAttr; // attr, optional
	CT_Cfvo Cfvo[];
	CT_Color Color[];
} CT_DataBar;

typedef struct {
	char IconSetAttr; // attr, optional
	bool ShowValueAttr; // attr, optional
	bool PercentAttr; // attr, optional
	bool ReverseAttr; // attr, optional
	CT_Cfvo Cfvo[];
} CT_IconSet;

typedef struct {
	char TypeAttr; // attr
	char ValAttr; // attr, optional
	bool GteAttr; // attr, optional
	CT_ExtensionList ExtLst[];
} CT_Cfvo;

typedef struct {
	float LeftAttr; // attr
	float RightAttr; // attr
	float TopAttr; // attr
	float BottomAttr; // attr
	float HeaderAttr; // attr
	float FooterAttr; // attr
} CT_PageMargins;

typedef struct {
	bool HorizontalCenteredAttr; // attr, optional
	bool VerticalCenteredAttr; // attr, optional
	bool HeadingsAttr; // attr, optional
	bool GridLinesAttr; // attr, optional
	bool GridLinesSetAttr; // attr, optional
} CT_PrintOptions;

typedef struct {
	unsigned int PaperSizeAttr; // attr, optional
	char PaperHeightAttr; // attr, optional
	char PaperWidthAttr; // attr, optional
	unsigned int ScaleAttr; // attr, optional
	unsigned int FirstPageNumberAttr; // attr, optional
	unsigned int FitToWidthAttr; // attr, optional
	unsigned int FitToHeightAttr; // attr, optional
	char PageOrderAttr; // attr, optional
	char OrientationAttr; // attr, optional
	bool UsePrinterDefaultsAttr; // attr, optional
	bool BlackAndWhiteAttr; // attr, optional
	bool DraftAttr; // attr, optional
	char CellCommentsAttr; // attr, optional
	bool UseFirstPageNumberAttr; // attr, optional
	char ErrorsAttr; // attr, optional
	unsigned int HorizontalDpiAttr; // attr, optional
	unsigned int VerticalDpiAttr; // attr, optional
	unsigned int CopiesAttr; // attr, optional
	char RIdAttr; // attr, optional
} CT_PageSetup;

typedef char ST_PageOrder;

typedef char ST_Orientation;

typedef char ST_CellComments;

typedef struct {
	bool DifferentOddEvenAttr; // attr, optional
	bool DifferentFirstAttr; // attr, optional
	bool ScaleWithDocAttr; // attr, optional
	bool AlignWithMarginsAttr; // attr, optional
	char OddHeader[];
	char OddFooter[];
	char EvenHeader[];
	char EvenFooter[];
	char FirstHeader[];
	char FirstFooter[];
} CT_HeaderFooter;

typedef char ST_PrintError;

typedef struct {
	unsigned int CurrentAttr; // attr, optional
	unsigned int ShowAttr; // attr, optional
	ST_Sqref SqrefAttr; // attr, optional
	CT_Scenario Scenario[];
} CT_Scenarios;

typedef struct {
	char AlgorithmNameAttr; // attr, optional
	char HashValueAttr[]; // attr, optional
	char SaltValueAttr[]; // attr, optional
	unsigned int SpinCountAttr; // attr, optional
	bool SheetAttr; // attr, optional
	bool ObjectsAttr; // attr, optional
	bool ScenariosAttr; // attr, optional
	bool FormatCellsAttr; // attr, optional
	bool FormatColumnsAttr; // attr, optional
	bool FormatRowsAttr; // attr, optional
	bool InsertColumnsAttr; // attr, optional
	bool InsertRowsAttr; // attr, optional
	bool InsertHyperlinksAttr; // attr, optional
	bool DeleteColumnsAttr; // attr, optional
	bool DeleteRowsAttr; // attr, optional
	bool SelectLockedCellsAttr; // attr, optional
	bool SortAttr; // attr, optional
	bool AutoFilterAttr; // attr, optional
	bool PivotTablesAttr; // attr, optional
	bool SelectUnlockedCellsAttr; // attr, optional
} CT_SheetProtection;

typedef struct {
	CT_ProtectedRange ProtectedRange[];
} CT_ProtectedRanges;

typedef struct {
	ST_Sqref SqrefAttr; // attr
	char NameAttr; // attr
	char AlgorithmNameAttr; // attr, optional
	char HashValueAttr[]; // attr, optional
	char SaltValueAttr[]; // attr, optional
	unsigned int SpinCountAttr; // attr, optional
	char SecurityDescriptor[];
} CT_ProtectedRange;

typedef struct {
	char NameAttr; // attr
	bool LockedAttr; // attr, optional
	bool HiddenAttr; // attr, optional
	unsigned int CountAttr; // attr, optional
	char UserAttr; // attr, optional
	char CommentAttr; // attr, optional
	CT_InputCells InputCells[];
} CT_Scenario;

typedef struct {
	char RAttr; // attr
	bool DeletedAttr; // attr, optional
	bool UndoneAttr; // attr, optional
	char ValAttr; // attr
	unsigned int NumFmtIdAttr; // attr, optional
} CT_InputCells;

typedef struct {
	CT_CellWatch CellWatch[];
} CT_CellWatches;

typedef struct {
	char RAttr; // attr
} CT_CellWatch;

typedef struct {
	CT_ChartsheetPr SheetPr[];
	CT_ChartsheetViews SheetViews[];
	CT_ChartsheetProtection SheetProtection[];
	CT_CustomChartsheetViews CustomSheetViews[];
	CT_PageMargins PageMargins;
	CT_CsPageSetup PageSetup[];
	CT_HeaderFooter HeaderFooter;
	CT_Drawing Drawing[];
	CT_DrawingHF DrawingHF[];
	CT_SheetBackgroundPicture Picture[];
	CT_WebPublishItems WebPublishItems[];
	CT_ExtensionList ExtLst[];
} CT_Chartsheet;

typedef struct {
	bool PublishedAttr; // attr, optional
	char CodeNameAttr; // attr, optional
	CT_Color TabColor[];
} CT_ChartsheetPr;

typedef struct {
	CT_ChartsheetView SheetView[];
	CT_ExtensionList ExtLst[];
} CT_ChartsheetViews;

typedef struct {
	bool TabSelectedAttr; // attr, optional
	unsigned int ZoomScaleAttr; // attr, optional
	unsigned int WorkbookViewIdAttr; // attr
	bool ZoomToFitAttr; // attr, optional
	CT_ExtensionList ExtLst[];
} CT_ChartsheetView;

typedef struct {
	char AlgorithmNameAttr; // attr, optional
	char HashValueAttr[]; // attr, optional
	char SaltValueAttr[]; // attr, optional
	unsigned int SpinCountAttr; // attr, optional
	bool ContentAttr; // attr, optional
	bool ObjectsAttr; // attr, optional
} CT_ChartsheetProtection;

typedef struct {
	unsigned int PaperSizeAttr; // attr, optional
	char PaperHeightAttr; // attr, optional
	char PaperWidthAttr; // attr, optional
	unsigned int FirstPageNumberAttr; // attr, optional
	char OrientationAttr; // attr, optional
	bool UsePrinterDefaultsAttr; // attr, optional
	bool BlackAndWhiteAttr; // attr, optional
	bool DraftAttr; // attr, optional
	bool UseFirstPageNumberAttr; // attr, optional
	unsigned int HorizontalDpiAttr; // attr, optional
	unsigned int VerticalDpiAttr; // attr, optional
	unsigned int CopiesAttr; // attr, optional
	char RIdAttr; // attr, optional
} CT_CsPageSetup;

typedef struct {
	CT_CustomChartsheetView CustomSheetView[];
} CT_CustomChartsheetViews;

typedef struct {
	char GuidAttr; // attr
	unsigned int ScaleAttr; // attr, optional
	char StateAttr; // attr, optional
	bool ZoomToFitAttr; // attr, optional
	CT_PageMargins PageMargins[];
	CT_CsPageSetup PageSetup[];
	CT_HeaderFooter HeaderFooter[];
} CT_CustomChartsheetView;

typedef struct {
	CT_CustomProperty CustomPr[];
} CT_CustomProperties;

typedef struct {
	char NameAttr; // attr
	char RIdAttr; // attr
} CT_CustomProperty;

typedef struct {
	CT_OleObject OleObject[];
} CT_OleObjects;

typedef struct {
	char ProgIdAttr; // attr, optional
	char DvAspectAttr; // attr, optional
	char LinkAttr; // attr, optional
	char OleUpdateAttr; // attr, optional
	bool AutoLoadAttr; // attr, optional
	unsigned int ShapeIdAttr; // attr
	char RIdAttr; // attr, optional
	CT_ObjectPr ObjectPr[];
} CT_OleObject;

typedef struct {
	bool LockedAttr; // attr, optional
	bool DefaultSizeAttr; // attr, optional
	bool PrintAttr; // attr, optional
	bool DisabledAttr; // attr, optional
	bool UiObjectAttr; // attr, optional
	bool AutoFillAttr; // attr, optional
	bool AutoLineAttr; // attr, optional
	bool AutoPictAttr; // attr, optional
	char MacroAttr; // attr, optional
	char AltTextAttr; // attr, optional
	bool DdeAttr; // attr, optional
	char RIdAttr; // attr, optional
	CT_ObjectAnchor Anchor[];
} CT_ObjectPr;

typedef char ST_DvAspect;

typedef char ST_OleUpdate;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_WebPublishItem WebPublishItem[];
} CT_WebPublishItems;

typedef struct {
	unsigned int IdAttr; // attr
	char DivIdAttr; // attr
	char SourceTypeAttr; // attr
	char SourceRefAttr; // attr, optional
	char SourceObjectAttr; // attr, optional
	char DestinationFileAttr; // attr
	char TitleAttr; // attr, optional
	bool AutoRepublishAttr; // attr, optional
} CT_WebPublishItem;

typedef struct {
	CT_Control Control[];
} CT_Controls;

typedef struct {
	unsigned int ShapeIdAttr; // attr
	char RIdAttr; // attr
	char NameAttr; // attr, optional
	CT_ControlPr ControlPr[];
} CT_Control;

typedef struct {
	bool LockedAttr; // attr, optional
	bool DefaultSizeAttr; // attr, optional
	bool PrintAttr; // attr, optional
	bool DisabledAttr; // attr, optional
	bool RecalcAlwaysAttr; // attr, optional
	bool UiObjectAttr; // attr, optional
	bool AutoFillAttr; // attr, optional
	bool AutoLineAttr; // attr, optional
	bool AutoPictAttr; // attr, optional
	char MacroAttr; // attr, optional
	char AltTextAttr; // attr, optional
	char LinkedCellAttr; // attr, optional
	char ListFillRangeAttr; // attr, optional
	char CfAttr; // attr, optional
	char RIdAttr; // attr, optional
	CT_ObjectAnchor Anchor[];
} CT_ControlPr;

typedef char ST_WebSourceType;

typedef struct {
	CT_IgnoredError IgnoredError[];
	CT_ExtensionList ExtLst[];
} CT_IgnoredErrors;

typedef struct {
	ST_Sqref SqrefAttr; // attr
	bool EvalErrorAttr; // attr, optional
	bool TwoDigitTextYearAttr; // attr, optional
	bool NumberStoredAsTextAttr; // attr, optional
	bool FormulaAttr; // attr, optional
	bool FormulaRangeAttr; // attr, optional
	bool UnlockedFormulaAttr; // attr, optional
	bool EmptyCellReferenceAttr; // attr, optional
	bool ListDataValidationAttr; // attr, optional
	bool CalculatedColumnAttr; // attr, optional
} CT_IgnoredError;

typedef char ST_PaneState;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_TablePart TablePart[];
} CT_TableParts;

typedef struct {
	char RIdAttr; // attr
} CT_TablePart;

typedef CT_Metadata Metadata;

typedef struct {
	CT_MetadataTypes MetadataTypes[];
	CT_MetadataStrings MetadataStrings[];
	CT_MdxMetadata MdxMetadata[];
	CT_FutureMetadata FutureMetadata[];
	CT_MetadataBlocks CellMetadata[];
	CT_MetadataBlocks ValueMetadata[];
	CT_ExtensionList ExtLst[];
} CT_Metadata;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_MetadataType MetadataType[];
} CT_MetadataTypes;

typedef struct {
	char NameAttr; // attr
	unsigned int MinSupportedVersionAttr; // attr
	bool GhostRowAttr; // attr, optional
	bool GhostColAttr; // attr, optional
	bool EditAttr; // attr, optional
	bool DeleteAttr; // attr, optional
	bool CopyAttr; // attr, optional
	bool PasteAllAttr; // attr, optional
	bool PasteFormulasAttr; // attr, optional
	bool PasteValuesAttr; // attr, optional
	bool PasteFormatsAttr; // attr, optional
	bool PasteCommentsAttr; // attr, optional
	bool PasteDataValidationAttr; // attr, optional
	bool PasteBordersAttr; // attr, optional
	bool PasteColWidthsAttr; // attr, optional
	bool PasteNumberFormatsAttr; // attr, optional
	bool MergeAttr; // attr, optional
	bool SplitFirstAttr; // attr, optional
	bool SplitAllAttr; // attr, optional
	bool RowColShiftAttr; // attr, optional
	bool ClearAllAttr; // attr, optional
	bool ClearFormatsAttr; // attr, optional
	bool ClearContentsAttr; // attr, optional
	bool ClearCommentsAttr; // attr, optional
	bool AssignAttr; // attr, optional
	bool CoerceAttr; // attr, optional
	bool AdjustAttr; // attr, optional
	bool CellMetaAttr; // attr, optional
} CT_MetadataType;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_MetadataBlock Bk[];
} CT_MetadataBlocks;

typedef struct {
	CT_MetadataRecord Rc[];
} CT_MetadataBlock;

typedef struct {
	unsigned int TAttr; // attr
	unsigned int VAttr; // attr
} CT_MetadataRecord;

typedef struct {
	char NameAttr; // attr
	unsigned int CountAttr; // attr, optional
	CT_FutureMetadataBlock Bk[];
	CT_ExtensionList ExtLst[];
} CT_FutureMetadata;

typedef struct {
	CT_ExtensionList ExtLst[];
} CT_FutureMetadataBlock;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Mdx Mdx[];
} CT_MdxMetadata;

typedef struct {
	unsigned int NAttr; // attr
	char FAttr; // attr
	CT_MdxTuple T;
	CT_MdxSet Ms;
	CT_MdxMemeberProp P;
	CT_MdxKPI K;
} CT_Mdx;

typedef char ST_MdxFunctionType;

typedef struct {
	unsigned int CAttr; // attr, optional
	char CtAttr; // attr, optional
	unsigned int SiAttr; // attr, optional
	unsigned int FiAttr; // attr, optional
	char BcAttr[]; // attr, optional
	char FcAttr[]; // attr, optional
	bool IAttr; // attr, optional
	bool UAttr; // attr, optional
	bool StAttr; // attr, optional
	bool BAttr; // attr, optional
	CT_MetadataStringIndex N[];
} CT_MdxTuple;

typedef struct {
	unsigned int NsAttr; // attr
	unsigned int CAttr; // attr, optional
	char OAttr; // attr, optional
	CT_MetadataStringIndex N[];
} CT_MdxSet;

typedef char ST_MdxSetOrder;

typedef struct {
	unsigned int NAttr; // attr
	unsigned int NpAttr; // attr
} CT_MdxMemeberProp;

typedef struct {
	unsigned int NAttr; // attr
	unsigned int NpAttr; // attr
	char PAttr; // attr
} CT_MdxKPI;

typedef char ST_MdxKPIProperty;

typedef struct {
	unsigned int XAttr; // attr
	bool SAttr; // attr, optional
} CT_MetadataStringIndex;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_XStringElement S[];
} CT_MetadataStrings;

typedef CT_SingleXmlCells SingleXmlCells;

typedef struct {
	CT_SingleXmlCell SingleXmlCell[];
} CT_SingleXmlCells;

typedef struct {
	unsigned int IdAttr; // attr
	char RAttr; // attr
	unsigned int ConnectionIdAttr; // attr
	CT_XmlCellPr XmlCellPr[];
	CT_ExtensionList ExtLst[];
} CT_SingleXmlCell;

typedef struct {
	unsigned int IdAttr; // attr
	char UniqueNameAttr; // attr, optional
	CT_XmlPr XmlPr[];
	CT_ExtensionList ExtLst[];
} CT_XmlCellPr;

typedef struct {
	unsigned int MapIdAttr; // attr
	char XpathAttr; // attr
	char XmlDataTypeAttr; // attr
	CT_ExtensionList ExtLst[];
} CT_XmlPr;

typedef CT_Stylesheet StyleSheet;

typedef struct {
	CT_NumFmts NumFmts[];
	CT_Fonts Fonts[];
	CT_Fills Fills[];
	CT_Borders Borders[];
	CT_CellStyleXfs CellStyleXfs[];
	CT_CellXfs CellXfs[];
	CT_CellStyles CellStyles[];
	CT_Dxfs Dxfs[];
	CT_TableStyles TableStyles[];
	CT_Colors Colors[];
	CT_ExtensionList ExtLst[];
} CT_Stylesheet;

typedef struct {
	char HorizontalAttr; // attr, optional
	char VerticalAttr; // attr, optional
	ST_TextRotation TextRotationAttr; // attr, optional
	bool WrapTextAttr; // attr, optional
	unsigned int IndentAttr; // attr, optional
	int RelativeIndentAttr; // attr, optional
	bool JustifyLastLineAttr; // attr, optional
	bool ShrinkToFitAttr; // attr, optional
	unsigned int ReadingOrderAttr; // attr, optional
} CT_CellAlignment;

typedef int ST_TextRotation;

typedef char ST_BorderStyle;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Border Border[];
} CT_Borders;

typedef struct {
	bool DiagonalUpAttr; // attr, optional
	bool DiagonalDownAttr; // attr, optional
	bool OutlineAttr; // attr, optional
	CT_BorderPr Start[];
	CT_BorderPr End[];
	CT_BorderPr Top[];
	CT_BorderPr Bottom[];
	CT_BorderPr Diagonal[];
	CT_BorderPr Vertical[];
	CT_BorderPr Horizontal[];
} CT_Border;

typedef struct {
	char StyleAttr; // attr, optional
	CT_Color Color[];
} CT_BorderPr;

typedef struct {
	bool LockedAttr; // attr, optional
	bool HiddenAttr; // attr, optional
} CT_CellProtection;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Font Font[];
} CT_Fonts;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Fill Fill[];
} CT_Fills;

typedef struct {
	CT_PatternFill PatternFill[];
	CT_GradientFill GradientFill[];
} CT_Fill;

typedef struct {
	char PatternTypeAttr; // attr, optional
	CT_Color FgColor[];
	CT_Color BgColor[];
} CT_PatternFill;

typedef struct {
	bool AutoAttr; // attr, optional
	unsigned int IndexedAttr; // attr, optional
	char RgbAttr[]; // attr, optional
	unsigned int ThemeAttr; // attr, optional
	float TintAttr; // attr, optional
} CT_Color;

typedef char ST_PatternType;

typedef struct {
	char TypeAttr; // attr, optional
	float DegreeAttr; // attr, optional
	float LeftAttr; // attr, optional
	float RightAttr; // attr, optional
	float TopAttr; // attr, optional
	float BottomAttr; // attr, optional
	CT_GradientStop Stop[];
} CT_GradientFill;

typedef struct {
	float PositionAttr; // attr
	CT_Color Color[];
} CT_GradientStop;

typedef char ST_GradientType;

typedef char ST_HorizontalAlignment;

typedef char ST_VerticalAlignment;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_NumFmt NumFmt[];
} CT_NumFmts;

typedef struct {
	unsigned int NumFmtIdAttr; // attr
	char FormatCodeAttr; // attr
} CT_NumFmt;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Xf Xf[];
} CT_CellStyleXfs;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Xf Xf[];
} CT_CellXfs;

typedef struct {
	unsigned int NumFmtIdAttr; // attr, optional
	unsigned int FontIdAttr; // attr, optional
	unsigned int FillIdAttr; // attr, optional
	unsigned int BorderIdAttr; // attr, optional
	unsigned int XfIdAttr; // attr, optional
	bool QuotePrefixAttr; // attr, optional
	bool PivotButtonAttr; // attr, optional
	bool ApplyNumberFormatAttr; // attr, optional
	bool ApplyFontAttr; // attr, optional
	bool ApplyFillAttr; // attr, optional
	bool ApplyBorderAttr; // attr, optional
	bool ApplyAlignmentAttr; // attr, optional
	bool ApplyProtectionAttr; // attr, optional
	CT_CellAlignment Alignment[];
	CT_CellProtection Protection[];
	CT_ExtensionList ExtLst[];
} CT_Xf;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_CellStyle CellStyle[];
} CT_CellStyles;

typedef struct {
	char NameAttr; // attr, optional
	unsigned int XfIdAttr; // attr
	unsigned int BuiltinIdAttr; // attr, optional
	unsigned int ILevelAttr; // attr, optional
	bool HiddenAttr; // attr, optional
	bool CustomBuiltinAttr; // attr, optional
	CT_ExtensionList ExtLst[];
} CT_CellStyle;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_Dxf Dxf[];
} CT_Dxfs;

typedef struct {
	CT_Font Font[];
	CT_NumFmt NumFmt[];
	CT_Fill Fill[];
	CT_CellAlignment Alignment[];
	CT_Border Border[];
	CT_CellProtection Protection[];
	CT_ExtensionList ExtLst[];
} CT_Dxf;

typedef unsigned int ST_NumFmtId;

typedef unsigned int ST_FontId;

typedef unsigned int ST_FillId;

typedef unsigned int ST_BorderId;

typedef unsigned int ST_CellStyleXfId;

typedef unsigned int ST_DxfId;

typedef struct {
	CT_IndexedColors IndexedColors[];
	CT_MRUColors MruColors[];
} CT_Colors;

typedef struct {
	CT_RgbColor RgbColor[];
} CT_IndexedColors;

typedef struct {
	CT_Color Color[];
} CT_MRUColors;

typedef struct {
	char RgbAttr[]; // attr, optional
} CT_RgbColor;

typedef struct {
	unsigned int CountAttr; // attr, optional
	char DefaultTableStyleAttr; // attr, optional
	char DefaultPivotStyleAttr; // attr, optional
	CT_TableStyle TableStyle[];
} CT_TableStyles;

typedef struct {
	char NameAttr; // attr
	bool PivotAttr; // attr, optional
	bool TableAttr; // attr, optional
	unsigned int CountAttr; // attr, optional
	CT_TableStyleElement TableStyleElement[];
} CT_TableStyle;

typedef struct {
	char TypeAttr; // attr
	unsigned int SizeAttr; // attr, optional
	unsigned int DxfIdAttr; // attr, optional
} CT_TableStyleElement;

typedef char ST_TableStyleType;

typedef struct {
	bool ValAttr; // attr, optional
} CT_BooleanProperty;

typedef struct {
	float ValAttr; // attr
} CT_FontSize;

typedef struct {
	int ValAttr; // attr
} CT_IntProperty;

typedef struct {
	char ValAttr; // attr
} CT_FontName;

typedef struct {
	char ValAttr; // attr
} CT_VerticalAlignFontProperty;

typedef struct {
	char ValAttr; // attr
} CT_FontScheme;

typedef char ST_FontScheme;

typedef struct {
	char ValAttr; // attr, optional
} CT_UnderlineProperty;

typedef char ST_UnderlineValues;

typedef struct {
	int ValAttr; // attr
} CT_FontFamily;

typedef int ST_FontFamily;

typedef struct {
	CT_FontName Name[];
	CT_IntProperty Charset[];
	CT_FontFamily Family[];
	CT_BooleanProperty B[];
	CT_BooleanProperty I[];
	CT_BooleanProperty Strike[];
	CT_BooleanProperty Outline[];
	CT_BooleanProperty Shadow[];
	CT_BooleanProperty Condense[];
	CT_BooleanProperty Extend[];
	CT_Color Color[];
	CT_FontSize Sz[];
	CT_UnderlineProperty U[];
	CT_VerticalAlignFontProperty VertAlign[];
	CT_FontScheme Scheme[];
} CT_Font;

typedef struct {
	unsigned int AutoFormatIdAttr; // attr, optional
	bool ApplyNumberFormatsAttr; // attr, optional
	bool ApplyBorderFormatsAttr; // attr, optional
	bool ApplyFontFormatsAttr; // attr, optional
	bool ApplyPatternFormatsAttr; // attr, optional
	bool ApplyAlignmentFormatsAttr; // attr, optional
	bool ApplyWidthHeightFormatsAttr; // attr, optional
} AG_AutoFormat;

typedef CT_ExternalLink ExternalLink;

typedef struct {
	CT_ExternalBook ExternalBook[];
	CT_DdeLink DdeLink[];
	CT_OleLink OleLink[];
	CT_ExtensionList ExtLst;
} CT_ExternalLink;

typedef struct {
	char RIdAttr; // attr
	CT_ExternalSheetNames SheetNames[];
	CT_ExternalDefinedNames DefinedNames[];
	CT_ExternalSheetDataSet SheetDataSet[];
} CT_ExternalBook;

typedef struct {
	CT_ExternalSheetName SheetName[];
} CT_ExternalSheetNames;

typedef struct {
	char ValAttr; // attr, optional
} CT_ExternalSheetName;

typedef struct {
	CT_ExternalDefinedName DefinedName[];
} CT_ExternalDefinedNames;

typedef struct {
	char NameAttr; // attr
	char RefersToAttr; // attr, optional
	unsigned int SheetIdAttr; // attr, optional
} CT_ExternalDefinedName;

typedef struct {
	CT_ExternalSheetData SheetData[];
} CT_ExternalSheetDataSet;

typedef struct {
	unsigned int SheetIdAttr; // attr
	bool RefreshErrorAttr; // attr, optional
	CT_ExternalRow Row[];
} CT_ExternalSheetData;

typedef struct {
	unsigned int RAttr; // attr
	CT_ExternalCell Cell[];
} CT_ExternalRow;

typedef struct {
	char RAttr; // attr, optional
	char TAttr; // attr, optional
	unsigned int VmAttr; // attr, optional
	char V[];
} CT_ExternalCell;

typedef struct {
	char DdeServiceAttr; // attr
	char DdeTopicAttr; // attr
	CT_DdeItems DdeItems[];
} CT_DdeLink;

typedef struct {
	CT_DdeItem DdeItem[];
} CT_DdeItems;

typedef struct {
	char NameAttr; // attr, optional
	bool OleAttr; // attr, optional
	bool AdviseAttr; // attr, optional
	bool PreferPicAttr; // attr, optional
	CT_DdeValues Values[];
} CT_DdeItem;

typedef struct {
	unsigned int RowsAttr; // attr, optional
	unsigned int ColsAttr; // attr, optional
	CT_DdeValue Value[];
} CT_DdeValues;

typedef struct {
	char TAttr; // attr, optional
	char Val[];
} CT_DdeValue;

typedef char ST_DdeValueType;

typedef struct {
	char RIdAttr; // attr
	char ProgIdAttr; // attr
	CT_OleItems OleItems[];
} CT_OleLink;

typedef struct {
	CT_OleItem OleItem[];
} CT_OleItems;

typedef struct {
	char NameAttr; // attr
	bool IconAttr; // attr, optional
	bool AdviseAttr; // attr, optional
	bool PreferPicAttr; // attr, optional
} CT_OleItem;

typedef CT_Table Table;

typedef struct {
	unsigned int IdAttr; // attr
	char NameAttr; // attr, optional
	char DisplayNameAttr; // attr
	char CommentAttr; // attr, optional
	char RefAttr; // attr
	char TableTypeAttr; // attr, optional
	unsigned int HeaderRowCountAttr; // attr, optional
	bool InsertRowAttr; // attr, optional
	bool InsertRowShiftAttr; // attr, optional
	unsigned int TotalsRowCountAttr; // attr, optional
	bool TotalsRowShownAttr; // attr, optional
	bool PublishedAttr; // attr, optional
	unsigned int HeaderRowDxfIdAttr; // attr, optional
	unsigned int DataDxfIdAttr; // attr, optional
	unsigned int TotalsRowDxfIdAttr; // attr, optional
	unsigned int HeaderRowBorderDxfIdAttr; // attr, optional
	unsigned int TableBorderDxfIdAttr; // attr, optional
	unsigned int TotalsRowBorderDxfIdAttr; // attr, optional
	char HeaderRowCellStyleAttr; // attr, optional
	char DataCellStyleAttr; // attr, optional
	char TotalsRowCellStyleAttr; // attr, optional
	unsigned int ConnectionIdAttr; // attr, optional
	CT_AutoFilter AutoFilter[];
	CT_SortState SortState[];
	CT_TableColumns TableColumns[];
	CT_TableStyleInfo TableStyleInfo[];
	CT_ExtensionList ExtLst[];
} CT_Table;

typedef char ST_TableType;

typedef struct {
	char NameAttr; // attr, optional
	bool ShowFirstColumnAttr; // attr, optional
	bool ShowLastColumnAttr; // attr, optional
	bool ShowRowStripesAttr; // attr, optional
	bool ShowColumnStripesAttr; // attr, optional
} CT_TableStyleInfo;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_TableColumn TableColumn[];
} CT_TableColumns;

typedef struct {
	unsigned int IdAttr; // attr
	char UniqueNameAttr; // attr, optional
	char NameAttr; // attr
	char TotalsRowFunctionAttr; // attr, optional
	char TotalsRowLabelAttr; // attr, optional
	unsigned int QueryTableFieldIdAttr; // attr, optional
	unsigned int HeaderRowDxfIdAttr; // attr, optional
	unsigned int DataDxfIdAttr; // attr, optional
	unsigned int TotalsRowDxfIdAttr; // attr, optional
	char HeaderRowCellStyleAttr; // attr, optional
	char DataCellStyleAttr; // attr, optional
	char TotalsRowCellStyleAttr; // attr, optional
	CT_TableFormula CalculatedColumnFormula[];
	CT_TableFormula TotalsRowFormula[];
	CT_XmlColumnPr XmlColumnPr[];
	CT_ExtensionList ExtLst[];
} CT_TableColumn;

typedef struct {
	bool ArrayAttr; // attr, optional
} CT_TableFormula;

typedef char ST_TotalsRowFunction;

typedef struct {
	unsigned int MapIdAttr; // attr
	char XpathAttr; // attr
	bool DenormalizedAttr; // attr, optional
	char XmlDataTypeAttr; // attr
	CT_ExtensionList ExtLst[];
} CT_XmlColumnPr;

typedef char ST_XmlDataType;

typedef CT_VolTypes VolTypes;

typedef struct {
	CT_VolType VolType[];
	CT_ExtensionList ExtLst;
} CT_VolTypes;

typedef struct {
	char TypeAttr; // attr
	CT_VolMain Main[];
} CT_VolType;

typedef struct {
	char FirstAttr; // attr
	CT_VolTopic Tp[];
} CT_VolMain;

typedef struct {
	char TAttr; // attr, optional
	char V[];
	char Stp[];
	CT_VolTopicRef Tr[];
} CT_VolTopic;

typedef struct {
	char RAttr; // attr
	unsigned int SAttr; // attr
} CT_VolTopicRef;

typedef char ST_VolDepType;

typedef char ST_VolValueType;

typedef CT_Workbook Workbook;

typedef struct {
	char ConformanceAttr; // attr, optional
	CT_FileVersion FileVersion[];
	CT_FileSharing FileSharing[];
	CT_WorkbookPr WorkbookPr[];
	CT_WorkbookProtection WorkbookProtection[];
	CT_BookViews BookViews[];
	CT_Sheets Sheets[];
	CT_FunctionGroups FunctionGroups[];
	CT_ExternalReferences ExternalReferences[];
	CT_DefinedNames DefinedNames[];
	CT_CalcPr CalcPr[];
	CT_OleSize OleSize[];
	CT_CustomWorkbookViews CustomWorkbookViews[];
	CT_PivotCaches PivotCaches[];
	CT_SmartTagPr SmartTagPr[];
	CT_SmartTagTypes SmartTagTypes[];
	CT_WebPublishing WebPublishing[];
	CT_FileRecoveryPr FileRecoveryPr[];
	CT_WebPublishObjects WebPublishObjects[];
	CT_ExtensionList ExtLst[];
} CT_Workbook;

typedef struct {
	char AppNameAttr; // attr, optional
	char LastEditedAttr; // attr, optional
	char LowestEditedAttr; // attr, optional
	char RupBuildAttr; // attr, optional
	char CodeNameAttr; // attr, optional
} CT_FileVersion;

typedef struct {
	CT_BookView WorkbookView[];
} CT_BookViews;

typedef struct {
	char VisibilityAttr; // attr, optional
	bool MinimizedAttr; // attr, optional
	bool ShowHorizontalScrollAttr; // attr, optional
	bool ShowVerticalScrollAttr; // attr, optional
	bool ShowSheetTabsAttr; // attr, optional
	int XWindowAttr; // attr, optional
	int YWindowAttr; // attr, optional
	unsigned int WindowWidthAttr; // attr, optional
	unsigned int WindowHeightAttr; // attr, optional
	unsigned int TabRatioAttr; // attr, optional
	unsigned int FirstSheetAttr; // attr, optional
	unsigned int ActiveTabAttr; // attr, optional
	bool AutoFilterDateGroupingAttr; // attr, optional
	CT_ExtensionList ExtLst[];
} CT_BookView;

typedef char ST_Visibility;

typedef struct {
	CT_CustomWorkbookView CustomWorkbookView[];
} CT_CustomWorkbookViews;

typedef struct {
	char NameAttr; // attr
	char GuidAttr; // attr
	bool AutoUpdateAttr; // attr, optional
	unsigned int MergeIntervalAttr; // attr, optional
	bool ChangesSavedWinAttr; // attr, optional
	bool OnlySyncAttr; // attr, optional
	bool PersonalViewAttr; // attr, optional
	bool IncludePrintSettingsAttr; // attr, optional
	bool IncludeHiddenRowColAttr; // attr, optional
	bool MaximizedAttr; // attr, optional
	bool MinimizedAttr; // attr, optional
	bool ShowHorizontalScrollAttr; // attr, optional
	bool ShowVerticalScrollAttr; // attr, optional
	bool ShowSheetTabsAttr; // attr, optional
	int XWindowAttr; // attr, optional
	int YWindowAttr; // attr, optional
	unsigned int WindowWidthAttr; // attr
	unsigned int WindowHeightAttr; // attr
	unsigned int TabRatioAttr; // attr, optional
	unsigned int ActiveSheetIdAttr; // attr
	bool ShowFormulaBarAttr; // attr, optional
	bool ShowStatusbarAttr; // attr, optional
	char ShowCommentsAttr; // attr, optional
	char ShowObjectsAttr; // attr, optional
	CT_ExtensionList ExtLst;
} CT_CustomWorkbookView;

typedef char ST_Comments;

typedef char ST_Objects;

typedef struct {
	CT_Sheet Sheet[];
} CT_Sheets;

typedef struct {
	char NameAttr; // attr
	unsigned int SheetIdAttr; // attr
	char StateAttr; // attr, optional
	char RIdAttr; // attr
} CT_Sheet;

typedef char ST_SheetState;

typedef struct {
	bool Date1904Attr; // attr, optional
	char ShowObjectsAttr; // attr, optional
	bool ShowBorderUnselectedTablesAttr; // attr, optional
	bool FilterPrivacyAttr; // attr, optional
	bool PromptedSolutionsAttr; // attr, optional
	bool ShowInkAnnotationAttr; // attr, optional
	bool BackupFileAttr; // attr, optional
	bool SaveExternalLinkValuesAttr; // attr, optional
	char UpdateLinksAttr; // attr, optional
	char CodeNameAttr; // attr, optional
	bool HidePivotFieldListAttr; // attr, optional
	bool ShowPivotChartFilterAttr; // attr, optional
	bool AllowRefreshQueryAttr; // attr, optional
	bool PublishItemsAttr; // attr, optional
	bool CheckCompatibilityAttr; // attr, optional
	bool AutoCompressPicturesAttr; // attr, optional
	bool RefreshAllConnectionsAttr; // attr, optional
	unsigned int DefaultThemeVersionAttr; // attr, optional
} CT_WorkbookPr;

typedef char ST_UpdateLinks;

typedef struct {
	bool EmbedAttr; // attr, optional
	char ShowAttr; // attr, optional
} CT_SmartTagPr;

typedef char ST_SmartTagShow;

typedef struct {
	CT_SmartTagType SmartTagType[];
} CT_SmartTagTypes;

typedef struct {
	char NamespaceUriAttr; // attr, optional
	char NameAttr; // attr, optional
	char UrlAttr; // attr, optional
} CT_SmartTagType;

typedef struct {
	bool AutoRecoverAttr; // attr, optional
	bool CrashSaveAttr; // attr, optional
	bool DataExtractLoadAttr; // attr, optional
	bool RepairLoadAttr; // attr, optional
} CT_FileRecoveryPr;

typedef struct {
	unsigned int CalcIdAttr; // attr, optional
	char CalcModeAttr; // attr, optional
	bool FullCalcOnLoadAttr; // attr, optional
	char RefModeAttr; // attr, optional
	bool IterateAttr; // attr, optional
	unsigned int IterateCountAttr; // attr, optional
	float IterateDeltaAttr; // attr, optional
	bool FullPrecisionAttr; // attr, optional
	bool CalcCompletedAttr; // attr, optional
	bool CalcOnSaveAttr; // attr, optional
	bool ConcurrentCalcAttr; // attr, optional
	unsigned int ConcurrentManualCountAttr; // attr, optional
	bool ForceFullCalcAttr; // attr, optional
} CT_CalcPr;

typedef char ST_CalcMode;

typedef char ST_RefMode;

typedef struct {
	CT_DefinedName DefinedName[];
} CT_DefinedNames;

typedef struct {
	char NameAttr; // attr
	char CommentAttr; // attr, optional
	char CustomMenuAttr; // attr, optional
	char DescriptionAttr; // attr, optional
	char HelpAttr; // attr, optional
	char StatusBarAttr; // attr, optional
	unsigned int LocalSheetIdAttr; // attr, optional
	bool HiddenAttr; // attr, optional
	bool FunctionAttr; // attr, optional
	bool VbProcedureAttr; // attr, optional
	bool XlmAttr; // attr, optional
	unsigned int FunctionGroupIdAttr; // attr, optional
	char ShortcutKeyAttr; // attr, optional
	bool PublishToServerAttr; // attr, optional
	bool WorkbookParameterAttr; // attr, optional
} CT_DefinedName;

typedef struct {
	CT_ExternalReference ExternalReference[];
} CT_ExternalReferences;

typedef struct {
	char RIdAttr; // attr
} CT_ExternalReference;

typedef struct {
	char RIdAttr; // attr
} CT_SheetBackgroundPicture;

typedef struct {
	CT_PivotCache PivotCache[];
} CT_PivotCaches;

typedef struct {
	unsigned int CacheIdAttr; // attr
	char RIdAttr; // attr
} CT_PivotCache;

typedef struct {
	bool ReadOnlyRecommendedAttr; // attr, optional
	char UserNameAttr; // attr, optional
	char AlgorithmNameAttr; // attr, optional
	char HashValueAttr[]; // attr, optional
	char SaltValueAttr[]; // attr, optional
	unsigned int SpinCountAttr; // attr, optional
} CT_FileSharing;

typedef struct {
	char RefAttr; // attr
} CT_OleSize;

typedef struct {
	bool LockStructureAttr; // attr, optional
	bool LockWindowsAttr; // attr, optional
	bool LockRevisionAttr; // attr, optional
	char RevisionsAlgorithmNameAttr; // attr, optional
	char RevisionsHashValueAttr[]; // attr, optional
	char RevisionsSaltValueAttr[]; // attr, optional
	unsigned int RevisionsSpinCountAttr; // attr, optional
	char WorkbookAlgorithmNameAttr; // attr, optional
	char WorkbookHashValueAttr[]; // attr, optional
	char WorkbookSaltValueAttr[]; // attr, optional
	unsigned int WorkbookSpinCountAttr; // attr, optional
} CT_WorkbookProtection;

typedef struct {
	bool CssAttr; // attr, optional
	bool ThicketAttr; // attr, optional
	bool LongFileNamesAttr; // attr, optional
	bool VmlAttr; // attr, optional
	bool AllowPngAttr; // attr, optional
	char TargetScreenSizeAttr; // attr, optional
	unsigned int DpiAttr; // attr, optional
	char CharacterSetAttr; // attr, optional
} CT_WebPublishing;

typedef char ST_TargetScreenSize;

typedef struct {
	unsigned int BuiltInGroupCountAttr; // attr, optional
	CT_FunctionGroup FunctionGroup;
} CT_FunctionGroups;

typedef struct {
	char NameAttr; // attr, optional
} CT_FunctionGroup;

typedef struct {
	unsigned int CountAttr; // attr, optional
	CT_WebPublishObject WebPublishObject[];
} CT_WebPublishObjects;

typedef struct {
	unsigned int IdAttr; // attr
	char DivIdAttr; // attr
	char SourceObjectAttr; // attr, optional
	char DestinationFileAttr; // attr
	char TitleAttr; // attr, optional
	bool AutoRepublishAttr; // attr, optional
} CT_WebPublishObject;
