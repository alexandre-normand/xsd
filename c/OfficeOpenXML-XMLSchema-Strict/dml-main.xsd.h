// Code generated by xgen. DO NOT EDIT.

typedef struct {
	char RLinkAttr; // attr
	char ContentTypeAttr; // attr, optional
	CT_OfficeArtExtensionList ExtLst[];
} CT_AudioFile;

typedef struct {
	char RLinkAttr; // attr
	char ContentTypeAttr; // attr, optional
	CT_OfficeArtExtensionList ExtLst[];
} CT_VideoFile;

typedef struct {
	char RLinkAttr; // attr
	CT_OfficeArtExtensionList ExtLst[];
} CT_QuickTimeFile;

typedef struct {
	char TrackAttr; // attr
	unsigned int TimeAttr; // attr, optional
} CT_AudioCDTime;

typedef struct {
	CT_AudioCDTime St[];
	CT_AudioCDTime End[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_AudioCD;

typedef struct {
	CT_AudioCD AudioCd;
	CT_EmbeddedWAVAudioFile WavAudioFile;
	CT_AudioFile AudioFile;
	CT_VideoFile VideoFile;
	CT_QuickTimeFile QuickTimeFile;
} EG_Media;

typedef CT_VideoFile VideoFile;

typedef unsigned int ST_StyleMatrixColumnIndex;

typedef char ST_FontCollectionIndex;

typedef char ST_ColorSchemeIndex;

typedef struct {
	char NameAttr; // attr
	CT_Color Dk1[];
	CT_Color Lt1[];
	CT_Color Dk2[];
	CT_Color Lt2[];
	CT_Color Accent1[];
	CT_Color Accent2[];
	CT_Color Accent3[];
	CT_Color Accent4[];
	CT_Color Accent5[];
	CT_Color Accent6[];
	CT_Color Hlink[];
	CT_Color FolHlink[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_ColorScheme;

typedef struct {
	char NameAttr; // attr, optional
	EG_ColorChoice EG_ColorChoice[];
} CT_CustomColor;

typedef struct {
	char ScriptAttr; // attr
	char TypefaceAttr; // attr
} CT_SupplementalFont;

typedef struct {
	CT_CustomColor CustClr[];
} CT_CustomColorList;

typedef struct {
	CT_TextFont Latin[];
	CT_TextFont Ea[];
	CT_TextFont Cs[];
	CT_SupplementalFont Font[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_FontCollection;

typedef struct {
	EG_EffectProperties EG_EffectProperties[];
	CT_Scene3D Scene3d[];
	CT_Shape3D Sp3d[];
} CT_EffectStyleItem;

typedef struct {
	char NameAttr; // attr
	CT_FontCollection MajorFont[];
	CT_FontCollection MinorFont[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_FontScheme;

typedef struct {
	EG_FillProperties EG_FillProperties[];
} CT_FillStyleList;

typedef struct {
	CT_LineProperties Ln[];
} CT_LineStyleList;

typedef struct {
	CT_EffectStyleItem EffectStyle[];
} CT_EffectStyleList;

typedef struct {
	EG_FillProperties EG_FillProperties[];
} CT_BackgroundFillStyleList;

typedef struct {
	char NameAttr; // attr, optional
	CT_FillStyleList FillStyleLst[];
	CT_LineStyleList LnStyleLst[];
	CT_EffectStyleList EffectStyleLst[];
	CT_BackgroundFillStyleList BgFillStyleLst[];
} CT_StyleMatrix;

typedef struct {
	CT_ColorScheme ClrScheme[];
	CT_FontScheme FontScheme[];
	CT_StyleMatrix FmtScheme[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_BaseStyles;

typedef struct {
	char UriAttr; // attr
} CT_OfficeArtExtension;

typedef struct {
	ST_CoordinateUnqualified ST_CoordinateUnqualified;
	char ST_UniversalMeasure;
} ST_Coordinate;

typedef int ST_CoordinateUnqualified;

typedef struct {
	ST_Coordinate32Unqualified ST_Coordinate32Unqualified;
	char ST_UniversalMeasure;
} ST_Coordinate32;

typedef int ST_Coordinate32Unqualified;

typedef int ST_PositiveCoordinate;

typedef int ST_PositiveCoordinate32;

typedef int ST_Angle;

typedef struct {
	int ValAttr; // attr
} CT_Angle;

typedef int ST_FixedAngle;

typedef int ST_PositiveFixedAngle;

typedef struct {
	int ValAttr; // attr
} CT_PositiveFixedAngle;

typedef struct {
	char ST_Percentage;
} ST_Percentage;

typedef struct {
	ST_Percentage ValAttr; // attr
} CT_Percentage;

typedef struct {
	char ST_PositivePercentage;
} ST_PositivePercentage;

typedef struct {
	ST_PositivePercentage ValAttr; // attr
} CT_PositivePercentage;

typedef struct {
	char ST_FixedPercentage;
} ST_FixedPercentage;

typedef struct {
	ST_FixedPercentage ValAttr; // attr
} CT_FixedPercentage;

typedef struct {
	char ST_PositiveFixedPercentage;
} ST_PositiveFixedPercentage;

typedef struct {
	ST_PositiveFixedPercentage ValAttr; // attr
} CT_PositiveFixedPercentage;

typedef struct {
	int NAttr; // attr
	int DAttr; // attr
} CT_Ratio;

typedef struct {
	ST_Coordinate XAttr; // attr
	ST_Coordinate YAttr; // attr
} CT_Point2D;

typedef struct {
	int CxAttr; // attr
	int CyAttr; // attr
} CT_PositiveSize2D;

typedef struct {
} CT_ComplementTransform;

typedef struct {
} CT_InverseTransform;

typedef struct {
} CT_GrayscaleTransform;

typedef struct {
} CT_GammaTransform;

typedef struct {
} CT_InverseGammaTransform;

typedef struct {
	CT_PositiveFixedPercentage Tint[];
	CT_PositiveFixedPercentage Shade[];
	CT_ComplementTransform Comp[];
	CT_InverseTransform Inv[];
	CT_GrayscaleTransform Gray[];
	CT_PositiveFixedPercentage Alpha[];
	CT_FixedPercentage AlphaOff[];
	CT_PositivePercentage AlphaMod[];
	CT_PositiveFixedAngle Hue[];
	CT_Angle HueOff[];
	CT_PositivePercentage HueMod[];
	CT_Percentage Sat[];
	CT_Percentage SatOff[];
	CT_Percentage SatMod[];
	CT_Percentage Lum[];
	CT_Percentage LumOff[];
	CT_Percentage LumMod[];
	CT_Percentage Red[];
	CT_Percentage RedOff[];
	CT_Percentage RedMod[];
	CT_Percentage Green[];
	CT_Percentage GreenOff[];
	CT_Percentage GreenMod[];
	CT_Percentage Blue[];
	CT_Percentage BlueOff[];
	CT_Percentage BlueMod[];
	CT_GammaTransform Gamma[];
	CT_InverseGammaTransform InvGamma[];
} EG_ColorTransform;

typedef struct {
	ST_Percentage RAttr; // attr
	ST_Percentage GAttr; // attr
	ST_Percentage BAttr; // attr
	EG_ColorTransform EG_ColorTransform[];
} CT_ScRgbColor;

typedef struct {
	char ValAttr[]; // attr
	EG_ColorTransform EG_ColorTransform[];
} CT_SRgbColor;

typedef struct {
	int HueAttr; // attr
	ST_Percentage SatAttr; // attr
	ST_Percentage LumAttr; // attr
	EG_ColorTransform EG_ColorTransform[];
} CT_HslColor;

typedef char ST_SystemColorVal;

typedef struct {
	char ValAttr; // attr
	char LastClrAttr[]; // attr, optional
	EG_ColorTransform EG_ColorTransform[];
} CT_SystemColor;

typedef char ST_SchemeColorVal;

typedef struct {
	char ValAttr; // attr
	EG_ColorTransform EG_ColorTransform[];
} CT_SchemeColor;

typedef char ST_PresetColorVal;

typedef struct {
	char ValAttr; // attr
	EG_ColorTransform EG_ColorTransform[];
} CT_PresetColor;

typedef struct {
	CT_OfficeArtExtension Ext[];
} EG_OfficeArtExtensionList;

typedef struct {
	EG_OfficeArtExtensionList EG_OfficeArtExtensionList[];
} CT_OfficeArtExtensionList;

typedef struct {
	CT_Ratio Sx[];
	CT_Ratio Sy[];
} CT_Scale2D;

typedef struct {
	int RotAttr; // attr, optional
	bool FlipHAttr; // attr, optional
	bool FlipVAttr; // attr, optional
	CT_Point2D Off[];
	CT_PositiveSize2D Ext[];
} CT_Transform2D;

typedef struct {
	int RotAttr; // attr, optional
	bool FlipHAttr; // attr, optional
	bool FlipVAttr; // attr, optional
	CT_Point2D Off[];
	CT_PositiveSize2D Ext[];
	CT_Point2D ChOff[];
	CT_PositiveSize2D ChExt[];
} CT_GroupTransform2D;

typedef struct {
	ST_Coordinate XAttr; // attr
	ST_Coordinate YAttr; // attr
	ST_Coordinate ZAttr; // attr
} CT_Point3D;

typedef struct {
	ST_Coordinate DxAttr; // attr
	ST_Coordinate DyAttr; // attr
	ST_Coordinate DzAttr; // attr
} CT_Vector3D;

typedef struct {
	int LatAttr; // attr
	int LonAttr; // attr
	int RevAttr; // attr
} CT_SphereCoords;

typedef struct {
	ST_Percentage LAttr; // attr, optional
	ST_Percentage TAttr; // attr, optional
	ST_Percentage RAttr; // attr, optional
	ST_Percentage BAttr; // attr, optional
} CT_RelativeRect;

typedef char ST_RectAlignment;

typedef struct {
	CT_ScRgbColor ScrgbClr[];
	CT_SRgbColor SrgbClr[];
	CT_HslColor HslClr[];
	CT_SystemColor SysClr[];
	CT_SchemeColor SchemeClr[];
	CT_PresetColor PrstClr[];
} EG_ColorChoice;

typedef struct {
	EG_ColorChoice EG_ColorChoice;
} CT_Color;

typedef struct {
	EG_ColorChoice EG_ColorChoice[];
} CT_ColorMRU;

typedef char ST_BlackWhiteMode;

typedef struct {
	char REmbedAttr; // attr, optional
	char RLinkAttr; // attr, optional
} AG_Blob;

typedef struct {
	char REmbedAttr; // attr
	char NameAttr; // attr, optional
} CT_EmbeddedWAVAudioFile;

typedef struct {
	char RIdAttr; // attr, optional
	char InvalidUrlAttr; // attr, optional
	char ActionAttr; // attr, optional
	char TgtFrameAttr; // attr, optional
	char TooltipAttr; // attr, optional
	bool HistoryAttr; // attr, optional
	bool HighlightClickAttr; // attr, optional
	bool EndSndAttr; // attr, optional
	CT_EmbeddedWAVAudioFile Snd[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_Hyperlink;

typedef unsigned int ST_DrawingElementId;

typedef struct {
	bool NoGrpAttr; // attr, optional
	bool NoSelectAttr; // attr, optional
	bool NoRotAttr; // attr, optional
	bool NoChangeAspectAttr; // attr, optional
	bool NoMoveAttr; // attr, optional
	bool NoResizeAttr; // attr, optional
	bool NoEditPointsAttr; // attr, optional
	bool NoAdjustHandlesAttr; // attr, optional
	bool NoChangeArrowheadsAttr; // attr, optional
	bool NoChangeShapeTypeAttr; // attr, optional
} AG_Locking;

typedef struct {
	AG_Locking AG_Locking;
	CT_OfficeArtExtensionList ExtLst[];
} CT_ConnectorLocking;

typedef struct {
	AG_Locking AG_Locking;
	bool NoTextEditAttr; // attr, optional
	CT_OfficeArtExtensionList ExtLst[];
} CT_ShapeLocking;

typedef struct {
	AG_Locking AG_Locking;
	bool NoCropAttr; // attr, optional
	CT_OfficeArtExtensionList ExtLst[];
} CT_PictureLocking;

typedef struct {
	bool NoGrpAttr; // attr, optional
	bool NoUngrpAttr; // attr, optional
	bool NoSelectAttr; // attr, optional
	bool NoRotAttr; // attr, optional
	bool NoChangeAspectAttr; // attr, optional
	bool NoMoveAttr; // attr, optional
	bool NoResizeAttr; // attr, optional
	CT_OfficeArtExtensionList ExtLst[];
} CT_GroupLocking;

typedef struct {
	bool NoGrpAttr; // attr, optional
	bool NoDrilldownAttr; // attr, optional
	bool NoSelectAttr; // attr, optional
	bool NoChangeAspectAttr; // attr, optional
	bool NoMoveAttr; // attr, optional
	bool NoResizeAttr; // attr, optional
	CT_OfficeArtExtensionList ExtLst[];
} CT_GraphicalObjectFrameLocking;

typedef struct {
	AG_Locking AG_Locking;
	CT_OfficeArtExtensionList ExtLst[];
} CT_ContentPartLocking;

typedef struct {
	unsigned int IdAttr; // attr
	char NameAttr; // attr
	char DescrAttr; // attr, optional
	bool HiddenAttr; // attr, optional
	char TitleAttr; // attr, optional
	CT_Hyperlink HlinkClick[];
	CT_Hyperlink HlinkHover[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_NonVisualDrawingProps;

typedef struct {
	bool TxBoxAttr; // attr, optional
	CT_ShapeLocking SpLocks[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_NonVisualDrawingShapeProps;

typedef struct {
	CT_ConnectorLocking CxnSpLocks[];
	CT_Connection StCxn[];
	CT_Connection EndCxn[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_NonVisualConnectorProperties;

typedef struct {
	bool PreferRelativeResizeAttr; // attr, optional
	CT_PictureLocking PicLocks[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_NonVisualPictureProperties;

typedef struct {
	CT_GroupLocking GrpSpLocks[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_NonVisualGroupDrawingShapeProps;

typedef struct {
	CT_GraphicalObjectFrameLocking GraphicFrameLocks[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_NonVisualGraphicFrameProperties;

typedef struct {
	bool IsCommentAttr; // attr, optional
	CT_ContentPartLocking CpLocks[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_NonVisualContentPartProperties;

typedef struct {
	char UriAttr; // attr
} CT_GraphicalObjectData;

typedef struct {
	CT_GraphicalObjectData GraphicData;
} CT_GraphicalObject;

typedef CT_GraphicalObject Graphic;

typedef char ST_ChartBuildStep;

typedef char ST_DgmBuildStep;

typedef struct {
	char IdAttr; // attr, optional
	char BldStepAttr; // attr, optional
} CT_AnimationDgmElement;

typedef struct {
	int SeriesIdxAttr; // attr, optional
	int CategoryIdxAttr; // attr, optional
	char BldStepAttr; // attr
} CT_AnimationChartElement;

typedef struct {
	CT_AnimationDgmElement Dgm;
	CT_AnimationChartElement Chart;
} CT_AnimationElementChoice;

typedef char ST_AnimationBuildType;

typedef char ST_AnimationDgmOnlyBuildType;

typedef struct {
	char ST_AnimationBuildType;
	char ST_AnimationDgmOnlyBuildType;
} ST_AnimationDgmBuildType;

typedef struct {
	ST_AnimationDgmBuildType BldAttr; // attr, optional
	bool RevAttr; // attr, optional
} CT_AnimationDgmBuildProperties;

typedef char ST_AnimationChartOnlyBuildType;

typedef struct {
	char ST_AnimationBuildType;
	char ST_AnimationChartOnlyBuildType;
} ST_AnimationChartBuildType;

typedef struct {
	ST_AnimationChartBuildType BldAttr; // attr, optional
	bool AnimBgAttr; // attr, optional
} CT_AnimationChartBuildProperties;

typedef struct {
	CT_AnimationDgmBuildProperties BldDgm;
	CT_AnimationChartBuildProperties BldChart;
} CT_AnimationGraphicalObjectBuildProperties;

typedef struct {
	EG_FillProperties EG_FillProperties[];
	EG_EffectProperties EG_EffectProperties[];
} CT_BackgroundFormatting;

typedef struct {
	EG_EffectProperties EG_EffectProperties[];
	CT_LineProperties Ln[];
} CT_WholeE2oFormatting;

typedef struct {
} CT_GvmlUseShapeRectangle;

typedef struct {
	CT_TextBody TxBody[];
	CT_GvmlUseShapeRectangle UseSpRect[];
	CT_Transform2D Xfrm[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_GvmlTextShape;

typedef struct {
	CT_NonVisualDrawingProps CNvPr[];
	CT_NonVisualDrawingShapeProps CNvSpPr[];
} CT_GvmlShapeNonVisual;

typedef struct {
	CT_GvmlShapeNonVisual NvSpPr[];
	CT_ShapeProperties SpPr[];
	CT_GvmlTextShape TxSp[];
	CT_ShapeStyle Style[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_GvmlShape;

typedef struct {
	CT_NonVisualDrawingProps CNvPr[];
	CT_NonVisualConnectorProperties CNvCxnSpPr[];
} CT_GvmlConnectorNonVisual;

typedef struct {
	CT_GvmlConnectorNonVisual NvCxnSpPr[];
	CT_ShapeProperties SpPr[];
	CT_ShapeStyle Style[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_GvmlConnector;

typedef struct {
	CT_NonVisualDrawingProps CNvPr[];
	CT_NonVisualPictureProperties CNvPicPr[];
} CT_GvmlPictureNonVisual;

typedef struct {
	CT_GvmlPictureNonVisual NvPicPr[];
	CT_BlipFillProperties BlipFill[];
	CT_ShapeProperties SpPr[];
	CT_ShapeStyle Style[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_GvmlPicture;

typedef struct {
	CT_NonVisualDrawingProps CNvPr[];
	CT_NonVisualGraphicFrameProperties CNvGraphicFramePr[];
} CT_GvmlGraphicFrameNonVisual;

typedef struct {
	CT_GvmlGraphicFrameNonVisual NvGraphicFramePr[];
	CT_GraphicalObject Graphic[];
	CT_Transform2D Xfrm[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_GvmlGraphicalObjectFrame;

typedef struct {
	CT_NonVisualDrawingProps CNvPr[];
	CT_NonVisualGroupDrawingShapeProps CNvGrpSpPr[];
} CT_GvmlGroupShapeNonVisual;

typedef struct {
	CT_GvmlGroupShapeNonVisual NvGrpSpPr[];
	CT_GroupShapeProperties GrpSpPr[];
	CT_GvmlTextShape TxSp;
	CT_GvmlShape Sp;
	CT_GvmlConnector CxnSp;
	CT_GvmlPicture Pic;
	CT_GvmlGraphicalObjectFrame GraphicFrame;
	CT_GvmlGroupShape GrpSp;
	CT_OfficeArtExtensionList ExtLst[];
} CT_GvmlGroupShape;

typedef char ST_PresetCameraType;

typedef int ST_FOVAngle;

typedef struct {
	char PrstAttr; // attr
	int FovAttr; // attr, optional
	ST_PositivePercentage ZoomAttr; // attr, optional
	CT_SphereCoords Rot[];
} CT_Camera;

typedef char ST_LightRigDirection;

typedef char ST_LightRigType;

typedef struct {
	char RigAttr; // attr
	char DirAttr; // attr
	CT_SphereCoords Rot[];
} CT_LightRig;

typedef struct {
	CT_Camera Camera[];
	CT_LightRig LightRig[];
	CT_Backdrop Backdrop[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_Scene3D;

typedef struct {
	CT_Point3D Anchor[];
	CT_Vector3D Norm[];
	CT_Vector3D Up[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_Backdrop;

typedef char ST_BevelPresetType;

typedef struct {
	int WAttr; // attr, optional
	int HAttr; // attr, optional
	char PrstAttr; // attr, optional
} CT_Bevel;

typedef char ST_PresetMaterialType;

typedef struct {
	ST_Coordinate ZAttr; // attr, optional
	int ExtrusionHAttr; // attr, optional
	int ContourWAttr; // attr, optional
	char PrstMaterialAttr; // attr, optional
	CT_Bevel BevelT[];
	CT_Bevel BevelB[];
	CT_Color ExtrusionClr[];
	CT_Color ContourClr[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_Shape3D;

typedef struct {
	ST_Coordinate ZAttr; // attr, optional
} CT_FlatText;

typedef struct {
	CT_Shape3D Sp3d[];
	CT_FlatText FlatTx[];
} EG_Text3D;

typedef struct {
	ST_PositiveFixedPercentage ThreshAttr; // attr
} CT_AlphaBiLevelEffect;

typedef struct {
} CT_AlphaCeilingEffect;

typedef struct {
} CT_AlphaFloorEffect;

typedef struct {
	EG_ColorChoice EG_ColorChoice[];
} CT_AlphaInverseEffect;

typedef struct {
	ST_PositivePercentage AmtAttr; // attr, optional
} CT_AlphaModulateFixedEffect;

typedef struct {
	ST_Coordinate RadAttr; // attr, optional
} CT_AlphaOutsetEffect;

typedef struct {
	ST_PositiveFixedPercentage AAttr; // attr
} CT_AlphaReplaceEffect;

typedef struct {
	ST_PositiveFixedPercentage ThreshAttr; // attr
} CT_BiLevelEffect;

typedef struct {
	int RadAttr; // attr, optional
	bool GrowAttr; // attr, optional
} CT_BlurEffect;

typedef struct {
	bool UseAAttr; // attr, optional
	CT_Color ClrFrom[];
	CT_Color ClrTo[];
} CT_ColorChangeEffect;

typedef struct {
	EG_ColorChoice EG_ColorChoice[];
} CT_ColorReplaceEffect;

typedef struct {
	EG_ColorChoice EG_ColorChoice[];
} CT_DuotoneEffect;

typedef struct {
	int RadAttr; // attr, optional
	EG_ColorChoice EG_ColorChoice[];
} CT_GlowEffect;

typedef struct {
} CT_GrayscaleEffect;

typedef struct {
	int HueAttr; // attr, optional
	ST_FixedPercentage SatAttr; // attr, optional
	ST_FixedPercentage LumAttr; // attr, optional
} CT_HSLEffect;

typedef struct {
	int BlurRadAttr; // attr, optional
	int DistAttr; // attr, optional
	int DirAttr; // attr, optional
	EG_ColorChoice EG_ColorChoice[];
} CT_InnerShadowEffect;

typedef struct {
	ST_FixedPercentage BrightAttr; // attr, optional
	ST_FixedPercentage ContrastAttr; // attr, optional
} CT_LuminanceEffect;

typedef struct {
	int BlurRadAttr; // attr, optional
	int DistAttr; // attr, optional
	int DirAttr; // attr, optional
	ST_Percentage SxAttr; // attr, optional
	ST_Percentage SyAttr; // attr, optional
	int KxAttr; // attr, optional
	int KyAttr; // attr, optional
	char AlgnAttr; // attr, optional
	bool RotWithShapeAttr; // attr, optional
	EG_ColorChoice EG_ColorChoice[];
} CT_OuterShadowEffect;

typedef char ST_PresetShadowVal;

typedef struct {
	char PrstAttr; // attr
	int DistAttr; // attr, optional
	int DirAttr; // attr, optional
	EG_ColorChoice EG_ColorChoice[];
} CT_PresetShadowEffect;

typedef struct {
	int BlurRadAttr; // attr, optional
	ST_PositiveFixedPercentage StAAttr; // attr, optional
	ST_PositiveFixedPercentage StPosAttr; // attr, optional
	ST_PositiveFixedPercentage EndAAttr; // attr, optional
	ST_PositiveFixedPercentage EndPosAttr; // attr, optional
	int DistAttr; // attr, optional
	int DirAttr; // attr, optional
	int FadeDirAttr; // attr, optional
	ST_Percentage SxAttr; // attr, optional
	ST_Percentage SyAttr; // attr, optional
	int KxAttr; // attr, optional
	int KyAttr; // attr, optional
	char AlgnAttr; // attr, optional
	bool RotWithShapeAttr; // attr, optional
} CT_ReflectionEffect;

typedef struct {
	ST_Percentage TxAttr; // attr, optional
	ST_Percentage TyAttr; // attr, optional
} CT_RelativeOffsetEffect;

typedef struct {
	int RadAttr; // attr
} CT_SoftEdgesEffect;

typedef struct {
	int HueAttr; // attr, optional
	ST_FixedPercentage AmtAttr; // attr, optional
} CT_TintEffect;

typedef struct {
	ST_Percentage SxAttr; // attr, optional
	ST_Percentage SyAttr; // attr, optional
	int KxAttr; // attr, optional
	int KyAttr; // attr, optional
	ST_Coordinate TxAttr; // attr, optional
	ST_Coordinate TyAttr; // attr, optional
} CT_TransformEffect;

typedef struct {
} CT_NoFillProperties;

typedef struct {
	EG_ColorChoice EG_ColorChoice[];
} CT_SolidColorFillProperties;

typedef struct {
	int AngAttr; // attr, optional
	bool ScaledAttr; // attr, optional
} CT_LinearShadeProperties;

typedef char ST_PathShadeType;

typedef struct {
	char PathAttr; // attr, optional
	CT_RelativeRect FillToRect[];
} CT_PathShadeProperties;

typedef struct {
	CT_LinearShadeProperties Lin[];
	CT_PathShadeProperties Path[];
} EG_ShadeProperties;

typedef char ST_TileFlipMode;

typedef struct {
	ST_PositiveFixedPercentage PosAttr; // attr
	EG_ColorChoice EG_ColorChoice[];
} CT_GradientStop;

typedef struct {
	CT_GradientStop Gs[];
} CT_GradientStopList;

typedef struct {
	char FlipAttr; // attr, optional
	bool RotWithShapeAttr; // attr, optional
	EG_ShadeProperties EG_ShadeProperties[];
	CT_GradientStopList GsLst[];
	CT_RelativeRect TileRect[];
} CT_GradientFillProperties;

typedef struct {
	ST_Coordinate TxAttr; // attr, optional
	ST_Coordinate TyAttr; // attr, optional
	ST_Percentage SxAttr; // attr, optional
	ST_Percentage SyAttr; // attr, optional
	char FlipAttr; // attr, optional
	char AlgnAttr; // attr, optional
} CT_TileInfoProperties;

typedef struct {
	CT_RelativeRect FillRect[];
} CT_StretchInfoProperties;

typedef struct {
	CT_TileInfoProperties Tile[];
	CT_StretchInfoProperties Stretch[];
} EG_FillModeProperties;

typedef char ST_BlipCompression;

typedef struct {
	AG_Blob AG_Blob;
	char CstateAttr; // attr, optional
	CT_AlphaBiLevelEffect AlphaBiLevel[];
	CT_AlphaCeilingEffect AlphaCeiling[];
	CT_AlphaFloorEffect AlphaFloor[];
	CT_AlphaInverseEffect AlphaInv[];
	CT_AlphaModulateEffect AlphaMod[];
	CT_AlphaModulateFixedEffect AlphaModFix[];
	CT_AlphaReplaceEffect AlphaRepl[];
	CT_BiLevelEffect BiLevel[];
	CT_BlurEffect Blur[];
	CT_ColorChangeEffect ClrChange[];
	CT_ColorReplaceEffect ClrRepl[];
	CT_DuotoneEffect Duotone[];
	CT_FillOverlayEffect FillOverlay[];
	CT_GrayscaleEffect Grayscl[];
	CT_HSLEffect Hsl[];
	CT_LuminanceEffect Lum[];
	CT_TintEffect Tint[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_Blip;

typedef struct {
	unsigned int DpiAttr; // attr, optional
	bool RotWithShapeAttr; // attr, optional
	EG_FillModeProperties EG_FillModeProperties[];
	CT_Blip Blip[];
	CT_RelativeRect SrcRect[];
} CT_BlipFillProperties;

typedef char ST_PresetPatternVal;

typedef struct {
	char PrstAttr; // attr, optional
	CT_Color FgClr[];
	CT_Color BgClr[];
} CT_PatternFillProperties;

typedef struct {
} CT_GroupFillProperties;

typedef struct {
	CT_NoFillProperties NoFill[];
	CT_SolidColorFillProperties SolidFill[];
	CT_GradientFillProperties GradFill[];
	CT_BlipFillProperties BlipFill[];
	CT_PatternFillProperties PattFill[];
	CT_GroupFillProperties GrpFill[];
} EG_FillProperties;

typedef struct {
	EG_FillProperties EG_FillProperties[];
} CT_FillProperties;

typedef struct {
	EG_FillProperties EG_FillProperties[];
} CT_FillEffect;

typedef char ST_BlendMode;

typedef struct {
	char BlendAttr; // attr
	EG_FillProperties EG_FillProperties[];
} CT_FillOverlayEffect;

typedef struct {
	char RefAttr; // attr
} CT_EffectReference;

typedef struct {
	CT_EffectContainer Cont[];
	CT_EffectReference Effect[];
	CT_AlphaBiLevelEffect AlphaBiLevel[];
	CT_AlphaCeilingEffect AlphaCeiling[];
	CT_AlphaFloorEffect AlphaFloor[];
	CT_AlphaInverseEffect AlphaInv[];
	CT_AlphaModulateEffect AlphaMod[];
	CT_AlphaModulateFixedEffect AlphaModFix[];
	CT_AlphaOutsetEffect AlphaOutset[];
	CT_AlphaReplaceEffect AlphaRepl[];
	CT_BiLevelEffect BiLevel[];
	CT_BlendEffect Blend[];
	CT_BlurEffect Blur[];
	CT_ColorChangeEffect ClrChange[];
	CT_ColorReplaceEffect ClrRepl[];
	CT_DuotoneEffect Duotone[];
	CT_FillEffect Fill[];
	CT_FillOverlayEffect FillOverlay[];
	CT_GlowEffect Glow[];
	CT_GrayscaleEffect Grayscl[];
	CT_HSLEffect Hsl[];
	CT_InnerShadowEffect InnerShdw[];
	CT_LuminanceEffect Lum[];
	CT_OuterShadowEffect OuterShdw[];
	CT_PresetShadowEffect PrstShdw[];
	CT_ReflectionEffect Reflection[];
	CT_RelativeOffsetEffect RelOff[];
	CT_SoftEdgesEffect SoftEdge[];
	CT_TintEffect Tint[];
	CT_TransformEffect Xfrm[];
} EG_Effect;

typedef char ST_EffectContainerType;

typedef struct {
	char TypeAttr; // attr, optional
	char NameAttr; // attr, optional
	EG_Effect EG_Effect[];
} CT_EffectContainer;

typedef struct {
	CT_EffectContainer Cont[];
} CT_AlphaModulateEffect;

typedef struct {
	char BlendAttr; // attr
	CT_EffectContainer Cont[];
} CT_BlendEffect;

typedef struct {
	CT_BlurEffect Blur[];
	CT_FillOverlayEffect FillOverlay[];
	CT_GlowEffect Glow[];
	CT_InnerShadowEffect InnerShdw[];
	CT_OuterShadowEffect OuterShdw[];
	CT_PresetShadowEffect PrstShdw[];
	CT_ReflectionEffect Reflection[];
	CT_SoftEdgesEffect SoftEdge[];
} CT_EffectList;

typedef struct {
	CT_EffectList EffectLst[];
	CT_EffectContainer EffectDag[];
} EG_EffectProperties;

typedef struct {
	EG_EffectProperties EG_EffectProperties[];
} CT_EffectProperties;

typedef CT_Blip Blip;

typedef char ST_ShapeType;

typedef char ST_TextShapeType;

typedef char ST_GeomGuideName;

typedef char ST_GeomGuideFormula;

typedef struct {
	char NameAttr; // attr
	char FmlaAttr; // attr
} CT_GeomGuide;

typedef struct {
	CT_GeomGuide Gd[];
} CT_GeomGuideList;

typedef struct {
	ST_Coordinate ST_Coordinate;
	char ST_GeomGuideName;
} ST_AdjCoordinate;

typedef struct {
	int ST_Angle;
	char ST_GeomGuideName;
} ST_AdjAngle;

typedef struct {
	ST_AdjCoordinate XAttr; // attr
	ST_AdjCoordinate YAttr; // attr
} CT_AdjPoint2D;

typedef struct {
	ST_AdjCoordinate LAttr; // attr
	ST_AdjCoordinate TAttr; // attr
	ST_AdjCoordinate RAttr; // attr
	ST_AdjCoordinate BAttr; // attr
} CT_GeomRect;

typedef struct {
	char GdRefXAttr; // attr, optional
	ST_AdjCoordinate MinXAttr; // attr, optional
	ST_AdjCoordinate MaxXAttr; // attr, optional
	char GdRefYAttr; // attr, optional
	ST_AdjCoordinate MinYAttr; // attr, optional
	ST_AdjCoordinate MaxYAttr; // attr, optional
	CT_AdjPoint2D Pos[];
} CT_XYAdjustHandle;

typedef struct {
	char GdRefRAttr; // attr, optional
	ST_AdjCoordinate MinRAttr; // attr, optional
	ST_AdjCoordinate MaxRAttr; // attr, optional
	char GdRefAngAttr; // attr, optional
	ST_AdjAngle MinAngAttr; // attr, optional
	ST_AdjAngle MaxAngAttr; // attr, optional
	CT_AdjPoint2D Pos[];
} CT_PolarAdjustHandle;

typedef struct {
	ST_AdjAngle AngAttr; // attr
	CT_AdjPoint2D Pos[];
} CT_ConnectionSite;

typedef struct {
	CT_XYAdjustHandle AhXY[];
	CT_PolarAdjustHandle AhPolar[];
} CT_AdjustHandleList;

typedef struct {
	CT_ConnectionSite Cxn[];
} CT_ConnectionSiteList;

typedef struct {
	unsigned int IdAttr; // attr
	unsigned int IdxAttr; // attr
} CT_Connection;

typedef struct {
	CT_AdjPoint2D Pt[];
} CT_Path2DMoveTo;

typedef struct {
	CT_AdjPoint2D Pt[];
} CT_Path2DLineTo;

typedef struct {
	ST_AdjCoordinate WRAttr; // attr
	ST_AdjCoordinate HRAttr; // attr
	ST_AdjAngle StAngAttr; // attr
	ST_AdjAngle SwAngAttr; // attr
} CT_Path2DArcTo;

typedef struct {
	CT_AdjPoint2D Pt[];
} CT_Path2DQuadBezierTo;

typedef struct {
	CT_AdjPoint2D Pt[];
} CT_Path2DCubicBezierTo;

typedef struct {
} CT_Path2DClose;

typedef char ST_PathFillMode;

typedef struct {
	int WAttr; // attr, optional
	int HAttr; // attr, optional
	char FillAttr; // attr, optional
	bool StrokeAttr; // attr, optional
	bool ExtrusionOkAttr; // attr, optional
	CT_Path2DClose Close[];
	CT_Path2DMoveTo MoveTo[];
	CT_Path2DLineTo LnTo[];
	CT_Path2DArcTo ArcTo[];
	CT_Path2DQuadBezierTo QuadBezTo[];
	CT_Path2DCubicBezierTo CubicBezTo[];
} CT_Path2D;

typedef struct {
	CT_Path2D Path[];
} CT_Path2DList;

typedef struct {
	char PrstAttr; // attr
	CT_GeomGuideList AvLst[];
} CT_PresetGeometry2D;

typedef struct {
	char PrstAttr; // attr
	CT_GeomGuideList AvLst[];
} CT_PresetTextShape;

typedef struct {
	CT_GeomGuideList AvLst[];
	CT_GeomGuideList GdLst[];
	CT_AdjustHandleList AhLst[];
	CT_ConnectionSiteList CxnLst[];
	CT_GeomRect Rect[];
	CT_Path2DList PathLst[];
} CT_CustomGeometry2D;

typedef struct {
	CT_CustomGeometry2D CustGeom[];
	CT_PresetGeometry2D PrstGeom[];
} EG_Geometry;

typedef struct {
	CT_CustomGeometry2D CustGeom[];
	CT_PresetTextShape PrstTxWarp[];
} EG_TextGeometry;

typedef char ST_LineEndType;

typedef char ST_LineEndWidth;

typedef char ST_LineEndLength;

typedef struct {
	char TypeAttr; // attr, optional
	char WAttr; // attr, optional
	char LenAttr; // attr, optional
} CT_LineEndProperties;

typedef struct {
	CT_NoFillProperties NoFill[];
	CT_SolidColorFillProperties SolidFill[];
	CT_GradientFillProperties GradFill[];
	CT_PatternFillProperties PattFill[];
} EG_LineFillProperties;

typedef struct {
} CT_LineJoinBevel;

typedef struct {
} CT_LineJoinRound;

typedef struct {
	ST_PositivePercentage LimAttr; // attr, optional
} CT_LineJoinMiterProperties;

typedef struct {
	CT_LineJoinRound Round[];
	CT_LineJoinBevel Bevel[];
	CT_LineJoinMiterProperties Miter[];
} EG_LineJoinProperties;

typedef char ST_PresetLineDashVal;

typedef struct {
	char ValAttr; // attr, optional
} CT_PresetLineDashProperties;

typedef struct {
	ST_PositivePercentage DAttr; // attr
	ST_PositivePercentage SpAttr; // attr
} CT_DashStop;

typedef struct {
	CT_DashStop Ds[];
} CT_DashStopList;

typedef struct {
	CT_PresetLineDashProperties PrstDash[];
	CT_DashStopList CustDash[];
} EG_LineDashProperties;

typedef char ST_LineCap;

typedef int ST_LineWidth;

typedef char ST_PenAlignment;

typedef char ST_CompoundLine;

typedef struct {
	int WAttr; // attr, optional
	char CapAttr; // attr, optional
	char CmpdAttr; // attr, optional
	char AlgnAttr; // attr, optional
	EG_LineFillProperties EG_LineFillProperties[];
	EG_LineDashProperties EG_LineDashProperties[];
	EG_LineJoinProperties EG_LineJoinProperties[];
	CT_LineEndProperties HeadEnd[];
	CT_LineEndProperties TailEnd[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_LineProperties;

typedef char ST_ShapeID;

typedef struct {
	char BwModeAttr; // attr, optional
	EG_Geometry EG_Geometry[];
	EG_FillProperties EG_FillProperties[];
	EG_EffectProperties EG_EffectProperties[];
	CT_Transform2D Xfrm[];
	CT_LineProperties Ln[];
	CT_Scene3D Scene3d[];
	CT_Shape3D Sp3d[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_ShapeProperties;

typedef struct {
	char BwModeAttr; // attr, optional
	EG_FillProperties EG_FillProperties[];
	EG_EffectProperties EG_EffectProperties[];
	CT_GroupTransform2D Xfrm[];
	CT_Scene3D Scene3d[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_GroupShapeProperties;

typedef struct {
	unsigned int IdxAttr; // attr
	EG_ColorChoice EG_ColorChoice[];
} CT_StyleMatrixReference;

typedef struct {
	char IdxAttr; // attr
	EG_ColorChoice EG_ColorChoice[];
} CT_FontReference;

typedef struct {
	CT_StyleMatrixReference LnRef[];
	CT_StyleMatrixReference FillRef[];
	CT_StyleMatrixReference EffectRef[];
	CT_FontReference FontRef[];
} CT_ShapeStyle;

typedef struct {
	CT_ShapeProperties SpPr[];
	CT_TextBodyProperties BodyPr[];
	CT_TextListStyle LstStyle[];
	CT_ShapeStyle Style[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_DefaultShapeDefinition;

typedef struct {
	CT_DefaultShapeDefinition SpDef[];
	CT_DefaultShapeDefinition LnDef[];
	CT_DefaultShapeDefinition TxDef[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_ObjectStyleDefaults;

typedef struct {
} CT_EmptyElement;

typedef struct {
	char Bg1Attr; // attr
	char Tx1Attr; // attr
	char Bg2Attr; // attr
	char Tx2Attr; // attr
	char Accent1Attr; // attr
	char Accent2Attr; // attr
	char Accent3Attr; // attr
	char Accent4Attr; // attr
	char Accent5Attr; // attr
	char Accent6Attr; // attr
	char HlinkAttr; // attr
	char FolHlinkAttr; // attr
	CT_OfficeArtExtensionList ExtLst[];
} CT_ColorMapping;

typedef struct {
	CT_EmptyElement MasterClrMapping;
	CT_ColorMapping OverrideClrMapping;
} CT_ColorMappingOverride;

typedef struct {
	CT_ColorScheme ClrScheme[];
	CT_ColorMapping ClrMap[];
} CT_ColorSchemeAndMapping;

typedef struct {
	CT_ColorSchemeAndMapping ExtraClrScheme[];
} CT_ColorSchemeList;

typedef struct {
	char NameAttr; // attr, optional
	CT_BaseStyles ThemeElements[];
	CT_ObjectStyleDefaults ObjectDefaults[];
	CT_ColorSchemeList ExtraClrSchemeLst[];
	CT_CustomColorList CustClrLst[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_OfficeStyleSheet;

typedef struct {
	CT_ColorScheme ClrScheme[];
	CT_FontScheme FontScheme[];
	CT_StyleMatrix FmtScheme[];
} CT_BaseStylesOverride;

typedef struct {
	CT_BaseStyles ThemeElements[];
	CT_ColorMapping ClrMap[];
} CT_ClipboardStyleSheet;

typedef CT_OfficeStyleSheet Theme;

typedef CT_BaseStylesOverride ThemeOverride;

typedef CT_EmptyElement ThemeManager;

typedef struct {
	ST_Coordinate32 MarLAttr; // attr, optional
	ST_Coordinate32 MarRAttr; // attr, optional
	ST_Coordinate32 MarTAttr; // attr, optional
	ST_Coordinate32 MarBAttr; // attr, optional
	char VertAttr; // attr, optional
	char AnchorAttr; // attr, optional
	bool AnchorCtrAttr; // attr, optional
	char HorzOverflowAttr; // attr, optional
	EG_FillProperties EG_FillProperties[];
	CT_LineProperties LnL[];
	CT_LineProperties LnR[];
	CT_LineProperties LnT[];
	CT_LineProperties LnB[];
	CT_LineProperties LnTlToBr[];
	CT_LineProperties LnBlToTr[];
	CT_Cell3D Cell3D[];
	CT_Headers Headers;
	CT_OfficeArtExtensionList ExtLst[];
} CT_TableCellProperties;

typedef struct {
	char Header;
} CT_Headers;

typedef struct {
	ST_Coordinate WAttr; // attr
	CT_OfficeArtExtensionList ExtLst[];
} CT_TableCol;

typedef struct {
	CT_TableCol GridCol[];
} CT_TableGrid;

typedef struct {
	int RowSpanAttr; // attr, optional
	int GridSpanAttr; // attr, optional
	bool HMergeAttr; // attr, optional
	bool VMergeAttr; // attr, optional
	char IdAttr; // attr, optional
	CT_TextBody TxBody[];
	CT_TableCellProperties TcPr[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_TableCell;

typedef struct {
	ST_Coordinate HAttr; // attr
	CT_TableCell Tc[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_TableRow;

typedef struct {
	bool RtlAttr; // attr, optional
	bool FirstRowAttr; // attr, optional
	bool FirstColAttr; // attr, optional
	bool LastRowAttr; // attr, optional
	bool LastColAttr; // attr, optional
	bool BandRowAttr; // attr, optional
	bool BandColAttr; // attr, optional
	EG_FillProperties EG_FillProperties[];
	EG_EffectProperties EG_EffectProperties[];
	CT_TableStyle TableStyle;
	char TableStyleId;
	CT_OfficeArtExtensionList ExtLst[];
} CT_TableProperties;

typedef struct {
	CT_TableProperties TblPr[];
	CT_TableGrid TblGrid[];
	CT_TableRow Tr[];
} CT_Table;

typedef CT_Table Tbl;

typedef struct {
	char PrstMaterialAttr; // attr, optional
	CT_Bevel Bevel[];
	CT_LightRig LightRig[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_Cell3D;

typedef struct {
	CT_FillProperties Fill[];
	CT_StyleMatrixReference FillRef[];
} EG_ThemeableFillStyle;

typedef struct {
	CT_LineProperties Ln[];
	CT_StyleMatrixReference LnRef[];
} CT_ThemeableLineStyle;

typedef struct {
	CT_EffectProperties Effect[];
	CT_StyleMatrixReference EffectRef[];
} EG_ThemeableEffectStyle;

typedef struct {
	CT_FontCollection Font[];
	CT_FontReference FontRef[];
} EG_ThemeableFontStyles;

typedef char ST_OnOffStyleType;

typedef struct {
	char BAttr; // attr, optional
	char IAttr; // attr, optional
	EG_ThemeableFontStyles EG_ThemeableFontStyles[];
	EG_ColorChoice EG_ColorChoice[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_TableStyleTextStyle;

typedef struct {
	CT_ThemeableLineStyle Left[];
	CT_ThemeableLineStyle Right[];
	CT_ThemeableLineStyle Top[];
	CT_ThemeableLineStyle Bottom[];
	CT_ThemeableLineStyle InsideH[];
	CT_ThemeableLineStyle InsideV[];
	CT_ThemeableLineStyle Tl2br[];
	CT_ThemeableLineStyle Tr2bl[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_TableCellBorderStyle;

typedef struct {
	EG_ThemeableFillStyle EG_ThemeableFillStyle[];
	EG_ThemeableEffectStyle EG_ThemeableEffectStyle[];
} CT_TableBackgroundStyle;

typedef struct {
	EG_ThemeableFillStyle EG_ThemeableFillStyle[];
	CT_TableCellBorderStyle TcBdr[];
	CT_Cell3D Cell3D[];
} CT_TableStyleCellStyle;

typedef struct {
	CT_TableStyleTextStyle TcTxStyle[];
	CT_TableStyleCellStyle TcStyle[];
} CT_TablePartStyle;

typedef struct {
	char StyleIdAttr; // attr
	char StyleNameAttr; // attr
	CT_TableBackgroundStyle TblBg[];
	CT_TablePartStyle WholeTbl[];
	CT_TablePartStyle Band1H[];
	CT_TablePartStyle Band2H[];
	CT_TablePartStyle Band1V[];
	CT_TablePartStyle Band2V[];
	CT_TablePartStyle LastCol[];
	CT_TablePartStyle FirstCol[];
	CT_TablePartStyle LastRow[];
	CT_TablePartStyle SeCell[];
	CT_TablePartStyle SwCell[];
	CT_TablePartStyle FirstRow[];
	CT_TablePartStyle NeCell[];
	CT_TablePartStyle NwCell[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_TableStyle;

typedef struct {
	char DefAttr; // attr
	CT_TableStyle TblStyle[];
} CT_TableStyleList;

typedef CT_TableStyleList TblStyleLst;

typedef struct {
	EG_TextRun EG_TextRun[];
	CT_TextParagraphProperties PPr[];
	CT_TextCharacterProperties EndParaRPr[];
} CT_TextParagraph;

typedef char ST_TextAnchoringType;

typedef char ST_TextVertOverflowType;

typedef char ST_TextHorzOverflowType;

typedef char ST_TextVerticalType;

typedef char ST_TextWrappingType;

typedef int ST_TextColumnCount;

typedef struct {
	CT_TextParagraphProperties DefPPr[];
	CT_TextParagraphProperties Lvl1pPr[];
	CT_TextParagraphProperties Lvl2pPr[];
	CT_TextParagraphProperties Lvl3pPr[];
	CT_TextParagraphProperties Lvl4pPr[];
	CT_TextParagraphProperties Lvl5pPr[];
	CT_TextParagraphProperties Lvl6pPr[];
	CT_TextParagraphProperties Lvl7pPr[];
	CT_TextParagraphProperties Lvl8pPr[];
	CT_TextParagraphProperties Lvl9pPr[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_TextListStyle;

typedef struct {
	char ST_Percentage;
} ST_TextFontScalePercentOrPercentString;

typedef struct {
	ST_TextFontScalePercentOrPercentString FontScaleAttr; // attr, optional
	ST_TextSpacingPercentOrPercentString LnSpcReductionAttr; // attr, optional
} CT_TextNormalAutofit;

typedef struct {
} CT_TextShapeAutofit;

typedef struct {
} CT_TextNoAutofit;

typedef struct {
	CT_TextNoAutofit NoAutofit;
	CT_TextNormalAutofit NormAutofit;
	CT_TextShapeAutofit SpAutoFit;
} EG_TextAutofit;

typedef struct {
	int RotAttr; // attr, optional
	bool SpcFirstLastParaAttr; // attr, optional
	char VertOverflowAttr; // attr, optional
	char HorzOverflowAttr; // attr, optional
	char VertAttr; // attr, optional
	char WrapAttr; // attr, optional
	ST_Coordinate32 LInsAttr; // attr, optional
	ST_Coordinate32 TInsAttr; // attr, optional
	ST_Coordinate32 RInsAttr; // attr, optional
	ST_Coordinate32 BInsAttr; // attr, optional
	int NumColAttr; // attr, optional
	int SpcColAttr; // attr, optional
	bool RtlColAttr; // attr, optional
	bool FromWordArtAttr; // attr, optional
	char AnchorAttr; // attr, optional
	bool AnchorCtrAttr; // attr, optional
	bool ForceAAAttr; // attr, optional
	bool UprightAttr; // attr, optional
	bool CompatLnSpcAttr; // attr, optional
	EG_TextAutofit EG_TextAutofit[];
	EG_Text3D EG_Text3D[];
	CT_PresetTextShape PrstTxWarp[];
	CT_Scene3D Scene3d[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_TextBodyProperties;

typedef struct {
	CT_TextBodyProperties BodyPr[];
	CT_TextListStyle LstStyle[];
	CT_TextParagraph P[];
} CT_TextBody;

typedef int ST_TextBulletStartAtNum;

typedef char ST_TextAutonumberScheme;

typedef struct {
} CT_TextBulletColorFollowText;

typedef struct {
	CT_TextBulletColorFollowText BuClrTx[];
	CT_Color BuClr[];
} EG_TextBulletColor;

typedef struct {
	ST_TextBulletSizePercent ST_TextBulletSizePercent;
} ST_TextBulletSize;

typedef char ST_TextBulletSizePercent;

typedef struct {
} CT_TextBulletSizeFollowText;

typedef struct {
	char ValAttr; // attr
} CT_TextBulletSizePercent;

typedef struct {
	int ValAttr; // attr
} CT_TextBulletSizePoint;

typedef struct {
	CT_TextBulletSizeFollowText BuSzTx;
	CT_TextBulletSizePercent BuSzPct;
	CT_TextBulletSizePoint BuSzPts;
} EG_TextBulletSize;

typedef struct {
} CT_TextBulletTypefaceFollowText;

typedef struct {
	CT_TextBulletTypefaceFollowText BuFontTx;
	CT_TextFont BuFont;
} EG_TextBulletTypeface;

typedef struct {
	char TypeAttr; // attr
	int StartAtAttr; // attr, optional
} CT_TextAutonumberBullet;

typedef struct {
	char CharAttr; // attr
} CT_TextCharBullet;

typedef struct {
	CT_Blip Blip[];
} CT_TextBlipBullet;

typedef struct {
} CT_TextNoBullet;

typedef struct {
	CT_TextNoBullet BuNone;
	CT_TextAutonumberBullet BuAutoNum;
	CT_TextCharBullet BuChar;
	CT_TextBlipBullet BuBlip;
} EG_TextBullet;

typedef struct {
	ST_TextPointUnqualified ST_TextPointUnqualified;
	char ST_UniversalMeasure;
} ST_TextPoint;

typedef int ST_TextPointUnqualified;

typedef int ST_TextNonNegativePoint;

typedef int ST_TextFontSize;

typedef char ST_TextTypeface;

typedef char ST_PitchFamily[];

typedef struct {
	char TypefaceAttr; // attr
	char PanoseAttr[]; // attr, optional
	char PitchFamilyAttr[]; // attr, optional
	char CharsetAttr[]; // attr, optional
} CT_TextFont;

typedef char ST_TextUnderlineType;

typedef struct {
} CT_TextUnderlineLineFollowText;

typedef struct {
} CT_TextUnderlineFillFollowText;

typedef struct {
	EG_FillProperties EG_FillProperties[];
} CT_TextUnderlineFillGroupWrapper;

typedef struct {
	CT_TextUnderlineLineFollowText ULnTx;
	CT_LineProperties ULn[];
} EG_TextUnderlineLine;

typedef struct {
	CT_TextUnderlineFillFollowText UFillTx;
	CT_TextUnderlineFillGroupWrapper UFill;
} EG_TextUnderlineFill;

typedef char ST_TextStrikeType;

typedef char ST_TextCapsType;

typedef struct {
	bool KumimojiAttr; // attr, optional
	char LangAttr; // attr, optional
	char AltLangAttr; // attr, optional
	int SzAttr; // attr, optional
	bool BAttr; // attr, optional
	bool IAttr; // attr, optional
	char UAttr; // attr, optional
	char StrikeAttr; // attr, optional
	int KernAttr; // attr, optional
	char CapAttr; // attr, optional
	ST_TextPoint SpcAttr; // attr, optional
	bool NormalizeHAttr; // attr, optional
	ST_Percentage BaselineAttr; // attr, optional
	bool NoProofAttr; // attr, optional
	bool DirtyAttr; // attr, optional
	bool ErrAttr; // attr, optional
	bool SmtCleanAttr; // attr, optional
	unsigned int SmtIdAttr; // attr, optional
	char BmkAttr; // attr, optional
	EG_FillProperties EG_FillProperties[];
	EG_EffectProperties EG_EffectProperties[];
	EG_TextUnderlineLine EG_TextUnderlineLine[];
	EG_TextUnderlineFill EG_TextUnderlineFill[];
	CT_LineProperties Ln[];
	CT_Color Highlight[];
	CT_TextFont Latin[];
	CT_TextFont Ea[];
	CT_TextFont Cs[];
	CT_TextFont Sym[];
	CT_Hyperlink HlinkClick[];
	CT_Hyperlink HlinkMouseOver[];
	CT_Boolean Rtl;
	CT_OfficeArtExtensionList ExtLst[];
} CT_TextCharacterProperties;

typedef struct {
	ST_OnOff ValAttr; // attr, optional
} CT_Boolean;

typedef int ST_TextSpacingPoint;

typedef struct {
	char ST_Percentage;
} ST_TextSpacingPercentOrPercentString;

typedef struct {
	ST_TextSpacingPercentOrPercentString ValAttr; // attr
} CT_TextSpacingPercent;

typedef struct {
	int ValAttr; // attr
} CT_TextSpacingPoint;

typedef int ST_TextMargin;

typedef int ST_TextIndent;

typedef char ST_TextTabAlignType;

typedef struct {
	ST_Coordinate32 PosAttr; // attr, optional
	char AlgnAttr; // attr, optional
} CT_TextTabStop;

typedef struct {
	CT_TextTabStop Tab[];
} CT_TextTabStopList;

typedef struct {
	CT_TextCharacterProperties RPr[];
} CT_TextLineBreak;

typedef struct {
	CT_TextSpacingPercent SpcPct;
	CT_TextSpacingPoint SpcPts;
} CT_TextSpacing;

typedef char ST_TextAlignType;

typedef char ST_TextFontAlignType;

typedef int ST_TextIndentLevelType;

typedef struct {
	int MarLAttr; // attr, optional
	int MarRAttr; // attr, optional
	int LvlAttr; // attr, optional
	int IndentAttr; // attr, optional
	char AlgnAttr; // attr, optional
	ST_Coordinate32 DefTabSzAttr; // attr, optional
	bool RtlAttr; // attr, optional
	bool EaLnBrkAttr; // attr, optional
	char FontAlgnAttr; // attr, optional
	bool LatinLnBrkAttr; // attr, optional
	bool HangingPunctAttr; // attr, optional
	EG_TextBulletColor EG_TextBulletColor[];
	EG_TextBulletSize EG_TextBulletSize[];
	EG_TextBulletTypeface EG_TextBulletTypeface[];
	EG_TextBullet EG_TextBullet[];
	CT_TextSpacing LnSpc[];
	CT_TextSpacing SpcBef[];
	CT_TextSpacing SpcAft[];
	CT_TextTabStopList TabLst[];
	CT_TextCharacterProperties DefRPr[];
	CT_OfficeArtExtensionList ExtLst[];
} CT_TextParagraphProperties;

typedef struct {
	char IdAttr; // attr
	char TypeAttr; // attr, optional
	CT_TextCharacterProperties RPr[];
	CT_TextParagraphProperties PPr[];
	char T[];
} CT_TextField;

typedef struct {
	CT_RegularTextRun R;
	CT_TextLineBreak Br;
	CT_TextField Fld;
} EG_TextRun;

typedef struct {
	CT_TextCharacterProperties RPr[];
	char T[];
} CT_RegularTextRun;
