// Copyright 2020 The xgen Authors. All rights reserved.
//
// DO NOT EDIT: generated by xgen XSD generator
//
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package schema

// CTCTName ...
type CTCTName struct {
	LangAttr string `xml:"lang,attr,omitempty"`
	ValAttr  string `xml:"val,attr"`
}

// CTCTDescription ...
type CTCTDescription struct {
	LangAttr string `xml:"lang,attr,omitempty"`
	ValAttr  string `xml:"val,attr"`
}

// CTCTCategory ...
type CTCTCategory struct {
	TypeAttr string  `xml:"type,attr"`
	PriAttr  *Uint32 `xml:"pri,attr"`
}

// CTCTCategories ...
type CTCTCategories struct {
	Cat []*CTCTCategory `xml:"cat"`
}

// STClrAppMethod ...
type STClrAppMethod string

// STHueDir ...
type STHueDir string

// CTColors ...
type CTColors struct {
	MethAttr       string `xml:"meth,attr,omitempty"`
	HueDirAttr     string `xml:"hueDir,attr,omitempty"`
	AEGColorChoice []*EGColorChoice
}

// CTCTStyleLabel ...
type CTCTStyleLabel struct {
	NameAttr       string                      `xml:"name,attr"`
	FillClrLst     []*CTColors                 `xml:"fillClrLst"`
	LinClrLst      []*CTColors                 `xml:"linClrLst"`
	EffectClrLst   []*CTColors                 `xml:"effectClrLst"`
	TxLinClrLst    []*CTColors                 `xml:"txLinClrLst"`
	TxFillClrLst   []*CTColors                 `xml:"txFillClrLst"`
	TxEffectClrLst []*CTColors                 `xml:"txEffectClrLst"`
	ExtLst         []*CTOfficeArtExtensionList `xml:"extLst"`
}

// CTColorTransform ...
type CTColorTransform struct {
	UniqueIdAttr string                      `xml:"uniqueId,attr,omitempty"`
	MinVerAttr   string                      `xml:"minVer,attr,omitempty"`
	Title        []*CTCTName                 `xml:"title"`
	Desc         []*CTCTDescription          `xml:"desc"`
	CatLst       *CTCTCategories             `xml:"catLst"`
	StyleLbl     []*CTCTStyleLabel           `xml:"styleLbl"`
	ExtLst       []*CTOfficeArtExtensionList `xml:"extLst"`
}

// ColorsDef ...
type ColorsDef *CTColorTransform

// CTColorTransformHeader ...
type CTColorTransformHeader struct {
	UniqueIdAttr string                      `xml:"uniqueId,attr"`
	MinVerAttr   string                      `xml:"minVer,attr,omitempty"`
	ResIdAttr    int                         `xml:"resId,attr,omitempty"`
	Title        []*CTCTName                 `xml:"title"`
	Desc         []*CTCTDescription          `xml:"desc"`
	CatLst       *CTCTCategories             `xml:"catLst"`
	ExtLst       []*CTOfficeArtExtensionList `xml:"extLst"`
}

// ColorsDefHdr ...
type ColorsDefHdr *CTColorTransformHeader

// CTColorTransformHeaderLst ...
type CTColorTransformHeaderLst struct {
	ColorsDefHdr []*CTColorTransformHeader `xml:"colorsDefHdr"`
}

// ColorsDefHdrLst ...
type ColorsDefHdrLst *CTColorTransformHeaderLst

// STPtType ...
type STPtType string

// CTPt ...
type CTPt struct {
	ModelIdAttr *STModelId                  `xml:"modelId,attr"`
	TypeAttr    string                      `xml:"type,attr,omitempty"`
	CxnIdAttr   *STModelId                  `xml:"cxnId,attr,omitempty"`
	PrSet       []*CTElemPropSet            `xml:"prSet"`
	SpPr        []*CTShapeProperties        `xml:"spPr"`
	T           []*CTTextBody               `xml:"t"`
	ExtLst      []*CTOfficeArtExtensionList `xml:"extLst"`
}

// CTPtList ...
type CTPtList struct {
	Pt []*CTPt `xml:"pt"`
}

// STCxnType ...
type STCxnType string

// CTCxn ...
type CTCxn struct {
	ModelIdAttr    *STModelId                  `xml:"modelId,attr"`
	TypeAttr       string                      `xml:"type,attr,omitempty"`
	SrcIdAttr      *STModelId                  `xml:"srcId,attr"`
	DestIdAttr     *STModelId                  `xml:"destId,attr"`
	SrcOrdAttr     *Uint32                     `xml:"srcOrd,attr"`
	DestOrdAttr    *Uint32                     `xml:"destOrd,attr"`
	ParTransIdAttr *STModelId                  `xml:"parTransId,attr,omitempty"`
	SibTransIdAttr *STModelId                  `xml:"sibTransId,attr,omitempty"`
	PresIdAttr     string                      `xml:"presId,attr,omitempty"`
	ExtLst         []*CTOfficeArtExtensionList `xml:"extLst"`
}

// CTCxnList ...
type CTCxnList struct {
	Cxn []*CTCxn `xml:"cxn"`
}

// CTDataModel ...
type CTDataModel struct {
	PtLst  *CTPtList                   `xml:"ptLst"`
	CxnLst []*CTCxnList                `xml:"cxnLst"`
	Bg     *CTBackgroundFormatting     `xml:"bg"`
	Whole  *CTWholeE2oFormatting       `xml:"whole"`
	ExtLst []*CTOfficeArtExtensionList `xml:"extLst"`
}

// DataModel ...
type DataModel *CTDataModel

// AGIteratorAttributes ...
type AGIteratorAttributes struct {
	AxisAttr          *STAxisTypes    `xml:"axis,attr,omitempty"`
	PtTypeAttr        *STElementTypes `xml:"ptType,attr,omitempty"`
	HideLastTransAttr *STBooleans     `xml:"hideLastTrans,attr,omitempty"`
	StAttr            *STInts         `xml:"st,attr,omitempty"`
	CntAttr           *STUnsignedInts `xml:"cnt,attr,omitempty"`
	StepAttr          *STInts         `xml:"step,attr,omitempty"`
}

// AGConstraintAttributes ...
type AGConstraintAttributes struct {
	TypeAttr    string `xml:"type,attr"`
	ForAttr     string `xml:"for,attr,omitempty"`
	ForNameAttr string `xml:"forName,attr,omitempty"`
	PtTypeAttr  string `xml:"ptType,attr,omitempty"`
}

// AGConstraintRefAttributes ...
type AGConstraintRefAttributes struct {
	RefTypeAttr    string `xml:"refType,attr,omitempty"`
	RefForAttr     string `xml:"refFor,attr,omitempty"`
	RefForNameAttr string `xml:"refForName,attr,omitempty"`
	RefPtTypeAttr  string `xml:"refPtType,attr,omitempty"`
}

// CTConstraint ...
type CTConstraint struct {
	AGConstraintAttributes    *AGConstraintAttributes
	AGConstraintRefAttributes *AGConstraintRefAttributes
	OpAttr                    string                      `xml:"op,attr,omitempty"`
	ValAttr                   float64                     `xml:"val,attr,omitempty"`
	FactAttr                  float64                     `xml:"fact,attr,omitempty"`
	ExtLst                    []*CTOfficeArtExtensionList `xml:"extLst"`
}

// CTConstraints ...
type CTConstraints struct {
	Constr []*CTConstraint `xml:"constr"`
}

// CTNumericRule ...
type CTNumericRule struct {
	AGConstraintAttributes *AGConstraintAttributes
	ValAttr                float64                     `xml:"val,attr,omitempty"`
	FactAttr               float64                     `xml:"fact,attr,omitempty"`
	MaxAttr                float64                     `xml:"max,attr,omitempty"`
	ExtLst                 []*CTOfficeArtExtensionList `xml:"extLst"`
}

// CTRules ...
type CTRules struct {
	Rule []*CTNumericRule `xml:"rule"`
}

// CTPresentationOf ...
type CTPresentationOf struct {
	AGIteratorAttributes *AGIteratorAttributes
	ExtLst               []*CTOfficeArtExtensionList `xml:"extLst"`
}

// STLayoutShapeType ...
type STLayoutShapeType struct {
	STOutputShapeType *STOutputShapeType
	STShapeType       string
}

// STIndex1 ...
type STIndex1 *Uint32

// CTAdj ...
type CTAdj struct {
	IdxAttr *Uint32 `xml:"idx,attr"`
	ValAttr float64 `xml:"val,attr"`
}

// CTAdjLst ...
type CTAdjLst struct {
	Adj []*CTAdj `xml:"adj"`
}

// CTShape ...
type CTShape struct {
	RotAttr       float64                     `xml:"rot,attr,omitempty"`
	TypeAttr      *STLayoutShapeType          `xml:"type,attr,omitempty"`
	RBlipAttr     string                      `xml:"r:blip,attr,omitempty"`
	ZOrderOffAttr int                         `xml:"zOrderOff,attr,omitempty"`
	HideGeomAttr  bool                        `xml:"hideGeom,attr,omitempty"`
	LkTxEntryAttr bool                        `xml:"lkTxEntry,attr,omitempty"`
	BlipPhldrAttr bool                        `xml:"blipPhldr,attr,omitempty"`
	AdjLst        []*CTAdjLst                 `xml:"adjLst"`
	ExtLst        []*CTOfficeArtExtensionList `xml:"extLst"`
}

// CTParameter ...
type CTParameter struct {
	TypeAttr string          `xml:"type,attr"`
	ValAttr  *STParameterVal `xml:"val,attr"`
}

// CTAlgorithm ...
type CTAlgorithm struct {
	TypeAttr string                      `xml:"type,attr"`
	RevAttr  *Uint32                     `xml:"rev,attr,omitempty"`
	Param    []*CTParameter              `xml:"param"`
	ExtLst   []*CTOfficeArtExtensionList `xml:"extLst"`
}

// CTLayoutNode ...
type CTLayoutNode struct {
	NameAttr     string                         `xml:"name,attr,omitempty"`
	StyleLblAttr string                         `xml:"styleLbl,attr,omitempty"`
	ChOrderAttr  string                         `xml:"chOrder,attr,omitempty"`
	MoveWithAttr string                         `xml:"moveWith,attr,omitempty"`
	Alg          []*CTAlgorithm                 `xml:"alg"`
	Shape        []*CTShape                     `xml:"shape"`
	PresOf       []*CTPresentationOf            `xml:"presOf"`
	ConstrLst    []*CTConstraints               `xml:"constrLst"`
	RuleLst      []*CTRules                     `xml:"ruleLst"`
	VarLst       []*CTLayoutVariablePropertySet `xml:"varLst"`
	ForEach      *CTForEach                     `xml:"forEach"`
	LayoutNode   *CTLayoutNode                  `xml:"layoutNode"`
	Choose       *CTChoose                      `xml:"choose"`
	ExtLst       []*CTOfficeArtExtensionList    `xml:"extLst"`
}

// CTForEach ...
type CTForEach struct {
	AGIteratorAttributes *AGIteratorAttributes
	NameAttr             string                      `xml:"name,attr,omitempty"`
	RefAttr              string                      `xml:"ref,attr,omitempty"`
	Alg                  []*CTAlgorithm              `xml:"alg"`
	Shape                []*CTShape                  `xml:"shape"`
	PresOf               []*CTPresentationOf         `xml:"presOf"`
	ConstrLst            []*CTConstraints            `xml:"constrLst"`
	RuleLst              []*CTRules                  `xml:"ruleLst"`
	ForEach              *CTForEach                  `xml:"forEach"`
	LayoutNode           *CTLayoutNode               `xml:"layoutNode"`
	Choose               *CTChoose                   `xml:"choose"`
	ExtLst               []*CTOfficeArtExtensionList `xml:"extLst"`
}

// CTWhen ...
type CTWhen struct {
	AGIteratorAttributes *AGIteratorAttributes
	NameAttr             string                      `xml:"name,attr,omitempty"`
	FuncAttr             string                      `xml:"func,attr"`
	ArgAttr              *STFunctionArgument         `xml:"arg,attr,omitempty"`
	OpAttr               string                      `xml:"op,attr"`
	ValAttr              *STFunctionValue            `xml:"val,attr"`
	Alg                  []*CTAlgorithm              `xml:"alg"`
	Shape                []*CTShape                  `xml:"shape"`
	PresOf               []*CTPresentationOf         `xml:"presOf"`
	ConstrLst            []*CTConstraints            `xml:"constrLst"`
	RuleLst              []*CTRules                  `xml:"ruleLst"`
	ForEach              *CTForEach                  `xml:"forEach"`
	LayoutNode           *CTLayoutNode               `xml:"layoutNode"`
	Choose               *CTChoose                   `xml:"choose"`
	ExtLst               []*CTOfficeArtExtensionList `xml:"extLst"`
}

// CTOtherwise ...
type CTOtherwise struct {
	NameAttr   string                      `xml:"name,attr,omitempty"`
	Alg        []*CTAlgorithm              `xml:"alg"`
	Shape      []*CTShape                  `xml:"shape"`
	PresOf     []*CTPresentationOf         `xml:"presOf"`
	ConstrLst  []*CTConstraints            `xml:"constrLst"`
	RuleLst    []*CTRules                  `xml:"ruleLst"`
	ForEach    *CTForEach                  `xml:"forEach"`
	LayoutNode *CTLayoutNode               `xml:"layoutNode"`
	Choose     *CTChoose                   `xml:"choose"`
	ExtLst     []*CTOfficeArtExtensionList `xml:"extLst"`
}

// CTChoose ...
type CTChoose struct {
	NameAttr string       `xml:"name,attr,omitempty"`
	If       []*CTWhen    `xml:"if"`
	Else     *CTOtherwise `xml:"else"`
}

// CTSampleData ...
type CTSampleData struct {
	UseDefAttr bool         `xml:"useDef,attr,omitempty"`
	DataModel  *CTDataModel `xml:"dataModel"`
}

// CTCategory ...
type CTCategory struct {
	TypeAttr string  `xml:"type,attr"`
	PriAttr  *Uint32 `xml:"pri,attr"`
}

// CTCategories ...
type CTCategories struct {
	Cat []*CTCategory `xml:"cat"`
}

// CTName ...
type CTName struct {
	LangAttr string `xml:"lang,attr,omitempty"`
	ValAttr  string `xml:"val,attr"`
}

// CTDescription ...
type CTDescription struct {
	LangAttr string `xml:"lang,attr,omitempty"`
	ValAttr  string `xml:"val,attr"`
}

// CTDiagramDefinition ...
type CTDiagramDefinition struct {
	UniqueIdAttr string                      `xml:"uniqueId,attr,omitempty"`
	MinVerAttr   string                      `xml:"minVer,attr,omitempty"`
	DefStyleAttr string                      `xml:"defStyle,attr,omitempty"`
	Title        []*CTName                   `xml:"title"`
	Desc         []*CTDescription            `xml:"desc"`
	CatLst       *CTCategories               `xml:"catLst"`
	SampData     *CTSampleData               `xml:"sampData"`
	StyleData    *CTSampleData               `xml:"styleData"`
	ClrData      *CTSampleData               `xml:"clrData"`
	LayoutNode   *CTLayoutNode               `xml:"layoutNode"`
	ExtLst       []*CTOfficeArtExtensionList `xml:"extLst"`
}

// LayoutDef ...
type LayoutDef *CTDiagramDefinition

// CTDiagramDefinitionHeader ...
type CTDiagramDefinitionHeader struct {
	UniqueIdAttr string                      `xml:"uniqueId,attr"`
	MinVerAttr   string                      `xml:"minVer,attr,omitempty"`
	DefStyleAttr string                      `xml:"defStyle,attr,omitempty"`
	ResIdAttr    int                         `xml:"resId,attr,omitempty"`
	Title        []*CTName                   `xml:"title"`
	Desc         []*CTDescription            `xml:"desc"`
	CatLst       *CTCategories               `xml:"catLst"`
	ExtLst       []*CTOfficeArtExtensionList `xml:"extLst"`
}

// LayoutDefHdr ...
type LayoutDefHdr *CTDiagramDefinitionHeader

// CTDiagramDefinitionHeaderLst ...
type CTDiagramDefinitionHeaderLst struct {
	LayoutDefHdr []*CTDiagramDefinitionHeader `xml:"layoutDefHdr"`
}

// LayoutDefHdrLst ...
type LayoutDefHdrLst *CTDiagramDefinitionHeaderLst

// CTRelIds ...
type CTRelIds struct {
	RDmAttr string `xml:"r:dm,attr"`
	RLoAttr string `xml:"r:lo,attr"`
	RQsAttr string `xml:"r:qs,attr"`
	RCsAttr string `xml:"r:cs,attr"`
}

// RelIds ...
type RelIds *CTRelIds

// STParameterVal ...
type STParameterVal struct {
	STCenterShapeMapping         *STCenterShapeMapping
	STTextDirection              *STTextDirection
	STGrowDirection              *STGrowDirection
	Int                          int
	STDiagramHorizontalAlignment *STDiagramHorizontalAlignment
	STStartingElement            *STStartingElement
	STPyramidAccentTextMargin    *STPyramidAccentTextMargin
	STBreakpoint                 *STBreakpoint
	Boolean                      bool
	STSecondaryLinearDirection   *STSecondaryLinearDirection
	STPyramidAccentPosition      *STPyramidAccentPosition
	STArrowheadStyle             *STArrowheadStyle
	Double                       float64
	STNodeHorizontalAlignment    *STNodeHorizontalAlignment
	STTextAnchorHorizontal       *STTextAnchorHorizontal
	STTextAnchorVertical         *STTextAnchorVertical
	STOffset                     *STOffset
	STConnectorPoint             *STConnectorPoint
	STVerticalAlignment          *STVerticalAlignment
	STChildAlignment             *STChildAlignment
	STFlowDirection              *STFlowDirection
	String                       string
	STSecondaryChildAlignment    *STSecondaryChildAlignment
	STBendPoint                  *STBendPoint
	STTextBlockDirection         *STTextBlockDirection
	STDiagramTextAlignment       *STDiagramTextAlignment
	STAutoTextRotation           *STAutoTextRotation
	STNodeVerticalAlignment      *STNodeVerticalAlignment
	STFallbackDimension          *STFallbackDimension
	STConnectorRouting           *STConnectorRouting
	STConnectorDimension         *STConnectorDimension
	STRotationPath               *STRotationPath
	STContinueDirection          *STContinueDirection
	STHierarchyAlignment         *STHierarchyAlignment
	STChildDirection             *STChildDirection
	STLinearDirection            *STLinearDirection
}

// STModelId ...
type STModelId struct {
	Int    int
	STGuid string
}

// STPrSetCustVal ...
type STPrSetCustVal struct {
	STPercentage string
}

// CTElemPropSet ...
type CTElemPropSet struct {
	PresAssocIDAttr          *STModelId                     `xml:"presAssocID,attr,omitempty"`
	PresNameAttr             string                         `xml:"presName,attr,omitempty"`
	PresStyleLblAttr         string                         `xml:"presStyleLbl,attr,omitempty"`
	PresStyleIdxAttr         int                            `xml:"presStyleIdx,attr,omitempty"`
	PresStyleCntAttr         int                            `xml:"presStyleCnt,attr,omitempty"`
	LoTypeIdAttr             string                         `xml:"loTypeId,attr,omitempty"`
	LoCatIdAttr              string                         `xml:"loCatId,attr,omitempty"`
	QsTypeIdAttr             string                         `xml:"qsTypeId,attr,omitempty"`
	QsCatIdAttr              string                         `xml:"qsCatId,attr,omitempty"`
	CsTypeIdAttr             string                         `xml:"csTypeId,attr,omitempty"`
	CsCatIdAttr              string                         `xml:"csCatId,attr,omitempty"`
	Coherent3DOffAttr        bool                           `xml:"coherent3DOff,attr,omitempty"`
	PhldrTAttr               string                         `xml:"phldrT,attr,omitempty"`
	PhldrAttr                bool                           `xml:"phldr,attr,omitempty"`
	CustAngAttr              int                            `xml:"custAng,attr,omitempty"`
	CustFlipVertAttr         bool                           `xml:"custFlipVert,attr,omitempty"`
	CustFlipHorAttr          bool                           `xml:"custFlipHor,attr,omitempty"`
	CustSzXAttr              int                            `xml:"custSzX,attr,omitempty"`
	CustSzYAttr              int                            `xml:"custSzY,attr,omitempty"`
	CustScaleXAttr           *STPrSetCustVal                `xml:"custScaleX,attr,omitempty"`
	CustScaleYAttr           *STPrSetCustVal                `xml:"custScaleY,attr,omitempty"`
	CustTAttr                bool                           `xml:"custT,attr,omitempty"`
	CustLinFactXAttr         *STPrSetCustVal                `xml:"custLinFactX,attr,omitempty"`
	CustLinFactYAttr         *STPrSetCustVal                `xml:"custLinFactY,attr,omitempty"`
	CustLinFactNeighborXAttr *STPrSetCustVal                `xml:"custLinFactNeighborX,attr,omitempty"`
	CustLinFactNeighborYAttr *STPrSetCustVal                `xml:"custLinFactNeighborY,attr,omitempty"`
	CustRadScaleRadAttr      *STPrSetCustVal                `xml:"custRadScaleRad,attr,omitempty"`
	CustRadScaleIncAttr      *STPrSetCustVal                `xml:"custRadScaleInc,attr,omitempty"`
	PresLayoutVars           []*CTLayoutVariablePropertySet `xml:"presLayoutVars"`
	Style                    []*CTShapeStyle                `xml:"style"`
}

// STDirection ...
type STDirection string

// STHierBranchStyle ...
type STHierBranchStyle string

// STAnimOneStr ...
type STAnimOneStr string

// STAnimLvlStr ...
type STAnimLvlStr string

// CTOrgChart ...
type CTOrgChart struct {
	ValAttr bool `xml:"val,attr,omitempty"`
}

// STNodeCount ...
type STNodeCount int

// CTChildMax ...
type CTChildMax struct {
	ValAttr int `xml:"val,attr,omitempty"`
}

// CTChildPref ...
type CTChildPref struct {
	ValAttr int `xml:"val,attr,omitempty"`
}

// CTBulletEnabled ...
type CTBulletEnabled struct {
	ValAttr bool `xml:"val,attr,omitempty"`
}

// CTDirection ...
type CTDirection struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTHierBranchStyle ...
type CTHierBranchStyle struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTAnimOne ...
type CTAnimOne struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTAnimLvl ...
type CTAnimLvl struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// STResizeHandlesStr ...
type STResizeHandlesStr string

// CTResizeHandles ...
type CTResizeHandles struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTLayoutVariablePropertySet ...
type CTLayoutVariablePropertySet struct {
	OrgChart      []*CTOrgChart        `xml:"orgChart"`
	ChMax         []*CTChildMax        `xml:"chMax"`
	ChPref        []*CTChildPref       `xml:"chPref"`
	BulletEnabled []*CTBulletEnabled   `xml:"bulletEnabled"`
	Dir           []*CTDirection       `xml:"dir"`
	HierBranch    []*CTHierBranchStyle `xml:"hierBranch"`
	AnimOne       []*CTAnimOne         `xml:"animOne"`
	AnimLvl       []*CTAnimLvl         `xml:"animLvl"`
	ResizeHandles []*CTResizeHandles   `xml:"resizeHandles"`
}

// CTSDName ...
type CTSDName struct {
	LangAttr string `xml:"lang,attr,omitempty"`
	ValAttr  string `xml:"val,attr"`
}

// CTSDDescription ...
type CTSDDescription struct {
	LangAttr string `xml:"lang,attr,omitempty"`
	ValAttr  string `xml:"val,attr"`
}

// CTSDCategory ...
type CTSDCategory struct {
	TypeAttr string  `xml:"type,attr"`
	PriAttr  *Uint32 `xml:"pri,attr"`
}

// CTSDCategories ...
type CTSDCategories struct {
	Cat []*CTSDCategory `xml:"cat"`
}

// CTTextProps ...
type CTTextProps struct {
	AEGText3D []*EGText3D
}

// CTStyleLabel ...
type CTStyleLabel struct {
	NameAttr string                      `xml:"name,attr"`
	Scene3d  []*CTScene3D                `xml:"scene3d"`
	Sp3d     []*CTShape3D                `xml:"sp3d"`
	TxPr     []*CTTextProps              `xml:"txPr"`
	Style    []*CTShapeStyle             `xml:"style"`
	ExtLst   []*CTOfficeArtExtensionList `xml:"extLst"`
}

// CTStyleDefinition ...
type CTStyleDefinition struct {
	UniqueIdAttr string                      `xml:"uniqueId,attr,omitempty"`
	MinVerAttr   string                      `xml:"minVer,attr,omitempty"`
	Title        []*CTSDName                 `xml:"title"`
	Desc         []*CTSDDescription          `xml:"desc"`
	CatLst       *CTSDCategories             `xml:"catLst"`
	Scene3d      []*CTScene3D                `xml:"scene3d"`
	StyleLbl     []*CTStyleLabel             `xml:"styleLbl"`
	ExtLst       []*CTOfficeArtExtensionList `xml:"extLst"`
}

// StyleDef ...
type StyleDef *CTStyleDefinition

// CTStyleDefinitionHeader ...
type CTStyleDefinitionHeader struct {
	UniqueIdAttr string                      `xml:"uniqueId,attr"`
	MinVerAttr   string                      `xml:"minVer,attr,omitempty"`
	ResIdAttr    int                         `xml:"resId,attr,omitempty"`
	Title        []*CTSDName                 `xml:"title"`
	Desc         []*CTSDDescription          `xml:"desc"`
	CatLst       *CTSDCategories             `xml:"catLst"`
	ExtLst       []*CTOfficeArtExtensionList `xml:"extLst"`
}

// StyleDefHdr ...
type StyleDefHdr *CTStyleDefinitionHeader

// CTStyleDefinitionHeaderLst ...
type CTStyleDefinitionHeaderLst struct {
	StyleDefHdr []*CTStyleDefinitionHeader `xml:"styleDefHdr"`
}

// StyleDefHdrLst ...
type StyleDefHdrLst *CTStyleDefinitionHeaderLst

// STAlgorithmType ...
type STAlgorithmType string

// STAxisType ...
type STAxisType string

// STAxisTypes ...
type STAxisTypes []string

// STBoolOperator ...
type STBoolOperator string

// STChildOrderType ...
type STChildOrderType string

// STConstraintType ...
type STConstraintType string

// STConstraintRelationship ...
type STConstraintRelationship string

// STElementType ...
type STElementType string

// STElementTypes ...
type STElementTypes []string

// STParameterId ...
type STParameterId string

// STInts ...
type STInts []int

// STUnsignedInts ...
type STUnsignedInts []**Uint32

// STBooleans ...
type STBooleans []bool

// STFunctionType ...
type STFunctionType string

// STFunctionOperator ...
type STFunctionOperator string

// STDiagramHorizontalAlignment ...
type STDiagramHorizontalAlignment string

// STVerticalAlignment ...
type STVerticalAlignment string

// STChildDirection ...
type STChildDirection string

// STChildAlignment ...
type STChildAlignment string

// STSecondaryChildAlignment ...
type STSecondaryChildAlignment string

// STLinearDirection ...
type STLinearDirection string

// STSecondaryLinearDirection ...
type STSecondaryLinearDirection string

// STStartingElement ...
type STStartingElement string

// STRotationPath ...
type STRotationPath string

// STCenterShapeMapping ...
type STCenterShapeMapping string

// STBendPoint ...
type STBendPoint string

// STConnectorRouting ...
type STConnectorRouting string

// STArrowheadStyle ...
type STArrowheadStyle string

// STConnectorDimension ...
type STConnectorDimension string

// STConnectorPoint ...
type STConnectorPoint string

// STNodeHorizontalAlignment ...
type STNodeHorizontalAlignment string

// STNodeVerticalAlignment ...
type STNodeVerticalAlignment string

// STFallbackDimension ...
type STFallbackDimension string

// STTextDirection ...
type STTextDirection string

// STPyramidAccentPosition ...
type STPyramidAccentPosition string

// STPyramidAccentTextMargin ...
type STPyramidAccentTextMargin string

// STTextBlockDirection ...
type STTextBlockDirection string

// STTextAnchorHorizontal ...
type STTextAnchorHorizontal string

// STTextAnchorVertical ...
type STTextAnchorVertical string

// STDiagramTextAlignment ...
type STDiagramTextAlignment string

// STAutoTextRotation ...
type STAutoTextRotation string

// STGrowDirection ...
type STGrowDirection string

// STFlowDirection ...
type STFlowDirection string

// STContinueDirection ...
type STContinueDirection string

// STBreakpoint ...
type STBreakpoint string

// STOffset ...
type STOffset string

// STHierarchyAlignment ...
type STHierarchyAlignment string

// STFunctionValue ...
type STFunctionValue struct {
	STDirection        string
	STHierBranchStyle  string
	STAnimOneStr       string
	STAnimLvlStr       string
	STResizeHandlesStr string
	Int                int
	Boolean            bool
}

// STVariableType ...
type STVariableType string

// STFunctionArgument ...
type STFunctionArgument struct {
	STVariableType string
}

// STOutputShapeType ...
type STOutputShapeType string
