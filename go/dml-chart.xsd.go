// Copyright 2020 The xgen Authors. All rights reserved.
//
// DO NOT EDIT: generated by xgen XSD generator
//
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package schema

// CTBoolean ...
type CTBoolean struct {
	ValAttr bool `xml:"val,attr,omitempty"`
}

// CTDouble ...
type CTDouble struct {
	ValAttr float64 `xml:"val,attr"`
}

// CTUnsignedInt ...
type CTUnsignedInt struct {
	ValAttr *Uint32 `xml:"val,attr"`
}

// CTRelId ...
type CTRelId struct {
	RIdAttr string `xml:"r:id,attr"`
}

// CTExtension ...
type CTExtension struct {
	UriAttr string `xml:"uri,attr,omitempty"`
}

// CTExtensionList ...
type CTExtensionList struct {
	Ext []*CTExtension `xml:"ext"`
}

// CTNumVal ...
type CTNumVal struct {
	IdxAttr        *Uint32  `xml:"idx,attr"`
	FormatCodeAttr string   `xml:"formatCode,attr,omitempty"`
	V              []string `xml:"v"`
}

// CTNumData ...
type CTNumData struct {
	FormatCode []string           `xml:"formatCode"`
	PtCount    []*CTUnsignedInt   `xml:"ptCount"`
	Pt         []*CTNumVal        `xml:"pt"`
	ExtLst     []*CTExtensionList `xml:"extLst"`
}

// CTNumRef ...
type CTNumRef struct {
	F        []string           `xml:"f"`
	NumCache []*CTNumData       `xml:"numCache"`
	ExtLst   []*CTExtensionList `xml:"extLst"`
}

// CTNumDataSource ...
type CTNumDataSource struct {
	NumRef []*CTNumRef  `xml:"numRef"`
	NumLit []*CTNumData `xml:"numLit"`
}

// CTStrVal ...
type CTStrVal struct {
	IdxAttr *Uint32  `xml:"idx,attr"`
	V       []string `xml:"v"`
}

// CTStrData ...
type CTStrData struct {
	PtCount []*CTUnsignedInt   `xml:"ptCount"`
	Pt      []*CTStrVal        `xml:"pt"`
	ExtLst  []*CTExtensionList `xml:"extLst"`
}

// CTStrRef ...
type CTStrRef struct {
	F        []string           `xml:"f"`
	StrCache []*CTStrData       `xml:"strCache"`
	ExtLst   []*CTExtensionList `xml:"extLst"`
}

// CTTx ...
type CTTx struct {
	StrRef []*CTStrRef   `xml:"strRef"`
	Rich   []*CTTextBody `xml:"rich"`
}

// CTTextLanguageID ...
type CTTextLanguageID struct {
	ValAttr string `xml:"val,attr"`
}

// CTLvl ...
type CTLvl struct {
	Pt []*CTStrVal `xml:"pt"`
}

// CTMultiLvlStrData ...
type CTMultiLvlStrData struct {
	PtCount []*CTUnsignedInt   `xml:"ptCount"`
	Lvl     []*CTLvl           `xml:"lvl"`
	ExtLst  []*CTExtensionList `xml:"extLst"`
}

// CTMultiLvlStrRef ...
type CTMultiLvlStrRef struct {
	F                []string             `xml:"f"`
	MultiLvlStrCache []*CTMultiLvlStrData `xml:"multiLvlStrCache"`
	ExtLst           []*CTExtensionList   `xml:"extLst"`
}

// CTAxDataSource ...
type CTAxDataSource struct {
	MultiLvlStrRef []*CTMultiLvlStrRef `xml:"multiLvlStrRef"`
	NumRef         []*CTNumRef         `xml:"numRef"`
	NumLit         []*CTNumData        `xml:"numLit"`
	StrRef         []*CTStrRef         `xml:"strRef"`
	StrLit         []*CTStrData        `xml:"strLit"`
}

// CTSerTx ...
type CTSerTx struct {
	StrRef []*CTStrRef `xml:"strRef"`
	V      []string    `xml:"v"`
}

// STLayoutTarget ...
type STLayoutTarget string

// CTLayoutTarget ...
type CTLayoutTarget struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// STLayoutMode ...
type STLayoutMode string

// CTLayoutMode ...
type CTLayoutMode struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTManualLayout ...
type CTManualLayout struct {
	LayoutTarget []*CTLayoutTarget  `xml:"layoutTarget"`
	XMode        []*CTLayoutMode    `xml:"xMode"`
	YMode        []*CTLayoutMode    `xml:"yMode"`
	WMode        []*CTLayoutMode    `xml:"wMode"`
	HMode        []*CTLayoutMode    `xml:"hMode"`
	X            []*CTDouble        `xml:"x"`
	Y            []*CTDouble        `xml:"y"`
	W            []*CTDouble        `xml:"w"`
	H            []*CTDouble        `xml:"h"`
	ExtLst       []*CTExtensionList `xml:"extLst"`
}

// CTLayout ...
type CTLayout struct {
	ManualLayout []*CTManualLayout  `xml:"manualLayout"`
	ExtLst       []*CTExtensionList `xml:"extLst"`
}

// CTTitle ...
type CTTitle struct {
	Tx      []*CTTx              `xml:"tx"`
	Layout  []*CTLayout          `xml:"layout"`
	Overlay []*CTBoolean         `xml:"overlay"`
	SpPr    []*CTShapeProperties `xml:"spPr"`
	TxPr    []*CTTextBody        `xml:"txPr"`
	ExtLst  []*CTExtensionList   `xml:"extLst"`
}

// STRotX ...
type STRotX byte

// CTRotX ...
type CTRotX struct {
	ValAttr byte `xml:"val,attr,omitempty"`
}

// STHPercent ...
type STHPercent struct {
	STHPercentWithSymbol *STHPercentWithSymbol
}

// STHPercentWithSymbol ...
type STHPercentWithSymbol string

// CTHPercent ...
type CTHPercent struct {
	ValAttr *STHPercent `xml:"val,attr,omitempty"`
}

// STRotY ...
type STRotY *Uint16

// CTRotY ...
type CTRotY struct {
	ValAttr *Uint16 `xml:"val,attr,omitempty"`
}

// STDepthPercent ...
type STDepthPercent struct {
	STDepthPercentWithSymbol *STDepthPercentWithSymbol
}

// STDepthPercentWithSymbol ...
type STDepthPercentWithSymbol string

// CTDepthPercent ...
type CTDepthPercent struct {
	ValAttr *STDepthPercent `xml:"val,attr,omitempty"`
}

// STPerspective ...
type STPerspective byte

// CTPerspective ...
type CTPerspective struct {
	ValAttr byte `xml:"val,attr,omitempty"`
}

// CTView3D ...
type CTView3D struct {
	RotX         []*CTRotX          `xml:"rotX"`
	HPercent     []*CTHPercent      `xml:"hPercent"`
	RotY         []*CTRotY          `xml:"rotY"`
	DepthPercent []*CTDepthPercent  `xml:"depthPercent"`
	RAngAx       []*CTBoolean       `xml:"rAngAx"`
	Perspective  []*CTPerspective   `xml:"perspective"`
	ExtLst       []*CTExtensionList `xml:"extLst"`
}

// CTSurface ...
type CTSurface struct {
	Thickness      []*CTThickness       `xml:"thickness"`
	SpPr           []*CTShapeProperties `xml:"spPr"`
	PictureOptions []*CTPictureOptions  `xml:"pictureOptions"`
	ExtLst         []*CTExtensionList   `xml:"extLst"`
}

// STThickness ...
type STThickness struct {
	STThicknessPercent *STThicknessPercent
}

// STThicknessPercent ...
type STThicknessPercent string

// CTThickness ...
type CTThickness struct {
	ValAttr *STThickness `xml:"val,attr"`
}

// CTDTable ...
type CTDTable struct {
	ShowHorzBorder []*CTBoolean         `xml:"showHorzBorder"`
	ShowVertBorder []*CTBoolean         `xml:"showVertBorder"`
	ShowOutline    []*CTBoolean         `xml:"showOutline"`
	ShowKeys       []*CTBoolean         `xml:"showKeys"`
	SpPr           []*CTShapeProperties `xml:"spPr"`
	TxPr           []*CTTextBody        `xml:"txPr"`
	ExtLst         []*CTExtensionList   `xml:"extLst"`
}

// STGapAmount ...
type STGapAmount struct {
	STGapAmountPercent *STGapAmountPercent
}

// STGapAmountPercent ...
type STGapAmountPercent string

// CTGapAmount ...
type CTGapAmount struct {
	ValAttr *STGapAmount `xml:"val,attr,omitempty"`
}

// STOverlap ...
type STOverlap struct {
	STOverlapPercent *STOverlapPercent
}

// STOverlapPercent ...
type STOverlapPercent string

// CTOverlap ...
type CTOverlap struct {
	ValAttr *STOverlap `xml:"val,attr,omitempty"`
}

// STBubbleScale ...
type STBubbleScale struct {
	STBubbleScalePercent *STBubbleScalePercent
}

// STBubbleScalePercent ...
type STBubbleScalePercent string

// CTBubbleScale ...
type CTBubbleScale struct {
	ValAttr *STBubbleScale `xml:"val,attr,omitempty"`
}

// STSizeRepresents ...
type STSizeRepresents string

// CTSizeRepresents ...
type CTSizeRepresents struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// STFirstSliceAng ...
type STFirstSliceAng *Uint16

// CTFirstSliceAng ...
type CTFirstSliceAng struct {
	ValAttr *Uint16 `xml:"val,attr,omitempty"`
}

// STHoleSize ...
type STHoleSize struct {
	STHoleSizePercent *STHoleSizePercent
}

// STHoleSizePercent ...
type STHoleSizePercent string

// CTHoleSize ...
type CTHoleSize struct {
	ValAttr *STHoleSize `xml:"val,attr,omitempty"`
}

// STSplitType ...
type STSplitType string

// CTSplitType ...
type CTSplitType struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTCustSplit ...
type CTCustSplit struct {
	SecondPiePt []*CTUnsignedInt `xml:"secondPiePt"`
}

// STSecondPieSize ...
type STSecondPieSize struct {
	STSecondPieSizePercent *STSecondPieSizePercent
}

// STSecondPieSizePercent ...
type STSecondPieSizePercent string

// CTSecondPieSize ...
type CTSecondPieSize struct {
	ValAttr *STSecondPieSize `xml:"val,attr,omitempty"`
}

// CTNumFmt ...
type CTNumFmt struct {
	FormatCodeAttr   string `xml:"formatCode,attr"`
	SourceLinkedAttr bool   `xml:"sourceLinked,attr,omitempty"`
}

// STLblAlgn ...
type STLblAlgn string

// CTLblAlgn ...
type CTLblAlgn struct {
	ValAttr string `xml:"val,attr"`
}

// STDLblPos ...
type STDLblPos string

// CTDLblPos ...
type CTDLblPos struct {
	ValAttr string `xml:"val,attr"`
}

// EGDLblShared ...
type EGDLblShared struct {
	NumFmt         []*CTNumFmt
	SpPr           []*CTShapeProperties
	TxPr           []*CTTextBody
	DLblPos        []*CTDLblPos
	ShowLegendKey  []*CTBoolean
	ShowVal        []*CTBoolean
	ShowCatName    []*CTBoolean
	ShowSerName    []*CTBoolean
	ShowPercent    []*CTBoolean
	ShowBubbleSize []*CTBoolean
	Separator      []string
}

// GroupDLbl ...
type GroupDLbl struct {
	Layout       []*CTLayout
	Tx           []*CTTx
	EGDLblShared []*EGDLblShared
}

// CTDLbl ...
type CTDLbl struct {
	GroupDLbl []*GroupDLbl
	Idx       []*CTUnsignedInt   `xml:"idx"`
	Delete    []*CTBoolean       `xml:"delete"`
	ExtLst    []*CTExtensionList `xml:"extLst"`
}

// GroupDLbls ...
type GroupDLbls struct {
	ShowLeaderLines []*CTBoolean
	LeaderLines     []*CTChartLines
	EGDLblShared    []*EGDLblShared
}

// CTDLbls ...
type CTDLbls struct {
	GroupDLbls []*GroupDLbls
	DLbl       []*CTDLbl          `xml:"dLbl"`
	Delete     []*CTBoolean       `xml:"delete"`
	ExtLst     []*CTExtensionList `xml:"extLst"`
}

// STMarkerStyle ...
type STMarkerStyle string

// CTMarkerStyle ...
type CTMarkerStyle struct {
	ValAttr string `xml:"val,attr"`
}

// STMarkerSize ...
type STMarkerSize byte

// CTMarkerSize ...
type CTMarkerSize struct {
	ValAttr byte `xml:"val,attr,omitempty"`
}

// CTMarker ...
type CTMarker struct {
	Symbol []*CTMarkerStyle     `xml:"symbol"`
	Size   []*CTMarkerSize      `xml:"size"`
	SpPr   []*CTShapeProperties `xml:"spPr"`
	ExtLst []*CTExtensionList   `xml:"extLst"`
}

// CTDPt ...
type CTDPt struct {
	Idx              []*CTUnsignedInt     `xml:"idx"`
	InvertIfNegative []*CTBoolean         `xml:"invertIfNegative"`
	Marker           []*CTMarker          `xml:"marker"`
	Bubble3D         []*CTBoolean         `xml:"bubble3D"`
	Explosion        []*CTUnsignedInt     `xml:"explosion"`
	SpPr             []*CTShapeProperties `xml:"spPr"`
	PictureOptions   []*CTPictureOptions  `xml:"pictureOptions"`
	ExtLst           []*CTExtensionList   `xml:"extLst"`
}

// STTrendlineType ...
type STTrendlineType string

// CTTrendlineType ...
type CTTrendlineType struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// STOrder ...
type STOrder byte

// CTOrder ...
type CTOrder struct {
	ValAttr byte `xml:"val,attr,omitempty"`
}

// STPeriod ...
type STPeriod *Uint32

// CTPeriod ...
type CTPeriod struct {
	ValAttr *Uint32 `xml:"val,attr,omitempty"`
}

// CTTrendlineLbl ...
type CTTrendlineLbl struct {
	Layout []*CTLayout          `xml:"layout"`
	Tx     []*CTTx              `xml:"tx"`
	NumFmt []*CTNumFmt          `xml:"numFmt"`
	SpPr   []*CTShapeProperties `xml:"spPr"`
	TxPr   []*CTTextBody        `xml:"txPr"`
	ExtLst []*CTExtensionList   `xml:"extLst"`
}

// CTTrendline ...
type CTTrendline struct {
	Name          []string             `xml:"name"`
	SpPr          []*CTShapeProperties `xml:"spPr"`
	TrendlineType []*CTTrendlineType   `xml:"trendlineType"`
	Order         []*CTOrder           `xml:"order"`
	Period        []*CTPeriod          `xml:"period"`
	Forward       []*CTDouble          `xml:"forward"`
	Backward      []*CTDouble          `xml:"backward"`
	Intercept     []*CTDouble          `xml:"intercept"`
	DispRSqr      []*CTBoolean         `xml:"dispRSqr"`
	DispEq        []*CTBoolean         `xml:"dispEq"`
	TrendlineLbl  []*CTTrendlineLbl    `xml:"trendlineLbl"`
	ExtLst        []*CTExtensionList   `xml:"extLst"`
}

// STErrDir ...
type STErrDir string

// CTErrDir ...
type CTErrDir struct {
	ValAttr string `xml:"val,attr"`
}

// STErrBarType ...
type STErrBarType string

// CTErrBarType ...
type CTErrBarType struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// STErrValType ...
type STErrValType string

// CTErrValType ...
type CTErrValType struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTErrBars ...
type CTErrBars struct {
	ErrDir     []*CTErrDir          `xml:"errDir"`
	ErrBarType []*CTErrBarType      `xml:"errBarType"`
	ErrValType []*CTErrValType      `xml:"errValType"`
	NoEndCap   []*CTBoolean         `xml:"noEndCap"`
	Plus       []*CTNumDataSource   `xml:"plus"`
	Minus      []*CTNumDataSource   `xml:"minus"`
	Val        []*CTDouble          `xml:"val"`
	SpPr       []*CTShapeProperties `xml:"spPr"`
	ExtLst     []*CTExtensionList   `xml:"extLst"`
}

// CTUpDownBar ...
type CTUpDownBar struct {
	SpPr []*CTShapeProperties `xml:"spPr"`
}

// CTUpDownBars ...
type CTUpDownBars struct {
	GapWidth []*CTGapAmount     `xml:"gapWidth"`
	UpBars   []*CTUpDownBar     `xml:"upBars"`
	DownBars []*CTUpDownBar     `xml:"downBars"`
	ExtLst   []*CTExtensionList `xml:"extLst"`
}

// EGSerShared ...
type EGSerShared struct {
	Idx   []*CTUnsignedInt
	Order []*CTUnsignedInt
	Tx    []*CTSerTx
	SpPr  []*CTShapeProperties
}

// CTLineSer ...
type CTLineSer struct {
	EGSerShared []*EGSerShared
	Marker      []*CTMarker        `xml:"marker"`
	DPt         []*CTDPt           `xml:"dPt"`
	DLbls       []*CTDLbls         `xml:"dLbls"`
	Trendline   []*CTTrendline     `xml:"trendline"`
	ErrBars     []*CTErrBars       `xml:"errBars"`
	Cat         []*CTAxDataSource  `xml:"cat"`
	Val         []*CTNumDataSource `xml:"val"`
	Smooth      []*CTBoolean       `xml:"smooth"`
	ExtLst      []*CTExtensionList `xml:"extLst"`
}

// CTScatterSer ...
type CTScatterSer struct {
	EGSerShared []*EGSerShared
	Marker      []*CTMarker        `xml:"marker"`
	DPt         []*CTDPt           `xml:"dPt"`
	DLbls       []*CTDLbls         `xml:"dLbls"`
	Trendline   []*CTTrendline     `xml:"trendline"`
	ErrBars     []*CTErrBars       `xml:"errBars"`
	XVal        []*CTAxDataSource  `xml:"xVal"`
	YVal        []*CTNumDataSource `xml:"yVal"`
	Smooth      []*CTBoolean       `xml:"smooth"`
	ExtLst      []*CTExtensionList `xml:"extLst"`
}

// CTRadarSer ...
type CTRadarSer struct {
	EGSerShared []*EGSerShared
	Marker      []*CTMarker        `xml:"marker"`
	DPt         []*CTDPt           `xml:"dPt"`
	DLbls       []*CTDLbls         `xml:"dLbls"`
	Cat         []*CTAxDataSource  `xml:"cat"`
	Val         []*CTNumDataSource `xml:"val"`
	ExtLst      []*CTExtensionList `xml:"extLst"`
}

// CTBarSer ...
type CTBarSer struct {
	EGSerShared      []*EGSerShared
	InvertIfNegative []*CTBoolean        `xml:"invertIfNegative"`
	PictureOptions   []*CTPictureOptions `xml:"pictureOptions"`
	DPt              []*CTDPt            `xml:"dPt"`
	DLbls            []*CTDLbls          `xml:"dLbls"`
	Trendline        []*CTTrendline      `xml:"trendline"`
	ErrBars          []*CTErrBars        `xml:"errBars"`
	Cat              []*CTAxDataSource   `xml:"cat"`
	Val              []*CTNumDataSource  `xml:"val"`
	Shape            []*CTShape          `xml:"shape"`
	ExtLst           []*CTExtensionList  `xml:"extLst"`
}

// CTAreaSer ...
type CTAreaSer struct {
	EGSerShared    []*EGSerShared
	PictureOptions []*CTPictureOptions `xml:"pictureOptions"`
	DPt            []*CTDPt            `xml:"dPt"`
	DLbls          []*CTDLbls          `xml:"dLbls"`
	Trendline      []*CTTrendline      `xml:"trendline"`
	ErrBars        []*CTErrBars        `xml:"errBars"`
	Cat            []*CTAxDataSource   `xml:"cat"`
	Val            []*CTNumDataSource  `xml:"val"`
	ExtLst         []*CTExtensionList  `xml:"extLst"`
}

// CTPieSer ...
type CTPieSer struct {
	EGSerShared []*EGSerShared
	Explosion   []*CTUnsignedInt   `xml:"explosion"`
	DPt         []*CTDPt           `xml:"dPt"`
	DLbls       []*CTDLbls         `xml:"dLbls"`
	Cat         []*CTAxDataSource  `xml:"cat"`
	Val         []*CTNumDataSource `xml:"val"`
	ExtLst      []*CTExtensionList `xml:"extLst"`
}

// CTBubbleSer ...
type CTBubbleSer struct {
	EGSerShared      []*EGSerShared
	InvertIfNegative []*CTBoolean       `xml:"invertIfNegative"`
	DPt              []*CTDPt           `xml:"dPt"`
	DLbls            []*CTDLbls         `xml:"dLbls"`
	Trendline        []*CTTrendline     `xml:"trendline"`
	ErrBars          []*CTErrBars       `xml:"errBars"`
	XVal             []*CTAxDataSource  `xml:"xVal"`
	YVal             []*CTNumDataSource `xml:"yVal"`
	BubbleSize       []*CTNumDataSource `xml:"bubbleSize"`
	Bubble3D         []*CTBoolean       `xml:"bubble3D"`
	ExtLst           []*CTExtensionList `xml:"extLst"`
}

// CTSurfaceSer ...
type CTSurfaceSer struct {
	EGSerShared []*EGSerShared
	Cat         []*CTAxDataSource  `xml:"cat"`
	Val         []*CTNumDataSource `xml:"val"`
	ExtLst      []*CTExtensionList `xml:"extLst"`
}

// STGrouping ...
type STGrouping string

// CTGrouping ...
type CTGrouping struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTChartLines ...
type CTChartLines struct {
	SpPr []*CTShapeProperties `xml:"spPr"`
}

// EGLineChartShared ...
type EGLineChartShared struct {
	Grouping   []*CTGrouping
	VaryColors []*CTBoolean
	Ser        []*CTLineSer
	DLbls      []*CTDLbls
	DropLines  []*CTChartLines
}

// CTLineChart ...
type CTLineChart struct {
	EGLineChartShared []*EGLineChartShared
	HiLowLines        []*CTChartLines    `xml:"hiLowLines"`
	UpDownBars        []*CTUpDownBars    `xml:"upDownBars"`
	Marker            []*CTBoolean       `xml:"marker"`
	Smooth            []*CTBoolean       `xml:"smooth"`
	AxId              []*CTUnsignedInt   `xml:"axId"`
	ExtLst            []*CTExtensionList `xml:"extLst"`
}

// CTLine3DChart ...
type CTLine3DChart struct {
	EGLineChartShared []*EGLineChartShared
	GapDepth          []*CTGapAmount     `xml:"gapDepth"`
	AxId              []*CTUnsignedInt   `xml:"axId"`
	ExtLst            []*CTExtensionList `xml:"extLst"`
}

// CTStockChart ...
type CTStockChart struct {
	Ser        []*CTLineSer       `xml:"ser"`
	DLbls      []*CTDLbls         `xml:"dLbls"`
	DropLines  []*CTChartLines    `xml:"dropLines"`
	HiLowLines []*CTChartLines    `xml:"hiLowLines"`
	UpDownBars []*CTUpDownBars    `xml:"upDownBars"`
	AxId       []*CTUnsignedInt   `xml:"axId"`
	ExtLst     []*CTExtensionList `xml:"extLst"`
}

// STScatterStyle ...
type STScatterStyle string

// CTScatterStyle ...
type CTScatterStyle struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTScatterChart ...
type CTScatterChart struct {
	ScatterStyle []*CTScatterStyle  `xml:"scatterStyle"`
	VaryColors   []*CTBoolean       `xml:"varyColors"`
	Ser          []*CTScatterSer    `xml:"ser"`
	DLbls        []*CTDLbls         `xml:"dLbls"`
	AxId         []*CTUnsignedInt   `xml:"axId"`
	ExtLst       []*CTExtensionList `xml:"extLst"`
}

// STRadarStyle ...
type STRadarStyle string

// CTRadarStyle ...
type CTRadarStyle struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTRadarChart ...
type CTRadarChart struct {
	RadarStyle []*CTRadarStyle    `xml:"radarStyle"`
	VaryColors []*CTBoolean       `xml:"varyColors"`
	Ser        []*CTRadarSer      `xml:"ser"`
	DLbls      []*CTDLbls         `xml:"dLbls"`
	AxId       []*CTUnsignedInt   `xml:"axId"`
	ExtLst     []*CTExtensionList `xml:"extLst"`
}

// STBarGrouping ...
type STBarGrouping string

// CTBarGrouping ...
type CTBarGrouping struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// STBarDir ...
type STBarDir string

// CTBarDir ...
type CTBarDir struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// STShape ...
type STShape string

// CTShape ...
type CTShape struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// EGBarChartShared ...
type EGBarChartShared struct {
	BarDir     []*CTBarDir
	Grouping   []*CTBarGrouping
	VaryColors []*CTBoolean
	Ser        []*CTBarSer
	DLbls      []*CTDLbls
}

// CTBarChart ...
type CTBarChart struct {
	EGBarChartShared []*EGBarChartShared
	GapWidth         []*CTGapAmount     `xml:"gapWidth"`
	Overlap          []*CTOverlap       `xml:"overlap"`
	SerLines         []*CTChartLines    `xml:"serLines"`
	AxId             []*CTUnsignedInt   `xml:"axId"`
	ExtLst           []*CTExtensionList `xml:"extLst"`
}

// CTBar3DChart ...
type CTBar3DChart struct {
	EGBarChartShared []*EGBarChartShared
	GapWidth         []*CTGapAmount     `xml:"gapWidth"`
	GapDepth         []*CTGapAmount     `xml:"gapDepth"`
	Shape            []*CTShape         `xml:"shape"`
	AxId             []*CTUnsignedInt   `xml:"axId"`
	ExtLst           []*CTExtensionList `xml:"extLst"`
}

// EGAreaChartShared ...
type EGAreaChartShared struct {
	Grouping   []*CTGrouping
	VaryColors []*CTBoolean
	Ser        []*CTAreaSer
	DLbls      []*CTDLbls
	DropLines  []*CTChartLines
}

// CTAreaChart ...
type CTAreaChart struct {
	EGAreaChartShared []*EGAreaChartShared
	AxId              []*CTUnsignedInt   `xml:"axId"`
	ExtLst            []*CTExtensionList `xml:"extLst"`
}

// CTArea3DChart ...
type CTArea3DChart struct {
	EGAreaChartShared []*EGAreaChartShared
	GapDepth          []*CTGapAmount     `xml:"gapDepth"`
	AxId              []*CTUnsignedInt   `xml:"axId"`
	ExtLst            []*CTExtensionList `xml:"extLst"`
}

// EGPieChartShared ...
type EGPieChartShared struct {
	VaryColors []*CTBoolean
	Ser        []*CTPieSer
	DLbls      []*CTDLbls
}

// CTPieChart ...
type CTPieChart struct {
	EGPieChartShared []*EGPieChartShared
	FirstSliceAng    []*CTFirstSliceAng `xml:"firstSliceAng"`
	ExtLst           []*CTExtensionList `xml:"extLst"`
}

// CTPie3DChart ...
type CTPie3DChart struct {
	EGPieChartShared []*EGPieChartShared
	ExtLst           []*CTExtensionList `xml:"extLst"`
}

// CTDoughnutChart ...
type CTDoughnutChart struct {
	EGPieChartShared []*EGPieChartShared
	FirstSliceAng    []*CTFirstSliceAng `xml:"firstSliceAng"`
	HoleSize         []*CTHoleSize      `xml:"holeSize"`
	ExtLst           []*CTExtensionList `xml:"extLst"`
}

// STOfPieType ...
type STOfPieType string

// CTOfPieType ...
type CTOfPieType struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTOfPieChart ...
type CTOfPieChart struct {
	EGPieChartShared []*EGPieChartShared
	OfPieType        []*CTOfPieType     `xml:"ofPieType"`
	GapWidth         []*CTGapAmount     `xml:"gapWidth"`
	SplitType        []*CTSplitType     `xml:"splitType"`
	SplitPos         []*CTDouble        `xml:"splitPos"`
	CustSplit        []*CTCustSplit     `xml:"custSplit"`
	SecondPieSize    []*CTSecondPieSize `xml:"secondPieSize"`
	SerLines         []*CTChartLines    `xml:"serLines"`
	ExtLst           []*CTExtensionList `xml:"extLst"`
}

// CTBubbleChart ...
type CTBubbleChart struct {
	VaryColors     []*CTBoolean        `xml:"varyColors"`
	Ser            []*CTBubbleSer      `xml:"ser"`
	DLbls          []*CTDLbls          `xml:"dLbls"`
	Bubble3D       []*CTBoolean        `xml:"bubble3D"`
	BubbleScale    []*CTBubbleScale    `xml:"bubbleScale"`
	ShowNegBubbles []*CTBoolean        `xml:"showNegBubbles"`
	SizeRepresents []*CTSizeRepresents `xml:"sizeRepresents"`
	AxId           []*CTUnsignedInt    `xml:"axId"`
	ExtLst         []*CTExtensionList  `xml:"extLst"`
}

// CTBandFmt ...
type CTBandFmt struct {
	Idx  []*CTUnsignedInt     `xml:"idx"`
	SpPr []*CTShapeProperties `xml:"spPr"`
}

// CTBandFmts ...
type CTBandFmts struct {
	BandFmt []*CTBandFmt `xml:"bandFmt"`
}

// EGSurfaceChartShared ...
type EGSurfaceChartShared struct {
	Wireframe []*CTBoolean
	Ser       []*CTSurfaceSer
	BandFmts  []*CTBandFmts
}

// CTSurfaceChart ...
type CTSurfaceChart struct {
	EGSurfaceChartShared []*EGSurfaceChartShared
	AxId                 []*CTUnsignedInt   `xml:"axId"`
	ExtLst               []*CTExtensionList `xml:"extLst"`
}

// CTSurface3DChart ...
type CTSurface3DChart struct {
	EGSurfaceChartShared []*EGSurfaceChartShared
	AxId                 []*CTUnsignedInt   `xml:"axId"`
	ExtLst               []*CTExtensionList `xml:"extLst"`
}

// STAxPos ...
type STAxPos string

// CTAxPos ...
type CTAxPos struct {
	ValAttr string `xml:"val,attr"`
}

// STCrosses ...
type STCrosses string

// CTCrosses ...
type CTCrosses struct {
	ValAttr string `xml:"val,attr"`
}

// STCrossBetween ...
type STCrossBetween string

// CTCrossBetween ...
type CTCrossBetween struct {
	ValAttr string `xml:"val,attr"`
}

// STTickMark ...
type STTickMark string

// CTTickMark ...
type CTTickMark struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// STTickLblPos ...
type STTickLblPos string

// CTTickLblPos ...
type CTTickLblPos struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// STSkip ...
type STSkip *Uint32

// CTSkip ...
type CTSkip struct {
	ValAttr *Uint32 `xml:"val,attr"`
}

// STTimeUnit ...
type STTimeUnit string

// CTTimeUnit ...
type CTTimeUnit struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// STAxisUnit ...
type STAxisUnit float64

// CTAxisUnit ...
type CTAxisUnit struct {
	ValAttr float64 `xml:"val,attr"`
}

// STBuiltInUnit ...
type STBuiltInUnit string

// CTBuiltInUnit ...
type CTBuiltInUnit struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// STPictureFormat ...
type STPictureFormat string

// CTPictureFormat ...
type CTPictureFormat struct {
	ValAttr string `xml:"val,attr"`
}

// STPictureStackUnit ...
type STPictureStackUnit float64

// CTPictureStackUnit ...
type CTPictureStackUnit struct {
	ValAttr float64 `xml:"val,attr"`
}

// CTPictureOptions ...
type CTPictureOptions struct {
	ApplyToFront     []*CTBoolean          `xml:"applyToFront"`
	ApplyToSides     []*CTBoolean          `xml:"applyToSides"`
	ApplyToEnd       []*CTBoolean          `xml:"applyToEnd"`
	PictureFormat    []*CTPictureFormat    `xml:"pictureFormat"`
	PictureStackUnit []*CTPictureStackUnit `xml:"pictureStackUnit"`
}

// CTDispUnitsLbl ...
type CTDispUnitsLbl struct {
	Layout []*CTLayout          `xml:"layout"`
	Tx     []*CTTx              `xml:"tx"`
	SpPr   []*CTShapeProperties `xml:"spPr"`
	TxPr   []*CTTextBody        `xml:"txPr"`
}

// CTDispUnits ...
type CTDispUnits struct {
	CustUnit     []*CTDouble        `xml:"custUnit"`
	BuiltInUnit  []*CTBuiltInUnit   `xml:"builtInUnit"`
	DispUnitsLbl []*CTDispUnitsLbl  `xml:"dispUnitsLbl"`
	ExtLst       []*CTExtensionList `xml:"extLst"`
}

// STOrientation ...
type STOrientation string

// CTOrientation ...
type CTOrientation struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// STLogBase ...
type STLogBase float64

// CTLogBase ...
type CTLogBase struct {
	ValAttr float64 `xml:"val,attr"`
}

// CTScaling ...
type CTScaling struct {
	LogBase     []*CTLogBase       `xml:"logBase"`
	Orientation []*CTOrientation   `xml:"orientation"`
	Max         []*CTDouble        `xml:"max"`
	Min         []*CTDouble        `xml:"min"`
	ExtLst      []*CTExtensionList `xml:"extLst"`
}

// STLblOffset ...
type STLblOffset struct {
	STLblOffsetPercent *STLblOffsetPercent
}

// STLblOffsetPercent ...
type STLblOffsetPercent string

// CTLblOffset ...
type CTLblOffset struct {
	ValAttr *STLblOffset `xml:"val,attr,omitempty"`
}

// EGAxShared ...
type EGAxShared struct {
	AxId           []*CTUnsignedInt
	Scaling        []*CTScaling
	Delete         []*CTBoolean
	AxPos          []*CTAxPos
	MajorGridlines []*CTChartLines
	MinorGridlines []*CTChartLines
	Title          []*CTTitle
	NumFmt         []*CTNumFmt
	MajorTickMark  []*CTTickMark
	MinorTickMark  []*CTTickMark
	TickLblPos     []*CTTickLblPos
	SpPr           []*CTShapeProperties
	TxPr           []*CTTextBody
	CrossAx        []*CTUnsignedInt
	Crosses        []*CTCrosses
	CrossesAt      []*CTDouble
}

// CTCatAx ...
type CTCatAx struct {
	EGAxShared    []*EGAxShared
	Auto          []*CTBoolean       `xml:"auto"`
	LblAlgn       []*CTLblAlgn       `xml:"lblAlgn"`
	LblOffset     []*CTLblOffset     `xml:"lblOffset"`
	TickLblSkip   []*CTSkip          `xml:"tickLblSkip"`
	TickMarkSkip  []*CTSkip          `xml:"tickMarkSkip"`
	NoMultiLvlLbl []*CTBoolean       `xml:"noMultiLvlLbl"`
	ExtLst        []*CTExtensionList `xml:"extLst"`
}

// CTDateAx ...
type CTDateAx struct {
	EGAxShared    []*EGAxShared
	Auto          []*CTBoolean       `xml:"auto"`
	LblOffset     []*CTLblOffset     `xml:"lblOffset"`
	BaseTimeUnit  []*CTTimeUnit      `xml:"baseTimeUnit"`
	MajorUnit     []*CTAxisUnit      `xml:"majorUnit"`
	MajorTimeUnit []*CTTimeUnit      `xml:"majorTimeUnit"`
	MinorUnit     []*CTAxisUnit      `xml:"minorUnit"`
	MinorTimeUnit []*CTTimeUnit      `xml:"minorTimeUnit"`
	ExtLst        []*CTExtensionList `xml:"extLst"`
}

// CTSerAx ...
type CTSerAx struct {
	EGAxShared   []*EGAxShared
	TickLblSkip  []*CTSkip          `xml:"tickLblSkip"`
	TickMarkSkip []*CTSkip          `xml:"tickMarkSkip"`
	ExtLst       []*CTExtensionList `xml:"extLst"`
}

// CTValAx ...
type CTValAx struct {
	EGAxShared   []*EGAxShared
	CrossBetween []*CTCrossBetween  `xml:"crossBetween"`
	MajorUnit    []*CTAxisUnit      `xml:"majorUnit"`
	MinorUnit    []*CTAxisUnit      `xml:"minorUnit"`
	DispUnits    []*CTDispUnits     `xml:"dispUnits"`
	ExtLst       []*CTExtensionList `xml:"extLst"`
}

// CTPlotArea ...
type CTPlotArea struct {
	Layout         []*CTLayout          `xml:"layout"`
	AreaChart      []*CTAreaChart       `xml:"areaChart"`
	Area3DChart    []*CTArea3DChart     `xml:"area3DChart"`
	LineChart      []*CTLineChart       `xml:"lineChart"`
	Line3DChart    []*CTLine3DChart     `xml:"line3DChart"`
	StockChart     []*CTStockChart      `xml:"stockChart"`
	RadarChart     []*CTRadarChart      `xml:"radarChart"`
	ScatterChart   []*CTScatterChart    `xml:"scatterChart"`
	PieChart       []*CTPieChart        `xml:"pieChart"`
	Pie3DChart     []*CTPie3DChart      `xml:"pie3DChart"`
	DoughnutChart  []*CTDoughnutChart   `xml:"doughnutChart"`
	BarChart       []*CTBarChart        `xml:"barChart"`
	Bar3DChart     []*CTBar3DChart      `xml:"bar3DChart"`
	OfPieChart     []*CTOfPieChart      `xml:"ofPieChart"`
	SurfaceChart   []*CTSurfaceChart    `xml:"surfaceChart"`
	Surface3DChart []*CTSurface3DChart  `xml:"surface3DChart"`
	BubbleChart    []*CTBubbleChart     `xml:"bubbleChart"`
	ValAx          []*CTValAx           `xml:"valAx"`
	CatAx          []*CTCatAx           `xml:"catAx"`
	DateAx         []*CTDateAx          `xml:"dateAx"`
	SerAx          []*CTSerAx           `xml:"serAx"`
	DTable         []*CTDTable          `xml:"dTable"`
	SpPr           []*CTShapeProperties `xml:"spPr"`
	ExtLst         []*CTExtensionList   `xml:"extLst"`
}

// CTPivotFmt ...
type CTPivotFmt struct {
	Idx    []*CTUnsignedInt     `xml:"idx"`
	SpPr   []*CTShapeProperties `xml:"spPr"`
	TxPr   []*CTTextBody        `xml:"txPr"`
	Marker []*CTMarker          `xml:"marker"`
	DLbl   []*CTDLbl            `xml:"dLbl"`
	ExtLst []*CTExtensionList   `xml:"extLst"`
}

// CTPivotFmts ...
type CTPivotFmts struct {
	PivotFmt []*CTPivotFmt `xml:"pivotFmt"`
}

// STLegendPos ...
type STLegendPos string

// CTLegendPos ...
type CTLegendPos struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// EGLegendEntryData ...
type EGLegendEntryData struct {
	TxPr []*CTTextBody
}

// CTLegendEntry ...
type CTLegendEntry struct {
	EGLegendEntryData []*EGLegendEntryData
	Idx               []*CTUnsignedInt   `xml:"idx"`
	Delete            []*CTBoolean       `xml:"delete"`
	ExtLst            []*CTExtensionList `xml:"extLst"`
}

// CTLegend ...
type CTLegend struct {
	LegendPos   []*CTLegendPos       `xml:"legendPos"`
	LegendEntry []*CTLegendEntry     `xml:"legendEntry"`
	Layout      []*CTLayout          `xml:"layout"`
	Overlay     []*CTBoolean         `xml:"overlay"`
	SpPr        []*CTShapeProperties `xml:"spPr"`
	TxPr        []*CTTextBody        `xml:"txPr"`
	ExtLst      []*CTExtensionList   `xml:"extLst"`
}

// STDispBlanksAs ...
type STDispBlanksAs string

// CTDispBlanksAs ...
type CTDispBlanksAs struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTChart ...
type CTChart struct {
	Title            []*CTTitle         `xml:"title"`
	AutoTitleDeleted []*CTBoolean       `xml:"autoTitleDeleted"`
	PivotFmts        []*CTPivotFmts     `xml:"pivotFmts"`
	View3D           []*CTView3D        `xml:"view3D"`
	Floor            []*CTSurface       `xml:"floor"`
	SideWall         []*CTSurface       `xml:"sideWall"`
	BackWall         []*CTSurface       `xml:"backWall"`
	PlotArea         []*CTPlotArea      `xml:"plotArea"`
	Legend           []*CTLegend        `xml:"legend"`
	PlotVisOnly      []*CTBoolean       `xml:"plotVisOnly"`
	DispBlanksAs     []*CTDispBlanksAs  `xml:"dispBlanksAs"`
	ShowDLblsOverMax []*CTBoolean       `xml:"showDLblsOverMax"`
	ExtLst           []*CTExtensionList `xml:"extLst"`
}

// STStyle ...
type STStyle byte

// CTStyle ...
type CTStyle struct {
	ValAttr byte `xml:"val,attr"`
}

// CTPivotSource ...
type CTPivotSource struct {
	Name   []string           `xml:"name"`
	FmtId  []*CTUnsignedInt   `xml:"fmtId"`
	ExtLst []*CTExtensionList `xml:"extLst"`
}

// CTProtection ...
type CTProtection struct {
	ChartObject   []*CTBoolean `xml:"chartObject"`
	Data          []*CTBoolean `xml:"data"`
	Formatting    []*CTBoolean `xml:"formatting"`
	Selection     []*CTBoolean `xml:"selection"`
	UserInterface []*CTBoolean `xml:"userInterface"`
}

// CTHeaderFooter ...
type CTHeaderFooter struct {
	AlignWithMarginsAttr bool     `xml:"alignWithMargins,attr,omitempty"`
	DifferentOddEvenAttr bool     `xml:"differentOddEven,attr,omitempty"`
	DifferentFirstAttr   bool     `xml:"differentFirst,attr,omitempty"`
	OddHeader            []string `xml:"oddHeader"`
	OddFooter            []string `xml:"oddFooter"`
	EvenHeader           []string `xml:"evenHeader"`
	EvenFooter           []string `xml:"evenFooter"`
	FirstHeader          []string `xml:"firstHeader"`
	FirstFooter          []string `xml:"firstFooter"`
}

// CTPageMargins ...
type CTPageMargins struct {
	LAttr      float64 `xml:"l,attr"`
	RAttr      float64 `xml:"r,attr"`
	TAttr      float64 `xml:"t,attr"`
	BAttr      float64 `xml:"b,attr"`
	HeaderAttr float64 `xml:"header,attr"`
	FooterAttr float64 `xml:"footer,attr"`
}

// STPageSetupOrientation ...
type STPageSetupOrientation string

// CTExternalData ...
type CTExternalData struct {
	RIdAttr    string       `xml:"r:id,attr"`
	AutoUpdate []*CTBoolean `xml:"autoUpdate"`
}

// CTPageSetup ...
type CTPageSetup struct {
	PaperSizeAttr          *Uint32 `xml:"paperSize,attr,omitempty"`
	PaperHeightAttr        string  `xml:"paperHeight,attr,omitempty"`
	PaperWidthAttr         string  `xml:"paperWidth,attr,omitempty"`
	FirstPageNumberAttr    *Uint32 `xml:"firstPageNumber,attr,omitempty"`
	OrientationAttr        string  `xml:"orientation,attr,omitempty"`
	BlackAndWhiteAttr      bool    `xml:"blackAndWhite,attr,omitempty"`
	DraftAttr              bool    `xml:"draft,attr,omitempty"`
	UseFirstPageNumberAttr bool    `xml:"useFirstPageNumber,attr,omitempty"`
	HorizontalDpiAttr      int     `xml:"horizontalDpi,attr,omitempty"`
	VerticalDpiAttr        int     `xml:"verticalDpi,attr,omitempty"`
	CopiesAttr             *Uint32 `xml:"copies,attr,omitempty"`
}

// CTPrintSettings ...
type CTPrintSettings struct {
	HeaderFooter []*CTHeaderFooter `xml:"headerFooter"`
	PageMargins  []*CTPageMargins  `xml:"pageMargins"`
	PageSetup    []*CTPageSetup    `xml:"pageSetup"`
}

// CTChartSpace ...
type CTChartSpace struct {
	Date1904       []*CTBoolean         `xml:"date1904"`
	Lang           []*CTTextLanguageID  `xml:"lang"`
	RoundedCorners []*CTBoolean         `xml:"roundedCorners"`
	Style          []*CTStyle           `xml:"style"`
	ClrMapOvr      []*CTColorMapping    `xml:"clrMapOvr"`
	PivotSource    []*CTPivotSource     `xml:"pivotSource"`
	Protection     []*CTProtection      `xml:"protection"`
	Chart          []*CTChart           `xml:"chart"`
	SpPr           []*CTShapeProperties `xml:"spPr"`
	TxPr           []*CTTextBody        `xml:"txPr"`
	ExternalData   []*CTExternalData    `xml:"externalData"`
	PrintSettings  []*CTPrintSettings   `xml:"printSettings"`
	UserShapes     []*CTRelId           `xml:"userShapes"`
	ExtLst         []*CTExtensionList   `xml:"extLst"`
}

// ChartSpace ...
type ChartSpace *CTChartSpace

// UserShapes ...
type UserShapes *CTDrawing

// Chart ...
type Chart *CTRelId
