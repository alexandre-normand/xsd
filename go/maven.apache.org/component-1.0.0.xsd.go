// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// Component ...
type Component *Component

// FileSets ...
type FileSets struct {
	XMLName xml.Name   `xml:"fileSets"`
	FileSet []*FileSet `xml:"fileSet"`
}

// Files ...
type Files struct {
	XMLName xml.Name    `xml:"files"`
	File    []*FileItem `xml:"file"`
}

// DependencySets ...
type DependencySets struct {
	XMLName       xml.Name         `xml:"dependencySets"`
	DependencySet []*DependencySet `xml:"dependencySet"`
}

// Component ...
type Component struct {
	FileSets       *FileSets       `xml:"fileSets"`
	Files          *Files          `xml:"files"`
	DependencySets *DependencySets `xml:"dependencySets"`
}

// Includes ...
type Includes struct {
	XMLName xml.Name `xml:"includes"`
	Include []string `xml:"include"`
}

// Excludes ...
type Excludes struct {
	XMLName xml.Name `xml:"excludes"`
	Exclude []string `xml:"exclude"`
}

// DependencySet ...
type DependencySet struct {
	OutputFileNameMapping string    `xml:"outputFileNameMapping"`
	Unpack                bool      `xml:"unpack"`
	Scope                 string    `xml:"scope"`
	OutputDirectory       string    `xml:"outputDirectory"`
	Includes              *Includes `xml:"includes"`
	Excludes              *Excludes `xml:"excludes"`
	FileMode              string    `xml:"fileMode"`
	DirectoryMode         string    `xml:"directoryMode"`
}

// FileItem ...
type FileItem struct {
	Source          string `xml:"source"`
	OutputDirectory string `xml:"outputDirectory"`
	DestName        string `xml:"destName"`
	FileMode        string `xml:"fileMode"`
	LineEnding      string `xml:"lineEnding"`
	Filtered        bool   `xml:"filtered"`
}

// FileSet ...
type FileSet struct {
	Directory       string    `xml:"directory"`
	LineEnding      string    `xml:"lineEnding"`
	OutputDirectory string    `xml:"outputDirectory"`
	Includes        *Includes `xml:"includes"`
	Excludes        *Excludes `xml:"excludes"`
	FileMode        string    `xml:"fileMode"`
	DirectoryMode   string    `xml:"directoryMode"`
}
