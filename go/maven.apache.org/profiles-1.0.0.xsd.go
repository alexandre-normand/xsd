// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// ProfilesXml ...
type ProfilesXml *ProfilesRoot

// Profiles ...
type Profiles struct {
	XMLName xml.Name   `xml:"profiles"`
	Profile []*Profile `xml:"profile"`
}

// ActiveProfiles ...
type ActiveProfiles struct {
	XMLName       xml.Name `xml:"activeProfiles"`
	ActiveProfile []string `xml:"activeProfile"`
}

// ProfilesRoot ...
type ProfilesRoot struct {
	Profiles       *Profiles       `xml:"profiles"`
	ActiveProfiles *ActiveProfiles `xml:"activeProfiles"`
}

// Properties ...
type Properties struct {
	XMLName xml.Name `xml:"properties"`
}

// Repositories ...
type Repositories struct {
	XMLName    xml.Name      `xml:"repositories"`
	Repository []*Repository `xml:"repository"`
}

// PluginRepositories ...
type PluginRepositories struct {
	XMLName          xml.Name      `xml:"pluginRepositories"`
	PluginRepository []*Repository `xml:"pluginRepository"`
}

// Profile ...
type Profile struct {
	Id                 string              `xml:"id"`
	Activation         *Activation         `xml:"activation"`
	Properties         *Properties         `xml:"properties"`
	Repositories       *Repositories       `xml:"repositories"`
	PluginRepositories *PluginRepositories `xml:"pluginRepositories"`
}

// Activation ...
type Activation struct {
	ActiveByDefault bool                `xml:"activeByDefault"`
	Jdk             string              `xml:"jdk"`
	Os              *ActivationOS       `xml:"os"`
	Property        *ActivationProperty `xml:"property"`
	File            *ActivationFile     `xml:"file"`
}

// ActivationOS ...
type ActivationOS struct {
	Name    string `xml:"name"`
	Family  string `xml:"family"`
	Arch    string `xml:"arch"`
	Version string `xml:"version"`
}

// ActivationProperty ...
type ActivationProperty struct {
	Name  string `xml:"name"`
	Value string `xml:"value"`
}

// ActivationFile ...
type ActivationFile struct {
	Missing string `xml:"missing"`
	Exists  string `xml:"exists"`
}

// Repository ...
type Repository struct {
	Releases  *RepositoryPolicy `xml:"releases"`
	Snapshots *RepositoryPolicy `xml:"snapshots"`
	Id        string            `xml:"id"`
	Name      string            `xml:"name"`
	Url       string            `xml:"url"`
	Layout    string            `xml:"layout"`
}

// RepositoryPolicy ...
type RepositoryPolicy struct {
	Enabled        bool   `xml:"enabled"`
	UpdatePolicy   string `xml:"updatePolicy"`
	ChecksumPolicy string `xml:"checksumPolicy"`
}
