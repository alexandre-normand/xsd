// Copyright 2020 The xgen Authors. All rights reserved.
//
// DO NOT EDIT: generated by xgen XSD generator
//
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package schema

import (
	"time"
)

// CTAutoFilter ...
type CTAutoFilter struct {
	RefAttr      string             `xml:"ref,attr,omitempty"`
	FilterColumn []*CTFilterColumn  `xml:"filterColumn"`
	SortState    []*CTSortState     `xml:"sortState"`
	ExtLst       []*CTExtensionList `xml:"extLst"`
}

// CTFilterColumn ...
type CTFilterColumn struct {
	ColIdAttr        *Uint32            `xml:"colId,attr"`
	HiddenButtonAttr bool               `xml:"hiddenButton,attr,omitempty"`
	ShowButtonAttr   bool               `xml:"showButton,attr,omitempty"`
	Filters          []*CTFilters       `xml:"filters"`
	Top10            []*CTTop10         `xml:"top10"`
	CustomFilters    []*CTCustomFilters `xml:"customFilters"`
	DynamicFilter    []*CTDynamicFilter `xml:"dynamicFilter"`
	ColorFilter      []*CTColorFilter   `xml:"colorFilter"`
	IconFilter       []*CTIconFilter    `xml:"iconFilter"`
	ExtLst           []*CTExtensionList `xml:"extLst"`
}

// CTFilters ...
type CTFilters struct {
	BlankAttr        bool               `xml:"blank,attr,omitempty"`
	CalendarTypeAttr string             `xml:"calendarType,attr,omitempty"`
	Filter           []*CTFilter        `xml:"filter"`
	DateGroupItem    []*CTDateGroupItem `xml:"dateGroupItem"`
}

// CTFilter ...
type CTFilter struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTCustomFilters ...
type CTCustomFilters struct {
	AndAttr      bool              `xml:"and,attr,omitempty"`
	CustomFilter []*CTCustomFilter `xml:"customFilter"`
}

// CTCustomFilter ...
type CTCustomFilter struct {
	OperatorAttr string `xml:"operator,attr,omitempty"`
	ValAttr      string `xml:"val,attr,omitempty"`
}

// CTTop10 ...
type CTTop10 struct {
	TopAttr       bool    `xml:"top,attr,omitempty"`
	PercentAttr   bool    `xml:"percent,attr,omitempty"`
	ValAttr       float64 `xml:"val,attr"`
	FilterValAttr float64 `xml:"filterVal,attr,omitempty"`
}

// CTColorFilter ...
type CTColorFilter struct {
	DxfIdAttr     *Uint32 `xml:"dxfId,attr,omitempty"`
	CellColorAttr bool    `xml:"cellColor,attr,omitempty"`
}

// CTIconFilter ...
type CTIconFilter struct {
	IconSetAttr string  `xml:"iconSet,attr"`
	IconIdAttr  *Uint32 `xml:"iconId,attr,omitempty"`
}

// STFilterOperator ...
type STFilterOperator string

// CTDynamicFilter ...
type CTDynamicFilter struct {
	TypeAttr      string    `xml:"type,attr"`
	ValAttr       float64   `xml:"val,attr,omitempty"`
	ValIsoAttr    time.Time `xml:"valIso,attr,omitempty"`
	MaxValIsoAttr time.Time `xml:"maxValIso,attr,omitempty"`
}

// STDynamicFilterType ...
type STDynamicFilterType string

// STIconSetType ...
type STIconSetType string

// CTSortState ...
type CTSortState struct {
	ColumnSortAttr    bool               `xml:"columnSort,attr,omitempty"`
	CaseSensitiveAttr bool               `xml:"caseSensitive,attr,omitempty"`
	SortMethodAttr    string             `xml:"sortMethod,attr,omitempty"`
	RefAttr           string             `xml:"ref,attr"`
	SortCondition     []*CTSortCondition `xml:"sortCondition"`
	ExtLst            []*CTExtensionList `xml:"extLst"`
}

// CTSortCondition ...
type CTSortCondition struct {
	DescendingAttr bool    `xml:"descending,attr,omitempty"`
	SortByAttr     string  `xml:"sortBy,attr,omitempty"`
	RefAttr        string  `xml:"ref,attr"`
	CustomListAttr string  `xml:"customList,attr,omitempty"`
	DxfIdAttr      *Uint32 `xml:"dxfId,attr,omitempty"`
	IconSetAttr    string  `xml:"iconSet,attr,omitempty"`
	IconIdAttr     *Uint32 `xml:"iconId,attr,omitempty"`
}

// STSortBy ...
type STSortBy string

// STSortMethod ...
type STSortMethod string

// CTDateGroupItem ...
type CTDateGroupItem struct {
	YearAttr             *Uint16 `xml:"year,attr"`
	MonthAttr            *Uint16 `xml:"month,attr,omitempty"`
	DayAttr              *Uint16 `xml:"day,attr,omitempty"`
	HourAttr             *Uint16 `xml:"hour,attr,omitempty"`
	MinuteAttr           *Uint16 `xml:"minute,attr,omitempty"`
	SecondAttr           *Uint16 `xml:"second,attr,omitempty"`
	DateTimeGroupingAttr string  `xml:"dateTimeGrouping,attr"`
}

// STDateTimeGrouping ...
type STDateTimeGrouping string

// STCellRef ...
type STCellRef string

// STRef ...
type STRef string

// STRefA ...
type STRefA string

// STSqref ...
type STSqref []string

// STFormula ...
type STFormula string

// STUnsignedIntHex ...
type STUnsignedIntHex []byte

// CTXStringElement ...
type CTXStringElement struct {
	VAttr string `xml:"v,attr"`
}

// CTExtension ...
type CTExtension struct {
	UriAttr string `xml:"uri,attr,omitempty"`
}

// CTObjectAnchor ...
type CTObjectAnchor struct {
	MoveWithCellsAttr bool        `xml:"moveWithCells,attr,omitempty"`
	SizeWithCellsAttr bool        `xml:"sizeWithCells,attr,omitempty"`
	XdrFrom           []*CTMarker `xml:"xdr:from"`
	XdrTo             []*CTMarker `xml:"xdr:to"`
}

// EGExtensionList ...
type EGExtensionList struct {
	Ext []*CTExtension
}

// CTExtensionList ...
type CTExtensionList struct {
	EGExtensionList *EGExtensionList
}

// CalcChain ...
type CalcChain *CTCalcChain

// CTCalcChain ...
type CTCalcChain struct {
	C      []*CTCalcCell    `xml:"c"`
	ExtLst *CTExtensionList `xml:"extLst"`
}

// CTCalcCell ...
type CTCalcCell struct {
	RAttr string `xml:"r,attr"`
	IAttr int    `xml:"i,attr,omitempty"`
	SAttr bool   `xml:"s,attr,omitempty"`
	LAttr bool   `xml:"l,attr,omitempty"`
	TAttr bool   `xml:"t,attr,omitempty"`
	AAttr bool   `xml:"a,attr,omitempty"`
}

// Comments ...
type Comments *CTComments

// CTComments ...
type CTComments struct {
	Authors     []*CTAuthors     `xml:"authors"`
	CommentList []*CTCommentList `xml:"commentList"`
	ExtLst      *CTExtensionList `xml:"extLst"`
}

// CTAuthors ...
type CTAuthors struct {
	Author []string `xml:"author"`
}

// CTCommentList ...
type CTCommentList struct {
	Comment []*CTComment `xml:"comment"`
}

// CTComment ...
type CTComment struct {
	RefAttr      string         `xml:"ref,attr"`
	AuthorIdAttr *Uint32        `xml:"authorId,attr"`
	GuidAttr     string         `xml:"guid,attr,omitempty"`
	ShapeIdAttr  *Uint32        `xml:"shapeId,attr,omitempty"`
	Text         []*CTRst       `xml:"text"`
	CommentPr    []*CTCommentPr `xml:"commentPr"`
}

// CTCommentPr ...
type CTCommentPr struct {
	LockedAttr      bool              `xml:"locked,attr,omitempty"`
	DefaultSizeAttr bool              `xml:"defaultSize,attr,omitempty"`
	PrintAttr       bool              `xml:"print,attr,omitempty"`
	DisabledAttr    bool              `xml:"disabled,attr,omitempty"`
	AutoFillAttr    bool              `xml:"autoFill,attr,omitempty"`
	AutoLineAttr    bool              `xml:"autoLine,attr,omitempty"`
	AltTextAttr     string            `xml:"altText,attr,omitempty"`
	TextHAlignAttr  string            `xml:"textHAlign,attr,omitempty"`
	TextVAlignAttr  string            `xml:"textVAlign,attr,omitempty"`
	LockTextAttr    bool              `xml:"lockText,attr,omitempty"`
	JustLastXAttr   bool              `xml:"justLastX,attr,omitempty"`
	AutoScaleAttr   bool              `xml:"autoScale,attr,omitempty"`
	Anchor          []*CTObjectAnchor `xml:"anchor"`
}

// STTextHAlign ...
type STTextHAlign string

// STTextVAlign ...
type STTextVAlign string

// MapInfo ...
type MapInfo *CTMapInfo

// CTMapInfo ...
type CTMapInfo struct {
	SelectionNamespacesAttr string      `xml:"SelectionNamespaces,attr"`
	Schema                  []*CTSchema `xml:"Schema"`
	Map                     []*CTMap    `xml:"Map"`
}

// CTSchema ...
type CTSchema struct {
	IDAttr             string `xml:"ID,attr"`
	SchemaRefAttr      string `xml:"SchemaRef,attr,omitempty"`
	NamespaceAttr      string `xml:"Namespace,attr,omitempty"`
	SchemaLanguageAttr string `xml:"SchemaLanguage,attr,omitempty"`
}

// CTMap ...
type CTMap struct {
	IDAttr                               *Uint32          `xml:"ID,attr"`
	NameAttr                             string           `xml:"Name,attr"`
	RootElementAttr                      string           `xml:"RootElement,attr"`
	SchemaIDAttr                         string           `xml:"SchemaID,attr"`
	ShowImportExportValidationErrorsAttr bool             `xml:"ShowImportExportValidationErrors,attr"`
	AutoFitAttr                          bool             `xml:"AutoFit,attr"`
	AppendAttr                           bool             `xml:"Append,attr"`
	PreserveSortAFLayoutAttr             bool             `xml:"PreserveSortAFLayout,attr"`
	PreserveFormatAttr                   bool             `xml:"PreserveFormat,attr"`
	DataBinding                          []*CTDataBinding `xml:"DataBinding"`
}

// CTDataBinding ...
type CTDataBinding struct {
	DataBindingNameAttr     string  `xml:"DataBindingName,attr,omitempty"`
	FileBindingAttr         bool    `xml:"FileBinding,attr,omitempty"`
	ConnectionIDAttr        *Uint32 `xml:"ConnectionID,attr,omitempty"`
	FileBindingNameAttr     string  `xml:"FileBindingName,attr,omitempty"`
	DataBindingLoadModeAttr *Uint32 `xml:"DataBindingLoadMode,attr"`
}

// Connections ...
type Connections *CTConnections

// CTConnections ...
type CTConnections struct {
	Connection []*CTConnection `xml:"connection"`
}

// CTConnection ...
type CTConnection struct {
	IdAttr                    *Uint32            `xml:"id,attr"`
	SourceFileAttr            string             `xml:"sourceFile,attr,omitempty"`
	OdcFileAttr               string             `xml:"odcFile,attr,omitempty"`
	KeepAliveAttr             bool               `xml:"keepAlive,attr,omitempty"`
	IntervalAttr              *Uint32            `xml:"interval,attr,omitempty"`
	NameAttr                  string             `xml:"name,attr,omitempty"`
	DescriptionAttr           string             `xml:"description,attr,omitempty"`
	TypeAttr                  *Uint32            `xml:"type,attr,omitempty"`
	ReconnectionMethodAttr    *Uint32            `xml:"reconnectionMethod,attr,omitempty"`
	RefreshedVersionAttr      byte               `xml:"refreshedVersion,attr"`
	MinRefreshableVersionAttr byte               `xml:"minRefreshableVersion,attr,omitempty"`
	SavePasswordAttr          bool               `xml:"savePassword,attr,omitempty"`
	NewAttr                   bool               `xml:"new,attr,omitempty"`
	DeletedAttr               bool               `xml:"deleted,attr,omitempty"`
	OnlyUseConnectionFileAttr bool               `xml:"onlyUseConnectionFile,attr,omitempty"`
	BackgroundAttr            bool               `xml:"background,attr,omitempty"`
	RefreshOnLoadAttr         bool               `xml:"refreshOnLoad,attr,omitempty"`
	SaveDataAttr              bool               `xml:"saveData,attr,omitempty"`
	CredentialsAttr           string             `xml:"credentials,attr,omitempty"`
	SingleSignOnIdAttr        string             `xml:"singleSignOnId,attr,omitempty"`
	DbPr                      []*CTDbPr          `xml:"dbPr"`
	OlapPr                    []*CTOlapPr        `xml:"olapPr"`
	WebPr                     []*CTWebPr         `xml:"webPr"`
	TextPr                    []*CTTextPr        `xml:"textPr"`
	Parameters                []*CTParameters    `xml:"parameters"`
	ExtLst                    []*CTExtensionList `xml:"extLst"`
}

// STCredMethod ...
type STCredMethod string

// CTDbPr ...
type CTDbPr struct {
	ConnectionAttr    string  `xml:"connection,attr"`
	CommandAttr       string  `xml:"command,attr,omitempty"`
	ServerCommandAttr string  `xml:"serverCommand,attr,omitempty"`
	CommandTypeAttr   *Uint32 `xml:"commandType,attr,omitempty"`
}

// CTOlapPr ...
type CTOlapPr struct {
	LocalAttr              bool    `xml:"local,attr,omitempty"`
	LocalConnectionAttr    string  `xml:"localConnection,attr,omitempty"`
	LocalRefreshAttr       bool    `xml:"localRefresh,attr,omitempty"`
	SendLocaleAttr         bool    `xml:"sendLocale,attr,omitempty"`
	RowDrillCountAttr      *Uint32 `xml:"rowDrillCount,attr,omitempty"`
	ServerFillAttr         bool    `xml:"serverFill,attr,omitempty"`
	ServerNumberFormatAttr bool    `xml:"serverNumberFormat,attr,omitempty"`
	ServerFontAttr         bool    `xml:"serverFont,attr,omitempty"`
	ServerFontColorAttr    bool    `xml:"serverFontColor,attr,omitempty"`
}

// CTWebPr ...
type CTWebPr struct {
	XmlAttr         bool        `xml:"xml,attr,omitempty"`
	SourceDataAttr  bool        `xml:"sourceData,attr,omitempty"`
	ParsePreAttr    bool        `xml:"parsePre,attr,omitempty"`
	ConsecutiveAttr bool        `xml:"consecutive,attr,omitempty"`
	FirstRowAttr    bool        `xml:"firstRow,attr,omitempty"`
	Xl97Attr        bool        `xml:"xl97,attr,omitempty"`
	TextDatesAttr   bool        `xml:"textDates,attr,omitempty"`
	Xl2000Attr      bool        `xml:"xl2000,attr,omitempty"`
	UrlAttr         string      `xml:"url,attr,omitempty"`
	PostAttr        string      `xml:"post,attr,omitempty"`
	HtmlTablesAttr  bool        `xml:"htmlTables,attr,omitempty"`
	HtmlFormatAttr  string      `xml:"htmlFormat,attr,omitempty"`
	EditPageAttr    string      `xml:"editPage,attr,omitempty"`
	Tables          []*CTTables `xml:"tables"`
}

// STHtmlFmt ...
type STHtmlFmt string

// CTParameters ...
type CTParameters struct {
	CountAttr *Uint32        `xml:"count,attr,omitempty"`
	Parameter []*CTParameter `xml:"parameter"`
}

// CTParameter ...
type CTParameter struct {
	NameAttr            string  `xml:"name,attr,omitempty"`
	SqlTypeAttr         int     `xml:"sqlType,attr,omitempty"`
	ParameterTypeAttr   string  `xml:"parameterType,attr,omitempty"`
	RefreshOnChangeAttr bool    `xml:"refreshOnChange,attr,omitempty"`
	PromptAttr          string  `xml:"prompt,attr,omitempty"`
	BooleanAttr         bool    `xml:"boolean,attr,omitempty"`
	DoubleAttr          float64 `xml:"double,attr,omitempty"`
	IntegerAttr         int     `xml:"integer,attr,omitempty"`
	StringAttr          string  `xml:"string,attr,omitempty"`
	CellAttr            string  `xml:"cell,attr,omitempty"`
}

// STParameterType ...
type STParameterType string

// CTTables ...
type CTTables struct {
	CountAttr *Uint32           `xml:"count,attr,omitempty"`
	M         *CTTableMissing   `xml:"m"`
	S         *CTXStringElement `xml:"s"`
	X         *CTIndex          `xml:"x"`
}

// CTTableMissing ...
type CTTableMissing struct {
}

// CTTextPr ...
type CTTextPr struct {
	PromptAttr       bool            `xml:"prompt,attr,omitempty"`
	FileTypeAttr     string          `xml:"fileType,attr,omitempty"`
	CharacterSetAttr string          `xml:"characterSet,attr,omitempty"`
	FirstRowAttr     *Uint32         `xml:"firstRow,attr,omitempty"`
	SourceFileAttr   string          `xml:"sourceFile,attr,omitempty"`
	DelimitedAttr    bool            `xml:"delimited,attr,omitempty"`
	DecimalAttr      string          `xml:"decimal,attr,omitempty"`
	ThousandsAttr    string          `xml:"thousands,attr,omitempty"`
	TabAttr          bool            `xml:"tab,attr,omitempty"`
	SpaceAttr        bool            `xml:"space,attr,omitempty"`
	CommaAttr        bool            `xml:"comma,attr,omitempty"`
	SemicolonAttr    bool            `xml:"semicolon,attr,omitempty"`
	ConsecutiveAttr  bool            `xml:"consecutive,attr,omitempty"`
	QualifierAttr    string          `xml:"qualifier,attr,omitempty"`
	DelimiterAttr    string          `xml:"delimiter,attr,omitempty"`
	TextFields       []*CTTextFields `xml:"textFields"`
}

// STFileType ...
type STFileType string

// STQualifier ...
type STQualifier string

// CTTextFields ...
type CTTextFields struct {
	CountAttr *Uint32        `xml:"count,attr,omitempty"`
	TextField []*CTTextField `xml:"textField"`
}

// CTTextField ...
type CTTextField struct {
	TypeAttr     string  `xml:"type,attr,omitempty"`
	PositionAttr *Uint32 `xml:"position,attr,omitempty"`
}

// STExternalConnectionType ...
type STExternalConnectionType string

// PivotCacheDefinition ...
type PivotCacheDefinition *CTPivotCacheDefinition

// PivotCacheRecords ...
type PivotCacheRecords *CTPivotCacheRecords

// PivotTableDefinition ...
type PivotTableDefinition *CTpivotTableDefinition

// CTPivotCacheDefinition ...
type CTPivotCacheDefinition struct {
	RIdAttr                   string                  `xml:"r:id,attr,omitempty"`
	InvalidAttr               bool                    `xml:"invalid,attr,omitempty"`
	SaveDataAttr              bool                    `xml:"saveData,attr,omitempty"`
	RefreshOnLoadAttr         bool                    `xml:"refreshOnLoad,attr,omitempty"`
	OptimizeMemoryAttr        bool                    `xml:"optimizeMemory,attr,omitempty"`
	EnableRefreshAttr         bool                    `xml:"enableRefresh,attr,omitempty"`
	RefreshedByAttr           string                  `xml:"refreshedBy,attr,omitempty"`
	RefreshedDateIsoAttr      time.Time               `xml:"refreshedDateIso,attr,omitempty"`
	BackgroundQueryAttr       bool                    `xml:"backgroundQuery,attr,omitempty"`
	MissingItemsLimitAttr     *Uint32                 `xml:"missingItemsLimit,attr,omitempty"`
	CreatedVersionAttr        byte                    `xml:"createdVersion,attr,omitempty"`
	RefreshedVersionAttr      byte                    `xml:"refreshedVersion,attr,omitempty"`
	MinRefreshableVersionAttr byte                    `xml:"minRefreshableVersion,attr,omitempty"`
	RecordCountAttr           *Uint32                 `xml:"recordCount,attr,omitempty"`
	UpgradeOnRefreshAttr      bool                    `xml:"upgradeOnRefresh,attr,omitempty"`
	TupleCacheAttr            bool                    `xml:"tupleCache,attr,omitempty"`
	SupportSubqueryAttr       bool                    `xml:"supportSubquery,attr,omitempty"`
	SupportAdvancedDrillAttr  bool                    `xml:"supportAdvancedDrill,attr,omitempty"`
	CacheSource               []*CTCacheSource        `xml:"cacheSource"`
	CacheFields               []*CTCacheFields        `xml:"cacheFields"`
	CacheHierarchies          *CTCacheHierarchies     `xml:"cacheHierarchies"`
	Kpis                      *CTPCDKPIs              `xml:"kpis"`
	TupleCache                *CTTupleCache           `xml:"tupleCache"`
	CalculatedItems           *CTCalculatedItems      `xml:"calculatedItems"`
	CalculatedMembers         *CTCalculatedMembers    `xml:"calculatedMembers"`
	Dimensions                *CTDimensions           `xml:"dimensions"`
	MeasureGroups             *CTMeasureGroups        `xml:"measureGroups"`
	Maps                      *CTMeasureDimensionMaps `xml:"maps"`
	ExtLst                    *CTExtensionList        `xml:"extLst"`
}

// CTCacheFields ...
type CTCacheFields struct {
	CountAttr  *Uint32         `xml:"count,attr,omitempty"`
	CacheField []*CTCacheField `xml:"cacheField"`
}

// CTCacheField ...
type CTCacheField struct {
	NameAttr                string           `xml:"name,attr"`
	CaptionAttr             string           `xml:"caption,attr,omitempty"`
	PropertyNameAttr        string           `xml:"propertyName,attr,omitempty"`
	ServerFieldAttr         bool             `xml:"serverField,attr,omitempty"`
	UniqueListAttr          bool             `xml:"uniqueList,attr,omitempty"`
	NumFmtIdAttr            *Uint32          `xml:"numFmtId,attr,omitempty"`
	FormulaAttr             string           `xml:"formula,attr,omitempty"`
	SqlTypeAttr             int              `xml:"sqlType,attr,omitempty"`
	HierarchyAttr           int              `xml:"hierarchy,attr,omitempty"`
	LevelAttr               *Uint32          `xml:"level,attr,omitempty"`
	DatabaseFieldAttr       bool             `xml:"databaseField,attr,omitempty"`
	MappingCountAttr        *Uint32          `xml:"mappingCount,attr,omitempty"`
	MemberPropertyFieldAttr bool             `xml:"memberPropertyField,attr,omitempty"`
	SharedItems             []*CTSharedItems `xml:"sharedItems"`
	FieldGroup              *CTFieldGroup    `xml:"fieldGroup"`
	MpMap                   []*CTX           `xml:"mpMap"`
	ExtLst                  *CTExtensionList `xml:"extLst"`
}

// CTCacheSource ...
type CTCacheSource struct {
	TypeAttr         string               `xml:"type,attr"`
	ConnectionIdAttr *Uint32              `xml:"connectionId,attr,omitempty"`
	WorksheetSource  []*CTWorksheetSource `xml:"worksheetSource"`
	Consolidation    []*CTConsolidation   `xml:"consolidation"`
	ExtLst           *CTExtensionList     `xml:"extLst"`
}

// STSourceType ...
type STSourceType string

// CTWorksheetSource ...
type CTWorksheetSource struct {
	RefAttr   string `xml:"ref,attr,omitempty"`
	NameAttr  string `xml:"name,attr,omitempty"`
	SheetAttr string `xml:"sheet,attr,omitempty"`
	RIdAttr   string `xml:"r:id,attr,omitempty"`
}

// CTConsolidation ...
type CTConsolidation struct {
	AutoPageAttr bool           `xml:"autoPage,attr,omitempty"`
	Pages        []*CTPages     `xml:"pages"`
	RangeSets    []*CTRangeSets `xml:"rangeSets"`
}

// CTPages ...
type CTPages struct {
	CountAttr *Uint32        `xml:"count,attr,omitempty"`
	Page      []*CTPCDSCPage `xml:"page"`
}

// CTPCDSCPage ...
type CTPCDSCPage struct {
	CountAttr *Uint32       `xml:"count,attr,omitempty"`
	PageItem  []*CTPageItem `xml:"pageItem"`
}

// CTPageItem ...
type CTPageItem struct {
	NameAttr string `xml:"name,attr"`
}

// CTRangeSets ...
type CTRangeSets struct {
	CountAttr *Uint32       `xml:"count,attr,omitempty"`
	RangeSet  []*CTRangeSet `xml:"rangeSet"`
}

// CTRangeSet ...
type CTRangeSet struct {
	I1Attr    *Uint32 `xml:"i1,attr,omitempty"`
	I2Attr    *Uint32 `xml:"i2,attr,omitempty"`
	I3Attr    *Uint32 `xml:"i3,attr,omitempty"`
	I4Attr    *Uint32 `xml:"i4,attr,omitempty"`
	RefAttr   string  `xml:"ref,attr,omitempty"`
	NameAttr  string  `xml:"name,attr,omitempty"`
	SheetAttr string  `xml:"sheet,attr,omitempty"`
	RIdAttr   string  `xml:"r:id,attr,omitempty"`
}

// CTSharedItems ...
type CTSharedItems struct {
	ContainsSemiMixedTypesAttr bool          `xml:"containsSemiMixedTypes,attr,omitempty"`
	ContainsNonDateAttr        bool          `xml:"containsNonDate,attr,omitempty"`
	ContainsDateAttr           bool          `xml:"containsDate,attr,omitempty"`
	ContainsStringAttr         bool          `xml:"containsString,attr,omitempty"`
	ContainsBlankAttr          bool          `xml:"containsBlank,attr,omitempty"`
	ContainsMixedTypesAttr     bool          `xml:"containsMixedTypes,attr,omitempty"`
	ContainsNumberAttr         bool          `xml:"containsNumber,attr,omitempty"`
	ContainsIntegerAttr        bool          `xml:"containsInteger,attr,omitempty"`
	MinValueAttr               float64       `xml:"minValue,attr,omitempty"`
	MaxValueAttr               float64       `xml:"maxValue,attr,omitempty"`
	MinDateAttr                time.Time     `xml:"minDate,attr,omitempty"`
	MaxDateAttr                time.Time     `xml:"maxDate,attr,omitempty"`
	CountAttr                  *Uint32       `xml:"count,attr,omitempty"`
	LongTextAttr               bool          `xml:"longText,attr,omitempty"`
	M                          []*CTMissing  `xml:"m"`
	N                          []*CTNumber   `xml:"n"`
	B                          []*CTBoolean  `xml:"b"`
	E                          []*CTError    `xml:"e"`
	S                          []*CTString   `xml:"s"`
	D                          []*CTDateTime `xml:"d"`
}

// CTMissing ...
type CTMissing struct {
	UAttr  bool        `xml:"u,attr,omitempty"`
	FAttr  bool        `xml:"f,attr,omitempty"`
	CAttr  string      `xml:"c,attr,omitempty"`
	CpAttr *Uint32     `xml:"cp,attr,omitempty"`
	InAttr *Uint32     `xml:"in,attr,omitempty"`
	BcAttr []byte      `xml:"bc,attr,omitempty"`
	FcAttr []byte      `xml:"fc,attr,omitempty"`
	IAttr  bool        `xml:"i,attr,omitempty"`
	UnAttr bool        `xml:"un,attr,omitempty"`
	StAttr bool        `xml:"st,attr,omitempty"`
	BAttr  bool        `xml:"b,attr,omitempty"`
	Tpls   []*CTTuples `xml:"tpls"`
	X      []*CTX      `xml:"x"`
}

// CTNumber ...
type CTNumber struct {
	VAttr  float64     `xml:"v,attr"`
	UAttr  bool        `xml:"u,attr,omitempty"`
	FAttr  bool        `xml:"f,attr,omitempty"`
	CAttr  string      `xml:"c,attr,omitempty"`
	CpAttr *Uint32     `xml:"cp,attr,omitempty"`
	InAttr *Uint32     `xml:"in,attr,omitempty"`
	BcAttr []byte      `xml:"bc,attr,omitempty"`
	FcAttr []byte      `xml:"fc,attr,omitempty"`
	IAttr  bool        `xml:"i,attr,omitempty"`
	UnAttr bool        `xml:"un,attr,omitempty"`
	StAttr bool        `xml:"st,attr,omitempty"`
	BAttr  bool        `xml:"b,attr,omitempty"`
	Tpls   []*CTTuples `xml:"tpls"`
	X      []*CTX      `xml:"x"`
}

// CTBoolean ...
type CTBoolean struct {
	VAttr  bool    `xml:"v,attr"`
	UAttr  bool    `xml:"u,attr,omitempty"`
	FAttr  bool    `xml:"f,attr,omitempty"`
	CAttr  string  `xml:"c,attr,omitempty"`
	CpAttr *Uint32 `xml:"cp,attr,omitempty"`
	X      []*CTX  `xml:"x"`
}

// CTError ...
type CTError struct {
	VAttr  string    `xml:"v,attr"`
	UAttr  bool      `xml:"u,attr,omitempty"`
	FAttr  bool      `xml:"f,attr,omitempty"`
	CAttr  string    `xml:"c,attr,omitempty"`
	CpAttr *Uint32   `xml:"cp,attr,omitempty"`
	InAttr *Uint32   `xml:"in,attr,omitempty"`
	BcAttr []byte    `xml:"bc,attr,omitempty"`
	FcAttr []byte    `xml:"fc,attr,omitempty"`
	IAttr  bool      `xml:"i,attr,omitempty"`
	UnAttr bool      `xml:"un,attr,omitempty"`
	StAttr bool      `xml:"st,attr,omitempty"`
	BAttr  bool      `xml:"b,attr,omitempty"`
	Tpls   *CTTuples `xml:"tpls"`
	X      []*CTX    `xml:"x"`
}

// CTString ...
type CTString struct {
	VAttr  string      `xml:"v,attr"`
	UAttr  bool        `xml:"u,attr,omitempty"`
	FAttr  bool        `xml:"f,attr,omitempty"`
	CAttr  string      `xml:"c,attr,omitempty"`
	CpAttr *Uint32     `xml:"cp,attr,omitempty"`
	InAttr *Uint32     `xml:"in,attr,omitempty"`
	BcAttr []byte      `xml:"bc,attr,omitempty"`
	FcAttr []byte      `xml:"fc,attr,omitempty"`
	IAttr  bool        `xml:"i,attr,omitempty"`
	UnAttr bool        `xml:"un,attr,omitempty"`
	StAttr bool        `xml:"st,attr,omitempty"`
	BAttr  bool        `xml:"b,attr,omitempty"`
	Tpls   []*CTTuples `xml:"tpls"`
	X      []*CTX      `xml:"x"`
}

// CTDateTime ...
type CTDateTime struct {
	VAttr  time.Time `xml:"v,attr"`
	UAttr  bool      `xml:"u,attr,omitempty"`
	FAttr  bool      `xml:"f,attr,omitempty"`
	CAttr  string    `xml:"c,attr,omitempty"`
	CpAttr *Uint32   `xml:"cp,attr,omitempty"`
	X      []*CTX    `xml:"x"`
}

// CTFieldGroup ...
type CTFieldGroup struct {
	ParAttr    *Uint32       `xml:"par,attr,omitempty"`
	BaseAttr   *Uint32       `xml:"base,attr,omitempty"`
	RangePr    *CTRangePr    `xml:"rangePr"`
	DiscretePr *CTDiscretePr `xml:"discretePr"`
	GroupItems *CTGroupItems `xml:"groupItems"`
}

// CTRangePr ...
type CTRangePr struct {
	AutoStartAttr     bool      `xml:"autoStart,attr,omitempty"`
	AutoEndAttr       bool      `xml:"autoEnd,attr,omitempty"`
	GroupByAttr       string    `xml:"groupBy,attr,omitempty"`
	StartNumAttr      float64   `xml:"startNum,attr,omitempty"`
	EndNumAttr        float64   `xml:"endNum,attr,omitempty"`
	StartDateAttr     time.Time `xml:"startDate,attr,omitempty"`
	EndDateAttr       time.Time `xml:"endDate,attr,omitempty"`
	GroupIntervalAttr float64   `xml:"groupInterval,attr,omitempty"`
}

// STGroupBy ...
type STGroupBy string

// CTDiscretePr ...
type CTDiscretePr struct {
	CountAttr *Uint32    `xml:"count,attr,omitempty"`
	X         []*CTIndex `xml:"x"`
}

// CTGroupItems ...
type CTGroupItems struct {
	CountAttr *Uint32     `xml:"count,attr,omitempty"`
	M         *CTMissing  `xml:"m"`
	N         *CTNumber   `xml:"n"`
	B         *CTBoolean  `xml:"b"`
	E         *CTError    `xml:"e"`
	S         *CTString   `xml:"s"`
	D         *CTDateTime `xml:"d"`
}

// CTPivotCacheRecords ...
type CTPivotCacheRecords struct {
	CountAttr *Uint32          `xml:"count,attr,omitempty"`
	R         []*CTRecord      `xml:"r"`
	ExtLst    *CTExtensionList `xml:"extLst"`
}

// CTRecord ...
type CTRecord struct {
	M *CTMissing  `xml:"m"`
	N *CTNumber   `xml:"n"`
	B *CTBoolean  `xml:"b"`
	E *CTError    `xml:"e"`
	S *CTString   `xml:"s"`
	D *CTDateTime `xml:"d"`
	X *CTIndex    `xml:"x"`
}

// CTPCDKPIs ...
type CTPCDKPIs struct {
	CountAttr *Uint32     `xml:"count,attr,omitempty"`
	Kpi       []*CTPCDKPI `xml:"kpi"`
}

// CTPCDKPI ...
type CTPCDKPI struct {
	UniqueNameAttr    string `xml:"uniqueName,attr"`
	CaptionAttr       string `xml:"caption,attr,omitempty"`
	DisplayFolderAttr string `xml:"displayFolder,attr,omitempty"`
	MeasureGroupAttr  string `xml:"measureGroup,attr,omitempty"`
	ParentAttr        string `xml:"parent,attr,omitempty"`
	ValueAttr         string `xml:"value,attr"`
	GoalAttr          string `xml:"goal,attr,omitempty"`
	StatusAttr        string `xml:"status,attr,omitempty"`
	TrendAttr         string `xml:"trend,attr,omitempty"`
	WeightAttr        string `xml:"weight,attr,omitempty"`
	TimeAttr          string `xml:"time,attr,omitempty"`
}

// CTCacheHierarchies ...
type CTCacheHierarchies struct {
	CountAttr      *Uint32             `xml:"count,attr,omitempty"`
	CacheHierarchy []*CTCacheHierarchy `xml:"cacheHierarchy"`
}

// CTCacheHierarchy ...
type CTCacheHierarchy struct {
	UniqueNameAttr              string           `xml:"uniqueName,attr"`
	CaptionAttr                 string           `xml:"caption,attr,omitempty"`
	MeasureAttr                 bool             `xml:"measure,attr,omitempty"`
	SetAttr                     bool             `xml:"set,attr,omitempty"`
	ParentSetAttr               *Uint32          `xml:"parentSet,attr,omitempty"`
	IconSetAttr                 int              `xml:"iconSet,attr,omitempty"`
	AttributeAttr               bool             `xml:"attribute,attr,omitempty"`
	TimeAttr                    bool             `xml:"time,attr,omitempty"`
	KeyAttributeAttr            bool             `xml:"keyAttribute,attr,omitempty"`
	DefaultMemberUniqueNameAttr string           `xml:"defaultMemberUniqueName,attr,omitempty"`
	AllUniqueNameAttr           string           `xml:"allUniqueName,attr,omitempty"`
	AllCaptionAttr              string           `xml:"allCaption,attr,omitempty"`
	DimensionUniqueNameAttr     string           `xml:"dimensionUniqueName,attr,omitempty"`
	DisplayFolderAttr           string           `xml:"displayFolder,attr,omitempty"`
	MeasureGroupAttr            string           `xml:"measureGroup,attr,omitempty"`
	MeasuresAttr                bool             `xml:"measures,attr,omitempty"`
	CountAttr                   *Uint32          `xml:"count,attr"`
	OneFieldAttr                bool             `xml:"oneField,attr,omitempty"`
	MemberValueDatatypeAttr     *Uint16          `xml:"memberValueDatatype,attr,omitempty"`
	UnbalancedAttr              bool             `xml:"unbalanced,attr,omitempty"`
	UnbalancedGroupAttr         bool             `xml:"unbalancedGroup,attr,omitempty"`
	HiddenAttr                  bool             `xml:"hidden,attr,omitempty"`
	FieldsUsage                 *CTFieldsUsage   `xml:"fieldsUsage"`
	GroupLevels                 *CTGroupLevels   `xml:"groupLevels"`
	ExtLst                      *CTExtensionList `xml:"extLst"`
}

// CTFieldsUsage ...
type CTFieldsUsage struct {
	CountAttr  *Uint32         `xml:"count,attr,omitempty"`
	FieldUsage []*CTFieldUsage `xml:"fieldUsage"`
}

// CTFieldUsage ...
type CTFieldUsage struct {
	XAttr int `xml:"x,attr"`
}

// CTGroupLevels ...
type CTGroupLevels struct {
	CountAttr  *Uint32         `xml:"count,attr,omitempty"`
	GroupLevel []*CTGroupLevel `xml:"groupLevel"`
}

// CTGroupLevel ...
type CTGroupLevel struct {
	UniqueNameAttr   string           `xml:"uniqueName,attr"`
	CaptionAttr      string           `xml:"caption,attr"`
	UserAttr         bool             `xml:"user,attr,omitempty"`
	CustomRollUpAttr bool             `xml:"customRollUp,attr,omitempty"`
	Groups           *CTGroups        `xml:"groups"`
	ExtLst           *CTExtensionList `xml:"extLst"`
}

// CTGroups ...
type CTGroups struct {
	CountAttr *Uint32         `xml:"count,attr,omitempty"`
	Group     []*CTLevelGroup `xml:"group"`
}

// CTLevelGroup ...
type CTLevelGroup struct {
	NameAttr         string          `xml:"name,attr"`
	UniqueNameAttr   string          `xml:"uniqueName,attr"`
	CaptionAttr      string          `xml:"caption,attr"`
	UniqueParentAttr string          `xml:"uniqueParent,attr,omitempty"`
	IdAttr           int             `xml:"id,attr,omitempty"`
	GroupMembers     *CTGroupMembers `xml:"groupMembers"`
}

// CTGroupMembers ...
type CTGroupMembers struct {
	CountAttr   *Uint32          `xml:"count,attr,omitempty"`
	GroupMember []*CTGroupMember `xml:"groupMember"`
}

// CTGroupMember ...
type CTGroupMember struct {
	UniqueNameAttr string `xml:"uniqueName,attr"`
	GroupAttr      bool   `xml:"group,attr,omitempty"`
}

// CTTupleCache ...
type CTTupleCache struct {
	Entries       *CTPCDSDTCEntries  `xml:"entries"`
	Sets          *CTSets            `xml:"sets"`
	QueryCache    *CTQueryCache      `xml:"queryCache"`
	ServerFormats []*CTServerFormats `xml:"serverFormats"`
	ExtLst        *CTExtensionList   `xml:"extLst"`
}

// CTServerFormat ...
type CTServerFormat struct {
	CultureAttr string `xml:"culture,attr,omitempty"`
	FormatAttr  string `xml:"format,attr,omitempty"`
}

// CTServerFormats ...
type CTServerFormats struct {
	CountAttr    *Uint32           `xml:"count,attr,omitempty"`
	ServerFormat []*CTServerFormat `xml:"serverFormat"`
}

// CTPCDSDTCEntries ...
type CTPCDSDTCEntries struct {
	CountAttr *Uint32    `xml:"count,attr,omitempty"`
	M         *CTMissing `xml:"m"`
	N         *CTNumber  `xml:"n"`
	E         *CTError   `xml:"e"`
	S         *CTString  `xml:"s"`
}

// CTTuples ...
type CTTuples struct {
	CAttr *Uint32    `xml:"c,attr,omitempty"`
	Tpl   []*CTTuple `xml:"tpl"`
}

// CTTuple ...
type CTTuple struct {
	FldAttr  *Uint32 `xml:"fld,attr,omitempty"`
	HierAttr *Uint32 `xml:"hier,attr,omitempty"`
	ItemAttr *Uint32 `xml:"item,attr"`
}

// CTSets ...
type CTSets struct {
	CountAttr *Uint32  `xml:"count,attr,omitempty"`
	Set       []*CTSet `xml:"set"`
}

// CTSet ...
type CTSet struct {
	CountAttr         *Uint32     `xml:"count,attr,omitempty"`
	MaxRankAttr       int         `xml:"maxRank,attr"`
	SetDefinitionAttr string      `xml:"setDefinition,attr"`
	SortTypeAttr      string      `xml:"sortType,attr,omitempty"`
	QueryFailedAttr   bool        `xml:"queryFailed,attr,omitempty"`
	Tpls              []*CTTuples `xml:"tpls"`
	SortByTuple       *CTTuples   `xml:"sortByTuple"`
}

// STSortType ...
type STSortType string

// CTQueryCache ...
type CTQueryCache struct {
	CountAttr *Uint32    `xml:"count,attr,omitempty"`
	Query     []*CTQuery `xml:"query"`
}

// CTQuery ...
type CTQuery struct {
	MdxAttr string    `xml:"mdx,attr"`
	Tpls    *CTTuples `xml:"tpls"`
}

// CTCalculatedItems ...
type CTCalculatedItems struct {
	CountAttr      *Uint32             `xml:"count,attr,omitempty"`
	CalculatedItem []*CTCalculatedItem `xml:"calculatedItem"`
}

// CTCalculatedItem ...
type CTCalculatedItem struct {
	FieldAttr   *Uint32          `xml:"field,attr,omitempty"`
	FormulaAttr string           `xml:"formula,attr,omitempty"`
	PivotArea   *CTPivotArea     `xml:"pivotArea"`
	ExtLst      *CTExtensionList `xml:"extLst"`
}

// CTCalculatedMembers ...
type CTCalculatedMembers struct {
	CountAttr        *Uint32               `xml:"count,attr,omitempty"`
	CalculatedMember []*CTCalculatedMember `xml:"calculatedMember"`
}

// CTCalculatedMember ...
type CTCalculatedMember struct {
	NameAttr       string           `xml:"name,attr"`
	MdxAttr        string           `xml:"mdx,attr"`
	MemberNameAttr string           `xml:"memberName,attr,omitempty"`
	HierarchyAttr  string           `xml:"hierarchy,attr,omitempty"`
	ParentAttr     string           `xml:"parent,attr,omitempty"`
	SolveOrderAttr int              `xml:"solveOrder,attr,omitempty"`
	SetAttr        bool             `xml:"set,attr,omitempty"`
	ExtLst         *CTExtensionList `xml:"extLst"`
}

// CTpivotTableDefinition ...
type CTpivotTableDefinition struct {
	AGAutoFormat               *AGAutoFormat
	NameAttr                   string                   `xml:"name,attr"`
	CacheIdAttr                *Uint32                  `xml:"cacheId,attr"`
	DataOnRowsAttr             bool                     `xml:"dataOnRows,attr,omitempty"`
	DataPositionAttr           *Uint32                  `xml:"dataPosition,attr,omitempty"`
	DataCaptionAttr            string                   `xml:"dataCaption,attr"`
	GrandTotalCaptionAttr      string                   `xml:"grandTotalCaption,attr,omitempty"`
	ErrorCaptionAttr           string                   `xml:"errorCaption,attr,omitempty"`
	ShowErrorAttr              bool                     `xml:"showError,attr,omitempty"`
	MissingCaptionAttr         string                   `xml:"missingCaption,attr,omitempty"`
	ShowMissingAttr            bool                     `xml:"showMissing,attr,omitempty"`
	PageStyleAttr              string                   `xml:"pageStyle,attr,omitempty"`
	PivotTableStyleAttr        string                   `xml:"pivotTableStyle,attr,omitempty"`
	VacatedStyleAttr           string                   `xml:"vacatedStyle,attr,omitempty"`
	TagAttr                    string                   `xml:"tag,attr,omitempty"`
	UpdatedVersionAttr         byte                     `xml:"updatedVersion,attr,omitempty"`
	MinRefreshableVersionAttr  byte                     `xml:"minRefreshableVersion,attr,omitempty"`
	AsteriskTotalsAttr         bool                     `xml:"asteriskTotals,attr,omitempty"`
	ShowItemsAttr              bool                     `xml:"showItems,attr,omitempty"`
	EditDataAttr               bool                     `xml:"editData,attr,omitempty"`
	DisableFieldListAttr       bool                     `xml:"disableFieldList,attr,omitempty"`
	ShowCalcMbrsAttr           bool                     `xml:"showCalcMbrs,attr,omitempty"`
	VisualTotalsAttr           bool                     `xml:"visualTotals,attr,omitempty"`
	ShowMultipleLabelAttr      bool                     `xml:"showMultipleLabel,attr,omitempty"`
	ShowDataDropDownAttr       bool                     `xml:"showDataDropDown,attr,omitempty"`
	ShowDrillAttr              bool                     `xml:"showDrill,attr,omitempty"`
	PrintDrillAttr             bool                     `xml:"printDrill,attr,omitempty"`
	ShowMemberPropertyTipsAttr bool                     `xml:"showMemberPropertyTips,attr,omitempty"`
	ShowDataTipsAttr           bool                     `xml:"showDataTips,attr,omitempty"`
	EnableWizardAttr           bool                     `xml:"enableWizard,attr,omitempty"`
	EnableDrillAttr            bool                     `xml:"enableDrill,attr,omitempty"`
	EnableFieldPropertiesAttr  bool                     `xml:"enableFieldProperties,attr,omitempty"`
	PreserveFormattingAttr     bool                     `xml:"preserveFormatting,attr,omitempty"`
	UseAutoFormattingAttr      bool                     `xml:"useAutoFormatting,attr,omitempty"`
	PageWrapAttr               *Uint32                  `xml:"pageWrap,attr,omitempty"`
	PageOverThenDownAttr       bool                     `xml:"pageOverThenDown,attr,omitempty"`
	SubtotalHiddenItemsAttr    bool                     `xml:"subtotalHiddenItems,attr,omitempty"`
	RowGrandTotalsAttr         bool                     `xml:"rowGrandTotals,attr,omitempty"`
	ColGrandTotalsAttr         bool                     `xml:"colGrandTotals,attr,omitempty"`
	FieldPrintTitlesAttr       bool                     `xml:"fieldPrintTitles,attr,omitempty"`
	ItemPrintTitlesAttr        bool                     `xml:"itemPrintTitles,attr,omitempty"`
	MergeItemAttr              bool                     `xml:"mergeItem,attr,omitempty"`
	ShowDropZonesAttr          bool                     `xml:"showDropZones,attr,omitempty"`
	CreatedVersionAttr         byte                     `xml:"createdVersion,attr,omitempty"`
	IndentAttr                 *Uint32                  `xml:"indent,attr,omitempty"`
	ShowEmptyRowAttr           bool                     `xml:"showEmptyRow,attr,omitempty"`
	ShowEmptyColAttr           bool                     `xml:"showEmptyCol,attr,omitempty"`
	ShowHeadersAttr            bool                     `xml:"showHeaders,attr,omitempty"`
	CompactAttr                bool                     `xml:"compact,attr,omitempty"`
	OutlineAttr                bool                     `xml:"outline,attr,omitempty"`
	OutlineDataAttr            bool                     `xml:"outlineData,attr,omitempty"`
	CompactDataAttr            bool                     `xml:"compactData,attr,omitempty"`
	PublishedAttr              bool                     `xml:"published,attr,omitempty"`
	GridDropZonesAttr          bool                     `xml:"gridDropZones,attr,omitempty"`
	ImmersiveAttr              bool                     `xml:"immersive,attr,omitempty"`
	MultipleFieldFiltersAttr   bool                     `xml:"multipleFieldFilters,attr,omitempty"`
	ChartFormatAttr            *Uint32                  `xml:"chartFormat,attr,omitempty"`
	RowHeaderCaptionAttr       string                   `xml:"rowHeaderCaption,attr,omitempty"`
	ColHeaderCaptionAttr       string                   `xml:"colHeaderCaption,attr,omitempty"`
	FieldListSortAscendingAttr bool                     `xml:"fieldListSortAscending,attr,omitempty"`
	MdxSubqueriesAttr          bool                     `xml:"mdxSubqueries,attr,omitempty"`
	CustomListSortAttr         bool                     `xml:"customListSort,attr,omitempty"`
	Location                   *CTLocation              `xml:"location"`
	PivotFields                *CTPivotFields           `xml:"pivotFields"`
	RowFields                  *CTRowFields             `xml:"rowFields"`
	RowItems                   *CTrowItems              `xml:"rowItems"`
	ColFields                  *CTColFields             `xml:"colFields"`
	ColItems                   *CTcolItems              `xml:"colItems"`
	PageFields                 *CTPageFields            `xml:"pageFields"`
	DataFields                 *CTDataFields            `xml:"dataFields"`
	Formats                    *CTFormats               `xml:"formats"`
	ConditionalFormats         *CTConditionalFormats    `xml:"conditionalFormats"`
	ChartFormats               *CTChartFormats          `xml:"chartFormats"`
	PivotHierarchies           *CTPivotHierarchies      `xml:"pivotHierarchies"`
	PivotTableStyleInfo        []*CTPivotTableStyle     `xml:"pivotTableStyleInfo"`
	Filters                    []*CTPivotFilters        `xml:"filters"`
	RowHierarchiesUsage        []*CTRowHierarchiesUsage `xml:"rowHierarchiesUsage"`
	ColHierarchiesUsage        []*CTColHierarchiesUsage `xml:"colHierarchiesUsage"`
	ExtLst                     *CTExtensionList         `xml:"extLst"`
}

// CTLocation ...
type CTLocation struct {
	RefAttr            string  `xml:"ref,attr"`
	FirstHeaderRowAttr *Uint32 `xml:"firstHeaderRow,attr"`
	FirstDataRowAttr   *Uint32 `xml:"firstDataRow,attr"`
	FirstDataColAttr   *Uint32 `xml:"firstDataCol,attr"`
	RowPageCountAttr   *Uint32 `xml:"rowPageCount,attr,omitempty"`
	ColPageCountAttr   *Uint32 `xml:"colPageCount,attr,omitempty"`
}

// CTPivotFields ...
type CTPivotFields struct {
	CountAttr  *Uint32         `xml:"count,attr,omitempty"`
	PivotField []*CTPivotField `xml:"pivotField"`
}

// CTPivotField ...
type CTPivotField struct {
	NameAttr                         string           `xml:"name,attr,omitempty"`
	AxisAttr                         string           `xml:"axis,attr,omitempty"`
	DataFieldAttr                    bool             `xml:"dataField,attr,omitempty"`
	SubtotalCaptionAttr              string           `xml:"subtotalCaption,attr,omitempty"`
	ShowDropDownsAttr                bool             `xml:"showDropDowns,attr,omitempty"`
	HiddenLevelAttr                  bool             `xml:"hiddenLevel,attr,omitempty"`
	UniqueMemberPropertyAttr         string           `xml:"uniqueMemberProperty,attr,omitempty"`
	CompactAttr                      bool             `xml:"compact,attr,omitempty"`
	AllDrilledAttr                   bool             `xml:"allDrilled,attr,omitempty"`
	NumFmtIdAttr                     *Uint32          `xml:"numFmtId,attr,omitempty"`
	OutlineAttr                      bool             `xml:"outline,attr,omitempty"`
	SubtotalTopAttr                  bool             `xml:"subtotalTop,attr,omitempty"`
	DragToRowAttr                    bool             `xml:"dragToRow,attr,omitempty"`
	DragToColAttr                    bool             `xml:"dragToCol,attr,omitempty"`
	MultipleItemSelectionAllowedAttr bool             `xml:"multipleItemSelectionAllowed,attr,omitempty"`
	DragToPageAttr                   bool             `xml:"dragToPage,attr,omitempty"`
	DragToDataAttr                   bool             `xml:"dragToData,attr,omitempty"`
	DragOffAttr                      bool             `xml:"dragOff,attr,omitempty"`
	ShowAllAttr                      bool             `xml:"showAll,attr,omitempty"`
	InsertBlankRowAttr               bool             `xml:"insertBlankRow,attr,omitempty"`
	ServerFieldAttr                  bool             `xml:"serverField,attr,omitempty"`
	InsertPageBreakAttr              bool             `xml:"insertPageBreak,attr,omitempty"`
	AutoShowAttr                     bool             `xml:"autoShow,attr,omitempty"`
	TopAutoShowAttr                  bool             `xml:"topAutoShow,attr,omitempty"`
	HideNewItemsAttr                 bool             `xml:"hideNewItems,attr,omitempty"`
	MeasureFilterAttr                bool             `xml:"measureFilter,attr,omitempty"`
	IncludeNewItemsInFilterAttr      bool             `xml:"includeNewItemsInFilter,attr,omitempty"`
	ItemPageCountAttr                *Uint32          `xml:"itemPageCount,attr,omitempty"`
	SortTypeAttr                     string           `xml:"sortType,attr,omitempty"`
	DataSourceSortAttr               bool             `xml:"dataSourceSort,attr,omitempty"`
	NonAutoSortDefaultAttr           bool             `xml:"nonAutoSortDefault,attr,omitempty"`
	RankByAttr                       *Uint32          `xml:"rankBy,attr,omitempty"`
	DefaultSubtotalAttr              bool             `xml:"defaultSubtotal,attr,omitempty"`
	SumSubtotalAttr                  bool             `xml:"sumSubtotal,attr,omitempty"`
	CountASubtotalAttr               bool             `xml:"countASubtotal,attr,omitempty"`
	AvgSubtotalAttr                  bool             `xml:"avgSubtotal,attr,omitempty"`
	MaxSubtotalAttr                  bool             `xml:"maxSubtotal,attr,omitempty"`
	MinSubtotalAttr                  bool             `xml:"minSubtotal,attr,omitempty"`
	ProductSubtotalAttr              bool             `xml:"productSubtotal,attr,omitempty"`
	CountSubtotalAttr                bool             `xml:"countSubtotal,attr,omitempty"`
	StdDevSubtotalAttr               bool             `xml:"stdDevSubtotal,attr,omitempty"`
	StdDevPSubtotalAttr              bool             `xml:"stdDevPSubtotal,attr,omitempty"`
	VarSubtotalAttr                  bool             `xml:"varSubtotal,attr,omitempty"`
	VarPSubtotalAttr                 bool             `xml:"varPSubtotal,attr,omitempty"`
	ShowPropCellAttr                 bool             `xml:"showPropCell,attr,omitempty"`
	ShowPropTipAttr                  bool             `xml:"showPropTip,attr,omitempty"`
	ShowPropAsCaptionAttr            bool             `xml:"showPropAsCaption,attr,omitempty"`
	DefaultAttributeDrillStateAttr   bool             `xml:"defaultAttributeDrillState,attr,omitempty"`
	Items                            *CTItems         `xml:"items"`
	AutoSortScope                    *CTAutoSortScope `xml:"autoSortScope"`
	ExtLst                           *CTExtensionList `xml:"extLst"`
}

// CTAutoSortScope ...
type CTAutoSortScope struct {
	PivotArea *CTPivotArea `xml:"pivotArea"`
}

// CTItems ...
type CTItems struct {
	CountAttr *Uint32   `xml:"count,attr,omitempty"`
	Item      []*CTItem `xml:"item"`
}

// CTItem ...
type CTItem struct {
	NAttr  string  `xml:"n,attr,omitempty"`
	TAttr  string  `xml:"t,attr,omitempty"`
	HAttr  bool    `xml:"h,attr,omitempty"`
	SAttr  bool    `xml:"s,attr,omitempty"`
	SdAttr bool    `xml:"sd,attr,omitempty"`
	FAttr  bool    `xml:"f,attr,omitempty"`
	MAttr  bool    `xml:"m,attr,omitempty"`
	CAttr  bool    `xml:"c,attr,omitempty"`
	XAttr  *Uint32 `xml:"x,attr,omitempty"`
	DAttr  bool    `xml:"d,attr,omitempty"`
	EAttr  bool    `xml:"e,attr,omitempty"`
}

// CTPageFields ...
type CTPageFields struct {
	CountAttr *Uint32        `xml:"count,attr,omitempty"`
	PageField []*CTPageField `xml:"pageField"`
}

// CTPageField ...
type CTPageField struct {
	FldAttr  int              `xml:"fld,attr"`
	ItemAttr *Uint32          `xml:"item,attr,omitempty"`
	HierAttr int              `xml:"hier,attr,omitempty"`
	NameAttr string           `xml:"name,attr,omitempty"`
	CapAttr  string           `xml:"cap,attr,omitempty"`
	ExtLst   *CTExtensionList `xml:"extLst"`
}

// CTDataFields ...
type CTDataFields struct {
	CountAttr *Uint32        `xml:"count,attr,omitempty"`
	DataField []*CTDataField `xml:"dataField"`
}

// CTDataField ...
type CTDataField struct {
	NameAttr       string           `xml:"name,attr,omitempty"`
	FldAttr        *Uint32          `xml:"fld,attr"`
	SubtotalAttr   string           `xml:"subtotal,attr,omitempty"`
	ShowDataAsAttr string           `xml:"showDataAs,attr,omitempty"`
	BaseFieldAttr  int              `xml:"baseField,attr,omitempty"`
	BaseItemAttr   *Uint32          `xml:"baseItem,attr,omitempty"`
	NumFmtIdAttr   *Uint32          `xml:"numFmtId,attr,omitempty"`
	ExtLst         *CTExtensionList `xml:"extLst"`
}

// CTrowItems ...
type CTrowItems struct {
	CountAttr *Uint32 `xml:"count,attr,omitempty"`
	I         []*CTI  `xml:"i"`
}

// CTcolItems ...
type CTcolItems struct {
	CountAttr *Uint32 `xml:"count,attr,omitempty"`
	I         []*CTI  `xml:"i"`
}

// CTI ...
type CTI struct {
	TAttr string  `xml:"t,attr,omitempty"`
	RAttr *Uint32 `xml:"r,attr,omitempty"`
	IAttr *Uint32 `xml:"i,attr,omitempty"`
	X     []*CTX  `xml:"x"`
}

// CTX ...
type CTX struct {
	VAttr int `xml:"v,attr,omitempty"`
}

// CTRowFields ...
type CTRowFields struct {
	CountAttr *Uint32    `xml:"count,attr,omitempty"`
	Field     []*CTField `xml:"field"`
}

// CTColFields ...
type CTColFields struct {
	CountAttr *Uint32    `xml:"count,attr,omitempty"`
	Field     []*CTField `xml:"field"`
}

// CTField ...
type CTField struct {
	XAttr int `xml:"x,attr"`
}

// CTFormats ...
type CTFormats struct {
	CountAttr *Uint32     `xml:"count,attr,omitempty"`
	Format    []*CTFormat `xml:"format"`
}

// CTFormat ...
type CTFormat struct {
	ActionAttr string           `xml:"action,attr,omitempty"`
	DxfIdAttr  *Uint32          `xml:"dxfId,attr,omitempty"`
	PivotArea  *CTPivotArea     `xml:"pivotArea"`
	ExtLst     *CTExtensionList `xml:"extLst"`
}

// CTConditionalFormats ...
type CTConditionalFormats struct {
	CountAttr         *Uint32                `xml:"count,attr,omitempty"`
	ConditionalFormat []*CTConditionalFormat `xml:"conditionalFormat"`
}

// CTConditionalFormat ...
type CTConditionalFormat struct {
	ScopeAttr    string           `xml:"scope,attr,omitempty"`
	TypeAttr     string           `xml:"type,attr,omitempty"`
	PriorityAttr *Uint32          `xml:"priority,attr"`
	PivotAreas   *CTPivotAreas    `xml:"pivotAreas"`
	ExtLst       *CTExtensionList `xml:"extLst"`
}

// CTPivotAreas ...
type CTPivotAreas struct {
	CountAttr *Uint32        `xml:"count,attr,omitempty"`
	PivotArea []*CTPivotArea `xml:"pivotArea"`
}

// STScope ...
type STScope string

// STType ...
type STType string

// CTChartFormats ...
type CTChartFormats struct {
	CountAttr   *Uint32          `xml:"count,attr,omitempty"`
	ChartFormat []*CTChartFormat `xml:"chartFormat"`
}

// CTChartFormat ...
type CTChartFormat struct {
	ChartAttr  *Uint32      `xml:"chart,attr"`
	FormatAttr *Uint32      `xml:"format,attr"`
	SeriesAttr bool         `xml:"series,attr,omitempty"`
	PivotArea  *CTPivotArea `xml:"pivotArea"`
}

// CTPivotHierarchies ...
type CTPivotHierarchies struct {
	CountAttr      *Uint32             `xml:"count,attr,omitempty"`
	PivotHierarchy []*CTPivotHierarchy `xml:"pivotHierarchy"`
}

// CTPivotHierarchy ...
type CTPivotHierarchy struct {
	OutlineAttr                      bool                `xml:"outline,attr,omitempty"`
	MultipleItemSelectionAllowedAttr bool                `xml:"multipleItemSelectionAllowed,attr,omitempty"`
	SubtotalTopAttr                  bool                `xml:"subtotalTop,attr,omitempty"`
	ShowInFieldListAttr              bool                `xml:"showInFieldList,attr,omitempty"`
	DragToRowAttr                    bool                `xml:"dragToRow,attr,omitempty"`
	DragToColAttr                    bool                `xml:"dragToCol,attr,omitempty"`
	DragToPageAttr                   bool                `xml:"dragToPage,attr,omitempty"`
	DragToDataAttr                   bool                `xml:"dragToData,attr,omitempty"`
	DragOffAttr                      bool                `xml:"dragOff,attr,omitempty"`
	IncludeNewItemsInFilterAttr      bool                `xml:"includeNewItemsInFilter,attr,omitempty"`
	CaptionAttr                      string              `xml:"caption,attr,omitempty"`
	Mps                              *CTMemberProperties `xml:"mps"`
	Members                          []*CTMembers        `xml:"members"`
	ExtLst                           *CTExtensionList    `xml:"extLst"`
}

// CTRowHierarchiesUsage ...
type CTRowHierarchiesUsage struct {
	CountAttr         *Uint32             `xml:"count,attr,omitempty"`
	RowHierarchyUsage []*CTHierarchyUsage `xml:"rowHierarchyUsage"`
}

// CTColHierarchiesUsage ...
type CTColHierarchiesUsage struct {
	CountAttr         *Uint32             `xml:"count,attr,omitempty"`
	ColHierarchyUsage []*CTHierarchyUsage `xml:"colHierarchyUsage"`
}

// CTHierarchyUsage ...
type CTHierarchyUsage struct {
	HierarchyUsageAttr int `xml:"hierarchyUsage,attr"`
}

// CTMemberProperties ...
type CTMemberProperties struct {
	CountAttr *Uint32             `xml:"count,attr,omitempty"`
	Mp        []*CTMemberProperty `xml:"mp"`
}

// CTMemberProperty ...
type CTMemberProperty struct {
	NameAttr          string  `xml:"name,attr,omitempty"`
	ShowCellAttr      bool    `xml:"showCell,attr,omitempty"`
	ShowTipAttr       bool    `xml:"showTip,attr,omitempty"`
	ShowAsCaptionAttr bool    `xml:"showAsCaption,attr,omitempty"`
	NameLenAttr       *Uint32 `xml:"nameLen,attr,omitempty"`
	PPosAttr          *Uint32 `xml:"pPos,attr,omitempty"`
	PLenAttr          *Uint32 `xml:"pLen,attr,omitempty"`
	LevelAttr         *Uint32 `xml:"level,attr,omitempty"`
	FieldAttr         *Uint32 `xml:"field,attr"`
}

// CTMembers ...
type CTMembers struct {
	CountAttr *Uint32     `xml:"count,attr,omitempty"`
	LevelAttr *Uint32     `xml:"level,attr,omitempty"`
	Member    []*CTMember `xml:"member"`
}

// CTMember ...
type CTMember struct {
	NameAttr string `xml:"name,attr"`
}

// CTDimensions ...
type CTDimensions struct {
	CountAttr *Uint32             `xml:"count,attr,omitempty"`
	Dimension []*CTPivotDimension `xml:"dimension"`
}

// CTPivotDimension ...
type CTPivotDimension struct {
	MeasureAttr    bool   `xml:"measure,attr,omitempty"`
	NameAttr       string `xml:"name,attr"`
	UniqueNameAttr string `xml:"uniqueName,attr"`
	CaptionAttr    string `xml:"caption,attr"`
}

// CTMeasureGroups ...
type CTMeasureGroups struct {
	CountAttr    *Uint32           `xml:"count,attr,omitempty"`
	MeasureGroup []*CTMeasureGroup `xml:"measureGroup"`
}

// CTMeasureDimensionMaps ...
type CTMeasureDimensionMaps struct {
	CountAttr *Uint32                  `xml:"count,attr,omitempty"`
	Map       []*CTMeasureDimensionMap `xml:"map"`
}

// CTMeasureGroup ...
type CTMeasureGroup struct {
	NameAttr    string `xml:"name,attr"`
	CaptionAttr string `xml:"caption,attr"`
}

// CTMeasureDimensionMap ...
type CTMeasureDimensionMap struct {
	MeasureGroupAttr *Uint32 `xml:"measureGroup,attr,omitempty"`
	DimensionAttr    *Uint32 `xml:"dimension,attr,omitempty"`
}

// CTPivotTableStyle ...
type CTPivotTableStyle struct {
	NameAttr           string `xml:"name,attr,omitempty"`
	ShowRowHeadersAttr bool   `xml:"showRowHeaders,attr,omitempty"`
	ShowColHeadersAttr bool   `xml:"showColHeaders,attr,omitempty"`
	ShowRowStripesAttr bool   `xml:"showRowStripes,attr,omitempty"`
	ShowColStripesAttr bool   `xml:"showColStripes,attr,omitempty"`
	ShowLastColumnAttr bool   `xml:"showLastColumn,attr,omitempty"`
}

// CTPivotFilters ...
type CTPivotFilters struct {
	CountAttr *Uint32          `xml:"count,attr,omitempty"`
	Filter    []*CTPivotFilter `xml:"filter"`
}

// CTPivotFilter ...
type CTPivotFilter struct {
	FldAttr          *Uint32          `xml:"fld,attr"`
	MpFldAttr        *Uint32          `xml:"mpFld,attr,omitempty"`
	TypeAttr         string           `xml:"type,attr"`
	EvalOrderAttr    int              `xml:"evalOrder,attr,omitempty"`
	IdAttr           *Uint32          `xml:"id,attr"`
	IMeasureHierAttr *Uint32          `xml:"iMeasureHier,attr,omitempty"`
	IMeasureFldAttr  *Uint32          `xml:"iMeasureFld,attr,omitempty"`
	NameAttr         string           `xml:"name,attr,omitempty"`
	DescriptionAttr  string           `xml:"description,attr,omitempty"`
	StringValue1Attr string           `xml:"stringValue1,attr,omitempty"`
	StringValue2Attr string           `xml:"stringValue2,attr,omitempty"`
	AutoFilter       []*CTAutoFilter  `xml:"autoFilter"`
	ExtLst           *CTExtensionList `xml:"extLst"`
}

// STShowDataAs ...
type STShowDataAs string

// STItemType ...
type STItemType string

// STFormatAction ...
type STFormatAction string

// STFieldSortType ...
type STFieldSortType string

// STPivotFilterType ...
type STPivotFilterType string

// CTPivotArea ...
type CTPivotArea struct {
	FieldAttr                       int                    `xml:"field,attr,omitempty"`
	TypeAttr                        string                 `xml:"type,attr,omitempty"`
	DataOnlyAttr                    bool                   `xml:"dataOnly,attr,omitempty"`
	LabelOnlyAttr                   bool                   `xml:"labelOnly,attr,omitempty"`
	GrandRowAttr                    bool                   `xml:"grandRow,attr,omitempty"`
	GrandColAttr                    bool                   `xml:"grandCol,attr,omitempty"`
	CacheIndexAttr                  bool                   `xml:"cacheIndex,attr,omitempty"`
	OutlineAttr                     bool                   `xml:"outline,attr,omitempty"`
	OffsetAttr                      string                 `xml:"offset,attr,omitempty"`
	CollapsedLevelsAreSubtotalsAttr bool                   `xml:"collapsedLevelsAreSubtotals,attr,omitempty"`
	AxisAttr                        string                 `xml:"axis,attr,omitempty"`
	FieldPositionAttr               *Uint32                `xml:"fieldPosition,attr,omitempty"`
	References                      *CTPivotAreaReferences `xml:"references"`
	ExtLst                          *CTExtensionList       `xml:"extLst"`
}

// STPivotAreaType ...
type STPivotAreaType string

// CTPivotAreaReferences ...
type CTPivotAreaReferences struct {
	CountAttr *Uint32                 `xml:"count,attr,omitempty"`
	Reference []*CTPivotAreaReference `xml:"reference"`
}

// CTPivotAreaReference ...
type CTPivotAreaReference struct {
	FieldAttr           *Uint32          `xml:"field,attr,omitempty"`
	CountAttr           *Uint32          `xml:"count,attr,omitempty"`
	SelectedAttr        bool             `xml:"selected,attr,omitempty"`
	ByPositionAttr      bool             `xml:"byPosition,attr,omitempty"`
	RelativeAttr        bool             `xml:"relative,attr,omitempty"`
	DefaultSubtotalAttr bool             `xml:"defaultSubtotal,attr,omitempty"`
	SumSubtotalAttr     bool             `xml:"sumSubtotal,attr,omitempty"`
	CountASubtotalAttr  bool             `xml:"countASubtotal,attr,omitempty"`
	AvgSubtotalAttr     bool             `xml:"avgSubtotal,attr,omitempty"`
	MaxSubtotalAttr     bool             `xml:"maxSubtotal,attr,omitempty"`
	MinSubtotalAttr     bool             `xml:"minSubtotal,attr,omitempty"`
	ProductSubtotalAttr bool             `xml:"productSubtotal,attr,omitempty"`
	CountSubtotalAttr   bool             `xml:"countSubtotal,attr,omitempty"`
	StdDevSubtotalAttr  bool             `xml:"stdDevSubtotal,attr,omitempty"`
	StdDevPSubtotalAttr bool             `xml:"stdDevPSubtotal,attr,omitempty"`
	VarSubtotalAttr     bool             `xml:"varSubtotal,attr,omitempty"`
	VarPSubtotalAttr    bool             `xml:"varPSubtotal,attr,omitempty"`
	X                   []*CTIndex       `xml:"x"`
	ExtLst              *CTExtensionList `xml:"extLst"`
}

// CTIndex ...
type CTIndex struct {
	VAttr *Uint32 `xml:"v,attr"`
}

// STAxis ...
type STAxis string

// QueryTable ...
type QueryTable *CTQueryTable

// CTQueryTable ...
type CTQueryTable struct {
	AGAutoFormat               *AGAutoFormat
	NameAttr                   string                 `xml:"name,attr"`
	HeadersAttr                bool                   `xml:"headers,attr,omitempty"`
	RowNumbersAttr             bool                   `xml:"rowNumbers,attr,omitempty"`
	DisableRefreshAttr         bool                   `xml:"disableRefresh,attr,omitempty"`
	BackgroundRefreshAttr      bool                   `xml:"backgroundRefresh,attr,omitempty"`
	FirstBackgroundRefreshAttr bool                   `xml:"firstBackgroundRefresh,attr,omitempty"`
	RefreshOnLoadAttr          bool                   `xml:"refreshOnLoad,attr,omitempty"`
	GrowShrinkTypeAttr         string                 `xml:"growShrinkType,attr,omitempty"`
	FillFormulasAttr           bool                   `xml:"fillFormulas,attr,omitempty"`
	RemoveDataOnSaveAttr       bool                   `xml:"removeDataOnSave,attr,omitempty"`
	DisableEditAttr            bool                   `xml:"disableEdit,attr,omitempty"`
	PreserveFormattingAttr     bool                   `xml:"preserveFormatting,attr,omitempty"`
	AdjustColumnWidthAttr      bool                   `xml:"adjustColumnWidth,attr,omitempty"`
	IntermediateAttr           bool                   `xml:"intermediate,attr,omitempty"`
	ConnectionIdAttr           *Uint32                `xml:"connectionId,attr"`
	QueryTableRefresh          []*CTQueryTableRefresh `xml:"queryTableRefresh"`
	ExtLst                     []*CTExtensionList     `xml:"extLst"`
}

// CTQueryTableRefresh ...
type CTQueryTableRefresh struct {
	PreserveSortFilterLayoutAttr bool                         `xml:"preserveSortFilterLayout,attr,omitempty"`
	FieldIdWrappedAttr           bool                         `xml:"fieldIdWrapped,attr,omitempty"`
	HeadersInLastRefreshAttr     bool                         `xml:"headersInLastRefresh,attr,omitempty"`
	MinimumVersionAttr           byte                         `xml:"minimumVersion,attr,omitempty"`
	NextIdAttr                   *Uint32                      `xml:"nextId,attr,omitempty"`
	UnboundColumnsLeftAttr       *Uint32                      `xml:"unboundColumnsLeft,attr,omitempty"`
	UnboundColumnsRightAttr      *Uint32                      `xml:"unboundColumnsRight,attr,omitempty"`
	QueryTableFields             []*CTQueryTableFields        `xml:"queryTableFields"`
	QueryTableDeletedFields      []*CTQueryTableDeletedFields `xml:"queryTableDeletedFields"`
	SortState                    []*CTSortState               `xml:"sortState"`
	ExtLst                       []*CTExtensionList           `xml:"extLst"`
}

// CTQueryTableDeletedFields ...
type CTQueryTableDeletedFields struct {
	CountAttr    *Uint32           `xml:"count,attr,omitempty"`
	DeletedField []*CTDeletedField `xml:"deletedField"`
}

// CTDeletedField ...
type CTDeletedField struct {
	NameAttr string `xml:"name,attr"`
}

// CTQueryTableFields ...
type CTQueryTableFields struct {
	CountAttr       *Uint32              `xml:"count,attr,omitempty"`
	QueryTableField []*CTQueryTableField `xml:"queryTableField"`
}

// CTQueryTableField ...
type CTQueryTableField struct {
	IdAttr            *Uint32            `xml:"id,attr"`
	NameAttr          string             `xml:"name,attr,omitempty"`
	DataBoundAttr     bool               `xml:"dataBound,attr,omitempty"`
	RowNumbersAttr    bool               `xml:"rowNumbers,attr,omitempty"`
	FillFormulasAttr  bool               `xml:"fillFormulas,attr,omitempty"`
	ClippedAttr       bool               `xml:"clipped,attr,omitempty"`
	TableColumnIdAttr *Uint32            `xml:"tableColumnId,attr,omitempty"`
	ExtLst            []*CTExtensionList `xml:"extLst"`
}

// STGrowShrinkType ...
type STGrowShrinkType string

// Sst ...
type Sst *CTSst

// CTSst ...
type CTSst struct {
	CountAttr       *Uint32          `xml:"count,attr,omitempty"`
	UniqueCountAttr *Uint32          `xml:"uniqueCount,attr,omitempty"`
	Si              []*CTRst         `xml:"si"`
	ExtLst          *CTExtensionList `xml:"extLst"`
}

// STPhoneticType ...
type STPhoneticType string

// STPhoneticAlignment ...
type STPhoneticAlignment string

// CTPhoneticRun ...
type CTPhoneticRun struct {
	SbAttr *Uint32  `xml:"sb,attr"`
	EbAttr *Uint32  `xml:"eb,attr"`
	T      []string `xml:"t"`
}

// CTRElt ...
type CTRElt struct {
	RPr []*CTRPrElt `xml:"rPr"`
	T   []string    `xml:"t"`
}

// CTRPrElt ...
type CTRPrElt struct {
	RFont     []*CTFontName                  `xml:"rFont"`
	Charset   []*CTIntProperty               `xml:"charset"`
	Family    []*CTIntProperty               `xml:"family"`
	B         []*CTBooleanProperty           `xml:"b"`
	I         []*CTBooleanProperty           `xml:"i"`
	Strike    []*CTBooleanProperty           `xml:"strike"`
	Outline   []*CTBooleanProperty           `xml:"outline"`
	Shadow    []*CTBooleanProperty           `xml:"shadow"`
	Condense  []*CTBooleanProperty           `xml:"condense"`
	Extend    []*CTBooleanProperty           `xml:"extend"`
	Color     []*CTColor                     `xml:"color"`
	Sz        []*CTFontSize                  `xml:"sz"`
	U         []*CTUnderlineProperty         `xml:"u"`
	VertAlign []*CTVerticalAlignFontProperty `xml:"vertAlign"`
	Scheme    []*CTFontScheme                `xml:"scheme"`
}

// CTRst ...
type CTRst struct {
	T          []string         `xml:"t"`
	R          []*CTRElt        `xml:"r"`
	RPh        []*CTPhoneticRun `xml:"rPh"`
	PhoneticPr []*CTPhoneticPr  `xml:"phoneticPr"`
}

// CTPhoneticPr ...
type CTPhoneticPr struct {
	FontIdAttr    *Uint32 `xml:"fontId,attr"`
	TypeAttr      string  `xml:"type,attr,omitempty"`
	AlignmentAttr string  `xml:"alignment,attr,omitempty"`
}

// Headers ...
type Headers *CTRevisionHeaders

// Revisions ...
type Revisions *CTRevisions

// CTRevisionHeaders ...
type CTRevisionHeaders struct {
	GuidAttr              string              `xml:"guid,attr"`
	LastGuidAttr          string              `xml:"lastGuid,attr,omitempty"`
	SharedAttr            bool                `xml:"shared,attr,omitempty"`
	DiskRevisionsAttr     bool                `xml:"diskRevisions,attr,omitempty"`
	HistoryAttr           bool                `xml:"history,attr,omitempty"`
	TrackRevisionsAttr    bool                `xml:"trackRevisions,attr,omitempty"`
	ExclusiveAttr         bool                `xml:"exclusive,attr,omitempty"`
	RevisionIdAttr        *Uint32             `xml:"revisionId,attr,omitempty"`
	VersionAttr           int                 `xml:"version,attr,omitempty"`
	KeepChangeHistoryAttr bool                `xml:"keepChangeHistory,attr,omitempty"`
	ProtectedAttr         bool                `xml:"protected,attr,omitempty"`
	PreserveHistoryAttr   *Uint32             `xml:"preserveHistory,attr,omitempty"`
	Header                []*CTRevisionHeader `xml:"header"`
}

// CTRevisions ...
type CTRevisions struct {
	Rrc  []*CTRevisionRowColumn       `xml:"rrc"`
	Rm   []*CTRevisionMove            `xml:"rm"`
	Rcv  []*CTRevisionCustomView      `xml:"rcv"`
	Rsnm []*CTRevisionSheetRename     `xml:"rsnm"`
	Ris  []*CTRevisionInsertSheet     `xml:"ris"`
	Rcc  []*CTRevisionCellChange      `xml:"rcc"`
	Rfmt []*CTRevisionFormatting      `xml:"rfmt"`
	Raf  []*CTRevisionAutoFormatting  `xml:"raf"`
	Rdn  []*CTRevisionDefinedName     `xml:"rdn"`
	Rcmt []*CTRevisionComment         `xml:"rcmt"`
	Rqt  []*CTRevisionQueryTableField `xml:"rqt"`
	Rcft []*CTRevisionConflict        `xml:"rcft"`
}

// AGRevData ...
type AGRevData struct {
	RIdAttr *Uint32 `xml:"rId,attr"`
	UaAttr  bool    `xml:"ua,attr,omitempty"`
	RaAttr  bool    `xml:"ra,attr,omitempty"`
}

// CTRevisionHeader ...
type CTRevisionHeader struct {
	GuidAttr       string                 `xml:"guid,attr"`
	DateTimeAttr   time.Time              `xml:"dateTime,attr"`
	MaxSheetIdAttr *Uint32                `xml:"maxSheetId,attr"`
	UserNameAttr   string                 `xml:"userName,attr"`
	RIdAttr        string                 `xml:"r:id,attr"`
	MinRIdAttr     *Uint32                `xml:"minRId,attr,omitempty"`
	MaxRIdAttr     *Uint32                `xml:"maxRId,attr,omitempty"`
	SheetIdMap     []*CTSheetIdMap        `xml:"sheetIdMap"`
	ReviewedList   []*CTReviewedRevisions `xml:"reviewedList"`
	ExtLst         *CTExtensionList       `xml:"extLst"`
}

// CTSheetIdMap ...
type CTSheetIdMap struct {
	CountAttr *Uint32      `xml:"count,attr,omitempty"`
	SheetId   []*CTSheetId `xml:"sheetId"`
}

// CTSheetId ...
type CTSheetId struct {
	ValAttr *Uint32 `xml:"val,attr"`
}

// CTReviewedRevisions ...
type CTReviewedRevisions struct {
	CountAttr *Uint32       `xml:"count,attr,omitempty"`
	Reviewed  []*CTReviewed `xml:"reviewed"`
}

// CTReviewed ...
type CTReviewed struct {
	RIdAttr *Uint32 `xml:"rId,attr"`
}

// CTUndoInfo ...
type CTUndoInfo struct {
	IndexAttr *Uint32 `xml:"index,attr"`
	ExpAttr   string  `xml:"exp,attr"`
	Ref3DAttr bool    `xml:"ref3D,attr,omitempty"`
	ArrayAttr bool    `xml:"array,attr,omitempty"`
	VAttr     bool    `xml:"v,attr,omitempty"`
	NfAttr    bool    `xml:"nf,attr,omitempty"`
	CsAttr    bool    `xml:"cs,attr,omitempty"`
	DrAttr    string  `xml:"dr,attr"`
	DnAttr    string  `xml:"dn,attr,omitempty"`
	RAttr     string  `xml:"r,attr,omitempty"`
	SIdAttr   *Uint32 `xml:"sId,attr,omitempty"`
}

// CTRevisionRowColumn ...
type CTRevisionRowColumn struct {
	AGRevData  *AGRevData
	SIdAttr    *Uint32                 `xml:"sId,attr"`
	EolAttr    bool                    `xml:"eol,attr,omitempty"`
	RefAttr    string                  `xml:"ref,attr"`
	ActionAttr string                  `xml:"action,attr"`
	EdgeAttr   bool                    `xml:"edge,attr,omitempty"`
	Undo       []*CTUndoInfo           `xml:"undo"`
	Rcc        []*CTRevisionCellChange `xml:"rcc"`
	Rfmt       []*CTRevisionFormatting `xml:"rfmt"`
}

// CTRevisionMove ...
type CTRevisionMove struct {
	AGRevData         *AGRevData
	SheetIdAttr       *Uint32                 `xml:"sheetId,attr"`
	SourceAttr        string                  `xml:"source,attr"`
	DestinationAttr   string                  `xml:"destination,attr"`
	SourceSheetIdAttr *Uint32                 `xml:"sourceSheetId,attr,omitempty"`
	Undo              []*CTUndoInfo           `xml:"undo"`
	Rcc               []*CTRevisionCellChange `xml:"rcc"`
	Rfmt              []*CTRevisionFormatting `xml:"rfmt"`
}

// CTRevisionCustomView ...
type CTRevisionCustomView struct {
	GuidAttr   string `xml:"guid,attr"`
	ActionAttr string `xml:"action,attr"`
}

// CTRevisionSheetRename ...
type CTRevisionSheetRename struct {
	AGRevData   *AGRevData
	SheetIdAttr *Uint32          `xml:"sheetId,attr"`
	OldNameAttr string           `xml:"oldName,attr"`
	NewNameAttr string           `xml:"newName,attr"`
	ExtLst      *CTExtensionList `xml:"extLst"`
}

// CTRevisionInsertSheet ...
type CTRevisionInsertSheet struct {
	AGRevData         *AGRevData
	SheetIdAttr       *Uint32 `xml:"sheetId,attr"`
	NameAttr          string  `xml:"name,attr"`
	SheetPositionAttr *Uint32 `xml:"sheetPosition,attr"`
}

// CTRevisionCellChange ...
type CTRevisionCellChange struct {
	AGRevData                  *AGRevData
	SIdAttr                    *Uint32          `xml:"sId,attr"`
	OdxfAttr                   bool             `xml:"odxf,attr,omitempty"`
	XfDxfAttr                  bool             `xml:"xfDxf,attr,omitempty"`
	SAttr                      bool             `xml:"s,attr,omitempty"`
	DxfAttr                    bool             `xml:"dxf,attr,omitempty"`
	NumFmtIdAttr               *Uint32          `xml:"numFmtId,attr,omitempty"`
	QuotePrefixAttr            bool             `xml:"quotePrefix,attr,omitempty"`
	OldQuotePrefixAttr         bool             `xml:"oldQuotePrefix,attr,omitempty"`
	PhAttr                     bool             `xml:"ph,attr,omitempty"`
	OldPhAttr                  bool             `xml:"oldPh,attr,omitempty"`
	EndOfListFormulaUpdateAttr bool             `xml:"endOfListFormulaUpdate,attr,omitempty"`
	Oc                         []*CTCell        `xml:"oc"`
	Nc                         []*CTCell        `xml:"nc"`
	Odxf                       []*CTDxf         `xml:"odxf"`
	Ndxf                       []*CTDxf         `xml:"ndxf"`
	ExtLst                     *CTExtensionList `xml:"extLst"`
}

// CTRevisionFormatting ...
type CTRevisionFormatting struct {
	SheetIdAttr *Uint32          `xml:"sheetId,attr"`
	XfDxfAttr   bool             `xml:"xfDxf,attr,omitempty"`
	SAttr       bool             `xml:"s,attr,omitempty"`
	SqrefAttr   *STSqref         `xml:"sqref,attr"`
	StartAttr   *Uint32          `xml:"start,attr,omitempty"`
	LengthAttr  *Uint32          `xml:"length,attr,omitempty"`
	Dxf         []*CTDxf         `xml:"dxf"`
	ExtLst      *CTExtensionList `xml:"extLst"`
}

// CTRevisionAutoFormatting ...
type CTRevisionAutoFormatting struct {
	AGAutoFormat *AGAutoFormat
	SheetIdAttr  *Uint32 `xml:"sheetId,attr"`
	RefAttr      string  `xml:"ref,attr"`
}

// CTRevisionComment ...
type CTRevisionComment struct {
	SheetIdAttr      *Uint32 `xml:"sheetId,attr"`
	CellAttr         string  `xml:"cell,attr"`
	GuidAttr         string  `xml:"guid,attr"`
	ActionAttr       string  `xml:"action,attr,omitempty"`
	AlwaysShowAttr   bool    `xml:"alwaysShow,attr,omitempty"`
	OldAttr          bool    `xml:"old,attr,omitempty"`
	HiddenRowAttr    bool    `xml:"hiddenRow,attr,omitempty"`
	HiddenColumnAttr bool    `xml:"hiddenColumn,attr,omitempty"`
	AuthorAttr       string  `xml:"author,attr"`
	OldLengthAttr    *Uint32 `xml:"oldLength,attr,omitempty"`
	NewLengthAttr    *Uint32 `xml:"newLength,attr,omitempty"`
}

// CTRevisionDefinedName ...
type CTRevisionDefinedName struct {
	AGRevData              *AGRevData
	LocalSheetIdAttr       *Uint32          `xml:"localSheetId,attr,omitempty"`
	CustomViewAttr         bool             `xml:"customView,attr,omitempty"`
	NameAttr               string           `xml:"name,attr"`
	FunctionAttr           bool             `xml:"function,attr,omitempty"`
	OldFunctionAttr        bool             `xml:"oldFunction,attr,omitempty"`
	FunctionGroupIdAttr    byte             `xml:"functionGroupId,attr,omitempty"`
	OldFunctionGroupIdAttr byte             `xml:"oldFunctionGroupId,attr,omitempty"`
	ShortcutKeyAttr        byte             `xml:"shortcutKey,attr,omitempty"`
	OldShortcutKeyAttr     byte             `xml:"oldShortcutKey,attr,omitempty"`
	HiddenAttr             bool             `xml:"hidden,attr,omitempty"`
	OldHiddenAttr          bool             `xml:"oldHidden,attr,omitempty"`
	CustomMenuAttr         string           `xml:"customMenu,attr,omitempty"`
	OldCustomMenuAttr      string           `xml:"oldCustomMenu,attr,omitempty"`
	DescriptionAttr        string           `xml:"description,attr,omitempty"`
	OldDescriptionAttr     string           `xml:"oldDescription,attr,omitempty"`
	HelpAttr               string           `xml:"help,attr,omitempty"`
	OldHelpAttr            string           `xml:"oldHelp,attr,omitempty"`
	StatusBarAttr          string           `xml:"statusBar,attr,omitempty"`
	OldStatusBarAttr       string           `xml:"oldStatusBar,attr,omitempty"`
	CommentAttr            string           `xml:"comment,attr,omitempty"`
	OldCommentAttr         string           `xml:"oldComment,attr,omitempty"`
	Formula                []string         `xml:"formula"`
	OldFormula             []string         `xml:"oldFormula"`
	ExtLst                 *CTExtensionList `xml:"extLst"`
}

// CTRevisionConflict ...
type CTRevisionConflict struct {
	AGRevData   *AGRevData
	SheetIdAttr *Uint32 `xml:"sheetId,attr,omitempty"`
}

// CTRevisionQueryTableField ...
type CTRevisionQueryTableField struct {
	SheetIdAttr *Uint32 `xml:"sheetId,attr"`
	RefAttr     string  `xml:"ref,attr"`
	FieldIdAttr *Uint32 `xml:"fieldId,attr"`
}

// STrwColActionType ...
type STrwColActionType string

// STRevisionAction ...
type STRevisionAction string

// STFormulaExpression ...
type STFormulaExpression string

// Users ...
type Users *CTUsers

// CTUsers ...
type CTUsers struct {
	CountAttr *Uint32         `xml:"count,attr,omitempty"`
	UserInfo  []*CTSharedUser `xml:"userInfo"`
}

// CTSharedUser ...
type CTSharedUser struct {
	GuidAttr     string           `xml:"guid,attr"`
	NameAttr     string           `xml:"name,attr"`
	IdAttr       int              `xml:"id,attr"`
	DateTimeAttr time.Time        `xml:"dateTime,attr"`
	ExtLst       *CTExtensionList `xml:"extLst"`
}

// Worksheet ...
type Worksheet *CTWorksheet

// Chartsheet ...
type Chartsheet *CTChartsheet

// Dialogsheet ...
type Dialogsheet *CTDialogsheet

// CTMacrosheet ...
type CTMacrosheet struct {
	SheetPr               []*CTSheetPr                `xml:"sheetPr"`
	Dimension             []*CTSheetDimension         `xml:"dimension"`
	SheetViews            []*CTSheetViews             `xml:"sheetViews"`
	SheetFormatPr         []*CTSheetFormatPr          `xml:"sheetFormatPr"`
	Cols                  []*CTCols                   `xml:"cols"`
	SheetData             []*CTSheetData              `xml:"sheetData"`
	SheetProtection       []*CTSheetProtection        `xml:"sheetProtection"`
	AutoFilter            []*CTAutoFilter             `xml:"autoFilter"`
	SortState             []*CTSortState              `xml:"sortState"`
	DataConsolidate       []*CTDataConsolidate        `xml:"dataConsolidate"`
	CustomSheetViews      []*CTCustomSheetViews       `xml:"customSheetViews"`
	PhoneticPr            []*CTPhoneticPr             `xml:"phoneticPr"`
	ConditionalFormatting []*CTConditionalFormatting  `xml:"conditionalFormatting"`
	PrintOptions          []*CTPrintOptions           `xml:"printOptions"`
	PageMargins           []*CTPageMargins            `xml:"pageMargins"`
	PageSetup             []*CTPageSetup              `xml:"pageSetup"`
	HeaderFooter          []*CTHeaderFooter           `xml:"headerFooter"`
	RowBreaks             []*CTPageBreak              `xml:"rowBreaks"`
	ColBreaks             []*CTPageBreak              `xml:"colBreaks"`
	CustomProperties      []*CTCustomProperties       `xml:"customProperties"`
	Drawing               []*CTDrawing                `xml:"drawing"`
	DrawingHF             []*CTDrawingHF              `xml:"drawingHF"`
	Picture               []*CTSheetBackgroundPicture `xml:"picture"`
	OleObjects            []*CTOleObjects             `xml:"oleObjects"`
	ExtLst                *CTExtensionList            `xml:"extLst"`
}

// CTDialogsheet ...
type CTDialogsheet struct {
	SheetPr          *CTSheetPr           `xml:"sheetPr"`
	SheetViews       *CTSheetViews        `xml:"sheetViews"`
	SheetFormatPr    *CTSheetFormatPr     `xml:"sheetFormatPr"`
	SheetProtection  []*CTSheetProtection `xml:"sheetProtection"`
	CustomSheetViews *CTCustomSheetViews  `xml:"customSheetViews"`
	PrintOptions     *CTPrintOptions      `xml:"printOptions"`
	PageMargins      *CTPageMargins       `xml:"pageMargins"`
	PageSetup        *CTPageSetup         `xml:"pageSetup"`
	HeaderFooter     *CTHeaderFooter      `xml:"headerFooter"`
	Drawing          *CTDrawing           `xml:"drawing"`
	DrawingHF        []*CTDrawingHF       `xml:"drawingHF"`
	OleObjects       []*CTOleObjects      `xml:"oleObjects"`
	Controls         []*CTControls        `xml:"controls"`
	ExtLst           *CTExtensionList     `xml:"extLst"`
}

// CTWorksheet ...
type CTWorksheet struct {
	SheetPr               []*CTSheetPr                `xml:"sheetPr"`
	Dimension             []*CTSheetDimension         `xml:"dimension"`
	SheetViews            []*CTSheetViews             `xml:"sheetViews"`
	SheetFormatPr         []*CTSheetFormatPr          `xml:"sheetFormatPr"`
	Cols                  []*CTCols                   `xml:"cols"`
	SheetData             []*CTSheetData              `xml:"sheetData"`
	SheetCalcPr           []*CTSheetCalcPr            `xml:"sheetCalcPr"`
	SheetProtection       []*CTSheetProtection        `xml:"sheetProtection"`
	ProtectedRanges       []*CTProtectedRanges        `xml:"protectedRanges"`
	Scenarios             []*CTScenarios              `xml:"scenarios"`
	AutoFilter            []*CTAutoFilter             `xml:"autoFilter"`
	SortState             []*CTSortState              `xml:"sortState"`
	DataConsolidate       []*CTDataConsolidate        `xml:"dataConsolidate"`
	CustomSheetViews      []*CTCustomSheetViews       `xml:"customSheetViews"`
	MergeCells            []*CTMergeCells             `xml:"mergeCells"`
	PhoneticPr            []*CTPhoneticPr             `xml:"phoneticPr"`
	ConditionalFormatting []*CTConditionalFormatting  `xml:"conditionalFormatting"`
	DataValidations       []*CTDataValidations        `xml:"dataValidations"`
	Hyperlinks            []*CTHyperlinks             `xml:"hyperlinks"`
	PrintOptions          []*CTPrintOptions           `xml:"printOptions"`
	PageMargins           []*CTPageMargins            `xml:"pageMargins"`
	PageSetup             []*CTPageSetup              `xml:"pageSetup"`
	HeaderFooter          []*CTHeaderFooter           `xml:"headerFooter"`
	RowBreaks             []*CTPageBreak              `xml:"rowBreaks"`
	ColBreaks             []*CTPageBreak              `xml:"colBreaks"`
	CustomProperties      []*CTCustomProperties       `xml:"customProperties"`
	CellWatches           []*CTCellWatches            `xml:"cellWatches"`
	IgnoredErrors         []*CTIgnoredErrors          `xml:"ignoredErrors"`
	SmartTags             []*CTSmartTags              `xml:"smartTags"`
	Drawing               []*CTDrawing                `xml:"drawing"`
	DrawingHF             []*CTDrawingHF              `xml:"drawingHF"`
	Picture               []*CTSheetBackgroundPicture `xml:"picture"`
	OleObjects            []*CTOleObjects             `xml:"oleObjects"`
	Controls              []*CTControls               `xml:"controls"`
	WebPublishItems       []*CTWebPublishItems        `xml:"webPublishItems"`
	TableParts            []*CTTableParts             `xml:"tableParts"`
	ExtLst                []*CTExtensionList          `xml:"extLst"`
}

// CTSheetData ...
type CTSheetData struct {
	Row []*CTRow `xml:"row"`
}

// CTSheetCalcPr ...
type CTSheetCalcPr struct {
	FullCalcOnLoadAttr bool `xml:"fullCalcOnLoad,attr,omitempty"`
}

// CTSheetFormatPr ...
type CTSheetFormatPr struct {
	BaseColWidthAttr     *Uint32 `xml:"baseColWidth,attr,omitempty"`
	DefaultColWidthAttr  float64 `xml:"defaultColWidth,attr,omitempty"`
	DefaultRowHeightAttr float64 `xml:"defaultRowHeight,attr"`
	CustomHeightAttr     bool    `xml:"customHeight,attr,omitempty"`
	ZeroHeightAttr       bool    `xml:"zeroHeight,attr,omitempty"`
	ThickTopAttr         bool    `xml:"thickTop,attr,omitempty"`
	ThickBottomAttr      bool    `xml:"thickBottom,attr,omitempty"`
	OutlineLevelRowAttr  byte    `xml:"outlineLevelRow,attr,omitempty"`
	OutlineLevelColAttr  byte    `xml:"outlineLevelCol,attr,omitempty"`
}

// CTCols ...
type CTCols struct {
	Col []*CTCol `xml:"col"`
}

// CTCol ...
type CTCol struct {
	MinAttr          *Uint32 `xml:"min,attr"`
	MaxAttr          *Uint32 `xml:"max,attr"`
	WidthAttr        float64 `xml:"width,attr,omitempty"`
	StyleAttr        *Uint32 `xml:"style,attr,omitempty"`
	HiddenAttr       bool    `xml:"hidden,attr,omitempty"`
	BestFitAttr      bool    `xml:"bestFit,attr,omitempty"`
	CustomWidthAttr  bool    `xml:"customWidth,attr,omitempty"`
	PhoneticAttr     bool    `xml:"phonetic,attr,omitempty"`
	OutlineLevelAttr byte    `xml:"outlineLevel,attr,omitempty"`
	CollapsedAttr    bool    `xml:"collapsed,attr,omitempty"`
}

// STCellSpan ...
type STCellSpan string

// STCellSpans ...
type STCellSpans []string

// CTRow ...
type CTRow struct {
	RAttr            *Uint32          `xml:"r,attr,omitempty"`
	SpansAttr        *STCellSpans     `xml:"spans,attr,omitempty"`
	SAttr            *Uint32          `xml:"s,attr,omitempty"`
	CustomFormatAttr bool             `xml:"customFormat,attr,omitempty"`
	HtAttr           float64          `xml:"ht,attr,omitempty"`
	HiddenAttr       bool             `xml:"hidden,attr,omitempty"`
	CustomHeightAttr bool             `xml:"customHeight,attr,omitempty"`
	OutlineLevelAttr byte             `xml:"outlineLevel,attr,omitempty"`
	CollapsedAttr    bool             `xml:"collapsed,attr,omitempty"`
	ThickTopAttr     bool             `xml:"thickTop,attr,omitempty"`
	ThickBotAttr     bool             `xml:"thickBot,attr,omitempty"`
	PhAttr           bool             `xml:"ph,attr,omitempty"`
	C                []*CTCell        `xml:"c"`
	ExtLst           *CTExtensionList `xml:"extLst"`
}

// CTCell ...
type CTCell struct {
	RAttr  string           `xml:"r,attr,omitempty"`
	SAttr  *Uint32          `xml:"s,attr,omitempty"`
	TAttr  string           `xml:"t,attr,omitempty"`
	CmAttr *Uint32          `xml:"cm,attr,omitempty"`
	VmAttr *Uint32          `xml:"vm,attr,omitempty"`
	PhAttr bool             `xml:"ph,attr,omitempty"`
	F      []*CTCellFormula `xml:"f"`
	V      []string         `xml:"v"`
	Is     []*CTRst         `xml:"is"`
	ExtLst *CTExtensionList `xml:"extLst"`
}

// STCellType ...
type STCellType string

// STCellFormulaType ...
type STCellFormulaType string

// CTSheetPr ...
type CTSheetPr struct {
	SyncHorizontalAttr                    bool             `xml:"syncHorizontal,attr,omitempty"`
	SyncVerticalAttr                      bool             `xml:"syncVertical,attr,omitempty"`
	SyncRefAttr                           string           `xml:"syncRef,attr,omitempty"`
	TransitionEvaluationAttr              bool             `xml:"transitionEvaluation,attr,omitempty"`
	TransitionEntryAttr                   bool             `xml:"transitionEntry,attr,omitempty"`
	PublishedAttr                         bool             `xml:"published,attr,omitempty"`
	CodeNameAttr                          string           `xml:"codeName,attr,omitempty"`
	FilterModeAttr                        bool             `xml:"filterMode,attr,omitempty"`
	EnableFormatConditionsCalculationAttr bool             `xml:"enableFormatConditionsCalculation,attr,omitempty"`
	TabColor                              []*CTColor       `xml:"tabColor"`
	OutlinePr                             []*CTOutlinePr   `xml:"outlinePr"`
	PageSetUpPr                           []*CTPageSetUpPr `xml:"pageSetUpPr"`
}

// CTSheetDimension ...
type CTSheetDimension struct {
	RefAttr string `xml:"ref,attr"`
}

// CTSheetViews ...
type CTSheetViews struct {
	SheetView []*CTSheetView     `xml:"sheetView"`
	ExtLst    []*CTExtensionList `xml:"extLst"`
}

// CTSheetView ...
type CTSheetView struct {
	WindowProtectionAttr         bool                `xml:"windowProtection,attr,omitempty"`
	ShowFormulasAttr             bool                `xml:"showFormulas,attr,omitempty"`
	ShowGridLinesAttr            bool                `xml:"showGridLines,attr,omitempty"`
	ShowRowColHeadersAttr        bool                `xml:"showRowColHeaders,attr,omitempty"`
	ShowZerosAttr                bool                `xml:"showZeros,attr,omitempty"`
	RightToLeftAttr              bool                `xml:"rightToLeft,attr,omitempty"`
	TabSelectedAttr              bool                `xml:"tabSelected,attr,omitempty"`
	ShowRulerAttr                bool                `xml:"showRuler,attr,omitempty"`
	ShowOutlineSymbolsAttr       bool                `xml:"showOutlineSymbols,attr,omitempty"`
	DefaultGridColorAttr         bool                `xml:"defaultGridColor,attr,omitempty"`
	ShowWhiteSpaceAttr           bool                `xml:"showWhiteSpace,attr,omitempty"`
	ViewAttr                     string              `xml:"view,attr,omitempty"`
	TopLeftCellAttr              string              `xml:"topLeftCell,attr,omitempty"`
	ColorIdAttr                  *Uint32             `xml:"colorId,attr,omitempty"`
	ZoomScaleAttr                *Uint32             `xml:"zoomScale,attr,omitempty"`
	ZoomScaleNormalAttr          *Uint32             `xml:"zoomScaleNormal,attr,omitempty"`
	ZoomScaleSheetLayoutViewAttr *Uint32             `xml:"zoomScaleSheetLayoutView,attr,omitempty"`
	ZoomScalePageLayoutViewAttr  *Uint32             `xml:"zoomScalePageLayoutView,attr,omitempty"`
	WorkbookViewIdAttr           *Uint32             `xml:"workbookViewId,attr"`
	Pane                         []*CTPane           `xml:"pane"`
	Selection                    []*CTSelection      `xml:"selection"`
	PivotSelection               []*CTPivotSelection `xml:"pivotSelection"`
	ExtLst                       []*CTExtensionList  `xml:"extLst"`
}

// CTPane ...
type CTPane struct {
	XSplitAttr      float64 `xml:"xSplit,attr,omitempty"`
	YSplitAttr      float64 `xml:"ySplit,attr,omitempty"`
	TopLeftCellAttr string  `xml:"topLeftCell,attr,omitempty"`
	ActivePaneAttr  string  `xml:"activePane,attr,omitempty"`
	StateAttr       string  `xml:"state,attr,omitempty"`
}

// CTPivotSelection ...
type CTPivotSelection struct {
	PaneAttr        string       `xml:"pane,attr,omitempty"`
	ShowHeaderAttr  bool         `xml:"showHeader,attr,omitempty"`
	LabelAttr       bool         `xml:"label,attr,omitempty"`
	DataAttr        bool         `xml:"data,attr,omitempty"`
	ExtendableAttr  bool         `xml:"extendable,attr,omitempty"`
	CountAttr       *Uint32      `xml:"count,attr,omitempty"`
	AxisAttr        string       `xml:"axis,attr,omitempty"`
	DimensionAttr   *Uint32      `xml:"dimension,attr,omitempty"`
	StartAttr       *Uint32      `xml:"start,attr,omitempty"`
	MinAttr         *Uint32      `xml:"min,attr,omitempty"`
	MaxAttr         *Uint32      `xml:"max,attr,omitempty"`
	ActiveRowAttr   *Uint32      `xml:"activeRow,attr,omitempty"`
	ActiveColAttr   *Uint32      `xml:"activeCol,attr,omitempty"`
	PreviousRowAttr *Uint32      `xml:"previousRow,attr,omitempty"`
	PreviousColAttr *Uint32      `xml:"previousCol,attr,omitempty"`
	ClickAttr       *Uint32      `xml:"click,attr,omitempty"`
	RIdAttr         string       `xml:"r:id,attr,omitempty"`
	PivotArea       *CTPivotArea `xml:"pivotArea"`
}

// CTSelection ...
type CTSelection struct {
	PaneAttr         string   `xml:"pane,attr,omitempty"`
	ActiveCellAttr   string   `xml:"activeCell,attr,omitempty"`
	ActiveCellIdAttr *Uint32  `xml:"activeCellId,attr,omitempty"`
	SqrefAttr        *STSqref `xml:"sqref,attr,omitempty"`
}

// STPane ...
type STPane string

// CTPageBreak ...
type CTPageBreak struct {
	CountAttr            *Uint32    `xml:"count,attr,omitempty"`
	ManualBreakCountAttr *Uint32    `xml:"manualBreakCount,attr,omitempty"`
	Brk                  []*CTBreak `xml:"brk"`
}

// CTBreak ...
type CTBreak struct {
	IdAttr  *Uint32 `xml:"id,attr,omitempty"`
	MinAttr *Uint32 `xml:"min,attr,omitempty"`
	MaxAttr *Uint32 `xml:"max,attr,omitempty"`
	ManAttr bool    `xml:"man,attr,omitempty"`
	PtAttr  bool    `xml:"pt,attr,omitempty"`
}

// STSheetViewType ...
type STSheetViewType string

// CTOutlinePr ...
type CTOutlinePr struct {
	ApplyStylesAttr        bool `xml:"applyStyles,attr,omitempty"`
	SummaryBelowAttr       bool `xml:"summaryBelow,attr,omitempty"`
	SummaryRightAttr       bool `xml:"summaryRight,attr,omitempty"`
	ShowOutlineSymbolsAttr bool `xml:"showOutlineSymbols,attr,omitempty"`
}

// CTPageSetUpPr ...
type CTPageSetUpPr struct {
	AutoPageBreaksAttr bool `xml:"autoPageBreaks,attr,omitempty"`
	FitToPageAttr      bool `xml:"fitToPage,attr,omitempty"`
}

// CTDataConsolidate ...
type CTDataConsolidate struct {
	FunctionAttr    string        `xml:"function,attr,omitempty"`
	StartLabelsAttr bool          `xml:"startLabels,attr,omitempty"`
	TopLabelsAttr   bool          `xml:"topLabels,attr,omitempty"`
	LinkAttr        bool          `xml:"link,attr,omitempty"`
	DataRefs        []*CTDataRefs `xml:"dataRefs"`
}

// STDataConsolidateFunction ...
type STDataConsolidateFunction string

// CTDataRefs ...
type CTDataRefs struct {
	CountAttr *Uint32      `xml:"count,attr,omitempty"`
	DataRef   []*CTDataRef `xml:"dataRef"`
}

// CTDataRef ...
type CTDataRef struct {
	RefAttr   string `xml:"ref,attr,omitempty"`
	NameAttr  string `xml:"name,attr,omitempty"`
	SheetAttr string `xml:"sheet,attr,omitempty"`
	RIdAttr   string `xml:"r:id,attr,omitempty"`
}

// CTMergeCells ...
type CTMergeCells struct {
	CountAttr *Uint32        `xml:"count,attr,omitempty"`
	MergeCell []*CTMergeCell `xml:"mergeCell"`
}

// CTMergeCell ...
type CTMergeCell struct {
	RefAttr string `xml:"ref,attr"`
}

// CTSmartTags ...
type CTSmartTags struct {
	CellSmartTags []*CTCellSmartTags `xml:"cellSmartTags"`
}

// CTCellSmartTags ...
type CTCellSmartTags struct {
	RAttr        string            `xml:"r,attr"`
	CellSmartTag []*CTCellSmartTag `xml:"cellSmartTag"`
}

// CTCellSmartTag ...
type CTCellSmartTag struct {
	TypeAttr       *Uint32             `xml:"type,attr"`
	DeletedAttr    bool                `xml:"deleted,attr,omitempty"`
	XmlBasedAttr   bool                `xml:"xmlBased,attr,omitempty"`
	CellSmartTagPr []*CTCellSmartTagPr `xml:"cellSmartTagPr"`
}

// CTCellSmartTagPr ...
type CTCellSmartTagPr struct {
	KeyAttr string `xml:"key,attr"`
	ValAttr string `xml:"val,attr"`
}

// CTDrawing ...
type CTDrawing struct {
	RIdAttr string `xml:"r:id,attr"`
}

// CTDrawingHF ...
type CTDrawingHF struct {
	RIdAttr string  `xml:"r:id,attr"`
	LhoAttr *Uint32 `xml:"lho,attr,omitempty"`
	LheAttr *Uint32 `xml:"lhe,attr,omitempty"`
	LhfAttr *Uint32 `xml:"lhf,attr,omitempty"`
	ChoAttr *Uint32 `xml:"cho,attr,omitempty"`
	CheAttr *Uint32 `xml:"che,attr,omitempty"`
	ChfAttr *Uint32 `xml:"chf,attr,omitempty"`
	RhoAttr *Uint32 `xml:"rho,attr,omitempty"`
	RheAttr *Uint32 `xml:"rhe,attr,omitempty"`
	RhfAttr *Uint32 `xml:"rhf,attr,omitempty"`
	LfoAttr *Uint32 `xml:"lfo,attr,omitempty"`
	LfeAttr *Uint32 `xml:"lfe,attr,omitempty"`
	LffAttr *Uint32 `xml:"lff,attr,omitempty"`
	CfoAttr *Uint32 `xml:"cfo,attr,omitempty"`
	CfeAttr *Uint32 `xml:"cfe,attr,omitempty"`
	CffAttr *Uint32 `xml:"cff,attr,omitempty"`
	RfoAttr *Uint32 `xml:"rfo,attr,omitempty"`
	RfeAttr *Uint32 `xml:"rfe,attr,omitempty"`
	RffAttr *Uint32 `xml:"rff,attr,omitempty"`
}

// CTCustomSheetViews ...
type CTCustomSheetViews struct {
	CustomSheetView []*CTCustomSheetView `xml:"customSheetView"`
}

// CTCustomSheetView ...
type CTCustomSheetView struct {
	GuidAttr           string            `xml:"guid,attr"`
	ScaleAttr          *Uint32           `xml:"scale,attr,omitempty"`
	ColorIdAttr        *Uint32           `xml:"colorId,attr,omitempty"`
	ShowPageBreaksAttr bool              `xml:"showPageBreaks,attr,omitempty"`
	ShowFormulasAttr   bool              `xml:"showFormulas,attr,omitempty"`
	ShowGridLinesAttr  bool              `xml:"showGridLines,attr,omitempty"`
	ShowRowColAttr     bool              `xml:"showRowCol,attr,omitempty"`
	OutlineSymbolsAttr bool              `xml:"outlineSymbols,attr,omitempty"`
	ZeroValuesAttr     bool              `xml:"zeroValues,attr,omitempty"`
	FitToPageAttr      bool              `xml:"fitToPage,attr,omitempty"`
	PrintAreaAttr      bool              `xml:"printArea,attr,omitempty"`
	FilterAttr         bool              `xml:"filter,attr,omitempty"`
	ShowAutoFilterAttr bool              `xml:"showAutoFilter,attr,omitempty"`
	HiddenRowsAttr     bool              `xml:"hiddenRows,attr,omitempty"`
	HiddenColumnsAttr  bool              `xml:"hiddenColumns,attr,omitempty"`
	StateAttr          string            `xml:"state,attr,omitempty"`
	FilterUniqueAttr   bool              `xml:"filterUnique,attr,omitempty"`
	ViewAttr           string            `xml:"view,attr,omitempty"`
	ShowRulerAttr      bool              `xml:"showRuler,attr,omitempty"`
	TopLeftCellAttr    string            `xml:"topLeftCell,attr,omitempty"`
	Pane               []*CTPane         `xml:"pane"`
	Selection          []*CTSelection    `xml:"selection"`
	RowBreaks          []*CTPageBreak    `xml:"rowBreaks"`
	ColBreaks          []*CTPageBreak    `xml:"colBreaks"`
	PageMargins        []*CTPageMargins  `xml:"pageMargins"`
	PrintOptions       []*CTPrintOptions `xml:"printOptions"`
	PageSetup          []*CTPageSetup    `xml:"pageSetup"`
	HeaderFooter       []*CTHeaderFooter `xml:"headerFooter"`
	AutoFilter         []*CTAutoFilter   `xml:"autoFilter"`
	ExtLst             *CTExtensionList  `xml:"extLst"`
}

// CTDataValidations ...
type CTDataValidations struct {
	DisablePromptsAttr bool                `xml:"disablePrompts,attr,omitempty"`
	XWindowAttr        *Uint32             `xml:"xWindow,attr,omitempty"`
	YWindowAttr        *Uint32             `xml:"yWindow,attr,omitempty"`
	CountAttr          *Uint32             `xml:"count,attr,omitempty"`
	DataValidation     []*CTDataValidation `xml:"dataValidation"`
}

// CTDataValidation ...
type CTDataValidation struct {
	TypeAttr             string   `xml:"type,attr,omitempty"`
	ErrorStyleAttr       string   `xml:"errorStyle,attr,omitempty"`
	ImeModeAttr          string   `xml:"imeMode,attr,omitempty"`
	OperatorAttr         string   `xml:"operator,attr,omitempty"`
	AllowBlankAttr       bool     `xml:"allowBlank,attr,omitempty"`
	ShowDropDownAttr     bool     `xml:"showDropDown,attr,omitempty"`
	ShowInputMessageAttr bool     `xml:"showInputMessage,attr,omitempty"`
	ShowErrorMessageAttr bool     `xml:"showErrorMessage,attr,omitempty"`
	ErrorTitleAttr       string   `xml:"errorTitle,attr,omitempty"`
	ErrorAttr            string   `xml:"error,attr,omitempty"`
	PromptTitleAttr      string   `xml:"promptTitle,attr,omitempty"`
	PromptAttr           string   `xml:"prompt,attr,omitempty"`
	SqrefAttr            *STSqref `xml:"sqref,attr"`
	Formula1             []string `xml:"formula1"`
	Formula2             []string `xml:"formula2"`
}

// STDataValidationType ...
type STDataValidationType string

// STDataValidationOperator ...
type STDataValidationOperator string

// STDataValidationErrorStyle ...
type STDataValidationErrorStyle string

// STDataValidationImeMode ...
type STDataValidationImeMode string

// STCfType ...
type STCfType string

// STTimePeriod ...
type STTimePeriod string

// STConditionalFormattingOperator ...
type STConditionalFormattingOperator string

// STCfvoType ...
type STCfvoType string

// CTConditionalFormatting ...
type CTConditionalFormatting struct {
	PivotAttr bool             `xml:"pivot,attr,omitempty"`
	SqrefAttr *STSqref         `xml:"sqref,attr,omitempty"`
	CfRule    []*CTCfRule      `xml:"cfRule"`
	ExtLst    *CTExtensionList `xml:"extLst"`
}

// CTCfRule ...
type CTCfRule struct {
	TypeAttr         string           `xml:"type,attr,omitempty"`
	DxfIdAttr        *Uint32          `xml:"dxfId,attr,omitempty"`
	PriorityAttr     int              `xml:"priority,attr"`
	StopIfTrueAttr   bool             `xml:"stopIfTrue,attr,omitempty"`
	AboveAverageAttr bool             `xml:"aboveAverage,attr,omitempty"`
	PercentAttr      bool             `xml:"percent,attr,omitempty"`
	BottomAttr       bool             `xml:"bottom,attr,omitempty"`
	OperatorAttr     string           `xml:"operator,attr,omitempty"`
	TextAttr         string           `xml:"text,attr,omitempty"`
	TimePeriodAttr   string           `xml:"timePeriod,attr,omitempty"`
	RankAttr         *Uint32          `xml:"rank,attr,omitempty"`
	StdDevAttr       int              `xml:"stdDev,attr,omitempty"`
	EqualAverageAttr bool             `xml:"equalAverage,attr,omitempty"`
	Formula          []string         `xml:"formula"`
	ColorScale       []*CTColorScale  `xml:"colorScale"`
	DataBar          []*CTDataBar     `xml:"dataBar"`
	IconSet          []*CTIconSet     `xml:"iconSet"`
	ExtLst           *CTExtensionList `xml:"extLst"`
}

// CTHyperlinks ...
type CTHyperlinks struct {
	Hyperlink []*CTHyperlink `xml:"hyperlink"`
}

// CTHyperlink ...
type CTHyperlink struct {
	RefAttr      string `xml:"ref,attr"`
	RIdAttr      string `xml:"r:id,attr,omitempty"`
	LocationAttr string `xml:"location,attr,omitempty"`
	TooltipAttr  string `xml:"tooltip,attr,omitempty"`
	DisplayAttr  string `xml:"display,attr,omitempty"`
}

// CTCellFormula ...
type CTCellFormula struct {
	TAttr    string  `xml:"t,attr,omitempty"`
	AcaAttr  bool    `xml:"aca,attr,omitempty"`
	RefAttr  string  `xml:"ref,attr,omitempty"`
	Dt2DAttr bool    `xml:"dt2D,attr,omitempty"`
	DtrAttr  bool    `xml:"dtr,attr,omitempty"`
	Del1Attr bool    `xml:"del1,attr,omitempty"`
	Del2Attr bool    `xml:"del2,attr,omitempty"`
	R1Attr   string  `xml:"r1,attr,omitempty"`
	R2Attr   string  `xml:"r2,attr,omitempty"`
	CaAttr   bool    `xml:"ca,attr,omitempty"`
	SiAttr   *Uint32 `xml:"si,attr,omitempty"`
	BxAttr   bool    `xml:"bx,attr,omitempty"`
}

// CTColorScale ...
type CTColorScale struct {
	Cfvo  []*CTCfvo  `xml:"cfvo"`
	Color []*CTColor `xml:"color"`
}

// CTDataBar ...
type CTDataBar struct {
	MinLengthAttr *Uint32    `xml:"minLength,attr,omitempty"`
	MaxLengthAttr *Uint32    `xml:"maxLength,attr,omitempty"`
	ShowValueAttr bool       `xml:"showValue,attr,omitempty"`
	Cfvo          []*CTCfvo  `xml:"cfvo"`
	Color         []*CTColor `xml:"color"`
}

// CTIconSet ...
type CTIconSet struct {
	IconSetAttr   string    `xml:"iconSet,attr,omitempty"`
	ShowValueAttr bool      `xml:"showValue,attr,omitempty"`
	PercentAttr   bool      `xml:"percent,attr,omitempty"`
	ReverseAttr   bool      `xml:"reverse,attr,omitempty"`
	Cfvo          []*CTCfvo `xml:"cfvo"`
}

// CTCfvo ...
type CTCfvo struct {
	TypeAttr string             `xml:"type,attr"`
	ValAttr  string             `xml:"val,attr,omitempty"`
	GteAttr  bool               `xml:"gte,attr,omitempty"`
	ExtLst   []*CTExtensionList `xml:"extLst"`
}

// CTPageMargins ...
type CTPageMargins struct {
	LeftAttr   float64 `xml:"left,attr"`
	RightAttr  float64 `xml:"right,attr"`
	TopAttr    float64 `xml:"top,attr"`
	BottomAttr float64 `xml:"bottom,attr"`
	HeaderAttr float64 `xml:"header,attr"`
	FooterAttr float64 `xml:"footer,attr"`
}

// CTPrintOptions ...
type CTPrintOptions struct {
	HorizontalCenteredAttr bool `xml:"horizontalCentered,attr,omitempty"`
	VerticalCenteredAttr   bool `xml:"verticalCentered,attr,omitempty"`
	HeadingsAttr           bool `xml:"headings,attr,omitempty"`
	GridLinesAttr          bool `xml:"gridLines,attr,omitempty"`
	GridLinesSetAttr       bool `xml:"gridLinesSet,attr,omitempty"`
}

// CTPageSetup ...
type CTPageSetup struct {
	PaperSizeAttr          *Uint32 `xml:"paperSize,attr,omitempty"`
	PaperHeightAttr        string  `xml:"paperHeight,attr,omitempty"`
	PaperWidthAttr         string  `xml:"paperWidth,attr,omitempty"`
	ScaleAttr              *Uint32 `xml:"scale,attr,omitempty"`
	FirstPageNumberAttr    *Uint32 `xml:"firstPageNumber,attr,omitempty"`
	FitToWidthAttr         *Uint32 `xml:"fitToWidth,attr,omitempty"`
	FitToHeightAttr        *Uint32 `xml:"fitToHeight,attr,omitempty"`
	PageOrderAttr          string  `xml:"pageOrder,attr,omitempty"`
	OrientationAttr        string  `xml:"orientation,attr,omitempty"`
	UsePrinterDefaultsAttr bool    `xml:"usePrinterDefaults,attr,omitempty"`
	BlackAndWhiteAttr      bool    `xml:"blackAndWhite,attr,omitempty"`
	DraftAttr              bool    `xml:"draft,attr,omitempty"`
	CellCommentsAttr       string  `xml:"cellComments,attr,omitempty"`
	UseFirstPageNumberAttr bool    `xml:"useFirstPageNumber,attr,omitempty"`
	ErrorsAttr             string  `xml:"errors,attr,omitempty"`
	HorizontalDpiAttr      *Uint32 `xml:"horizontalDpi,attr,omitempty"`
	VerticalDpiAttr        *Uint32 `xml:"verticalDpi,attr,omitempty"`
	CopiesAttr             *Uint32 `xml:"copies,attr,omitempty"`
	RIdAttr                string  `xml:"r:id,attr,omitempty"`
}

// STPageOrder ...
type STPageOrder string

// STOrientation ...
type STOrientation string

// STCellComments ...
type STCellComments string

// CTHeaderFooter ...
type CTHeaderFooter struct {
	DifferentOddEvenAttr bool     `xml:"differentOddEven,attr,omitempty"`
	DifferentFirstAttr   bool     `xml:"differentFirst,attr,omitempty"`
	ScaleWithDocAttr     bool     `xml:"scaleWithDoc,attr,omitempty"`
	AlignWithMarginsAttr bool     `xml:"alignWithMargins,attr,omitempty"`
	OddHeader            []string `xml:"oddHeader"`
	OddFooter            []string `xml:"oddFooter"`
	EvenHeader           []string `xml:"evenHeader"`
	EvenFooter           []string `xml:"evenFooter"`
	FirstHeader          []string `xml:"firstHeader"`
	FirstFooter          []string `xml:"firstFooter"`
}

// STPrintError ...
type STPrintError string

// CTScenarios ...
type CTScenarios struct {
	CurrentAttr *Uint32       `xml:"current,attr,omitempty"`
	ShowAttr    *Uint32       `xml:"show,attr,omitempty"`
	SqrefAttr   *STSqref      `xml:"sqref,attr,omitempty"`
	Scenario    []*CTScenario `xml:"scenario"`
}

// CTSheetProtection ...
type CTSheetProtection struct {
	AlgorithmNameAttr       string  `xml:"algorithmName,attr,omitempty"`
	HashValueAttr           []byte  `xml:"hashValue,attr,omitempty"`
	SaltValueAttr           []byte  `xml:"saltValue,attr,omitempty"`
	SpinCountAttr           *Uint32 `xml:"spinCount,attr,omitempty"`
	SheetAttr               bool    `xml:"sheet,attr,omitempty"`
	ObjectsAttr             bool    `xml:"objects,attr,omitempty"`
	ScenariosAttr           bool    `xml:"scenarios,attr,omitempty"`
	FormatCellsAttr         bool    `xml:"formatCells,attr,omitempty"`
	FormatColumnsAttr       bool    `xml:"formatColumns,attr,omitempty"`
	FormatRowsAttr          bool    `xml:"formatRows,attr,omitempty"`
	InsertColumnsAttr       bool    `xml:"insertColumns,attr,omitempty"`
	InsertRowsAttr          bool    `xml:"insertRows,attr,omitempty"`
	InsertHyperlinksAttr    bool    `xml:"insertHyperlinks,attr,omitempty"`
	DeleteColumnsAttr       bool    `xml:"deleteColumns,attr,omitempty"`
	DeleteRowsAttr          bool    `xml:"deleteRows,attr,omitempty"`
	SelectLockedCellsAttr   bool    `xml:"selectLockedCells,attr,omitempty"`
	SortAttr                bool    `xml:"sort,attr,omitempty"`
	AutoFilterAttr          bool    `xml:"autoFilter,attr,omitempty"`
	PivotTablesAttr         bool    `xml:"pivotTables,attr,omitempty"`
	SelectUnlockedCellsAttr bool    `xml:"selectUnlockedCells,attr,omitempty"`
}

// CTProtectedRanges ...
type CTProtectedRanges struct {
	ProtectedRange []*CTProtectedRange `xml:"protectedRange"`
}

// CTProtectedRange ...
type CTProtectedRange struct {
	SqrefAttr          *STSqref `xml:"sqref,attr"`
	NameAttr           string   `xml:"name,attr"`
	AlgorithmNameAttr  string   `xml:"algorithmName,attr,omitempty"`
	HashValueAttr      []byte   `xml:"hashValue,attr,omitempty"`
	SaltValueAttr      []byte   `xml:"saltValue,attr,omitempty"`
	SpinCountAttr      *Uint32  `xml:"spinCount,attr,omitempty"`
	SecurityDescriptor []string `xml:"securityDescriptor"`
}

// CTScenario ...
type CTScenario struct {
	NameAttr    string          `xml:"name,attr"`
	LockedAttr  bool            `xml:"locked,attr,omitempty"`
	HiddenAttr  bool            `xml:"hidden,attr,omitempty"`
	CountAttr   *Uint32         `xml:"count,attr,omitempty"`
	UserAttr    string          `xml:"user,attr,omitempty"`
	CommentAttr string          `xml:"comment,attr,omitempty"`
	InputCells  []*CTInputCells `xml:"inputCells"`
}

// CTInputCells ...
type CTInputCells struct {
	RAttr        string  `xml:"r,attr"`
	DeletedAttr  bool    `xml:"deleted,attr,omitempty"`
	UndoneAttr   bool    `xml:"undone,attr,omitempty"`
	ValAttr      string  `xml:"val,attr"`
	NumFmtIdAttr *Uint32 `xml:"numFmtId,attr,omitempty"`
}

// CTCellWatches ...
type CTCellWatches struct {
	CellWatch []*CTCellWatch `xml:"cellWatch"`
}

// CTCellWatch ...
type CTCellWatch struct {
	RAttr string `xml:"r,attr"`
}

// CTChartsheet ...
type CTChartsheet struct {
	SheetPr          []*CTChartsheetPr           `xml:"sheetPr"`
	SheetViews       []*CTChartsheetViews        `xml:"sheetViews"`
	SheetProtection  []*CTChartsheetProtection   `xml:"sheetProtection"`
	CustomSheetViews []*CTCustomChartsheetViews  `xml:"customSheetViews"`
	PageMargins      *CTPageMargins              `xml:"pageMargins"`
	PageSetup        []*CTCsPageSetup            `xml:"pageSetup"`
	HeaderFooter     *CTHeaderFooter             `xml:"headerFooter"`
	Drawing          []*CTDrawing                `xml:"drawing"`
	DrawingHF        []*CTDrawingHF              `xml:"drawingHF"`
	Picture          []*CTSheetBackgroundPicture `xml:"picture"`
	WebPublishItems  []*CTWebPublishItems        `xml:"webPublishItems"`
	ExtLst           []*CTExtensionList          `xml:"extLst"`
}

// CTChartsheetPr ...
type CTChartsheetPr struct {
	PublishedAttr bool       `xml:"published,attr,omitempty"`
	CodeNameAttr  string     `xml:"codeName,attr,omitempty"`
	TabColor      []*CTColor `xml:"tabColor"`
}

// CTChartsheetViews ...
type CTChartsheetViews struct {
	SheetView []*CTChartsheetView `xml:"sheetView"`
	ExtLst    []*CTExtensionList  `xml:"extLst"`
}

// CTChartsheetView ...
type CTChartsheetView struct {
	TabSelectedAttr    bool               `xml:"tabSelected,attr,omitempty"`
	ZoomScaleAttr      *Uint32            `xml:"zoomScale,attr,omitempty"`
	WorkbookViewIdAttr *Uint32            `xml:"workbookViewId,attr"`
	ZoomToFitAttr      bool               `xml:"zoomToFit,attr,omitempty"`
	ExtLst             []*CTExtensionList `xml:"extLst"`
}

// CTChartsheetProtection ...
type CTChartsheetProtection struct {
	AlgorithmNameAttr string  `xml:"algorithmName,attr,omitempty"`
	HashValueAttr     []byte  `xml:"hashValue,attr,omitempty"`
	SaltValueAttr     []byte  `xml:"saltValue,attr,omitempty"`
	SpinCountAttr     *Uint32 `xml:"spinCount,attr,omitempty"`
	ContentAttr       bool    `xml:"content,attr,omitempty"`
	ObjectsAttr       bool    `xml:"objects,attr,omitempty"`
}

// CTCsPageSetup ...
type CTCsPageSetup struct {
	PaperSizeAttr          *Uint32 `xml:"paperSize,attr,omitempty"`
	PaperHeightAttr        string  `xml:"paperHeight,attr,omitempty"`
	PaperWidthAttr         string  `xml:"paperWidth,attr,omitempty"`
	FirstPageNumberAttr    *Uint32 `xml:"firstPageNumber,attr,omitempty"`
	OrientationAttr        string  `xml:"orientation,attr,omitempty"`
	UsePrinterDefaultsAttr bool    `xml:"usePrinterDefaults,attr,omitempty"`
	BlackAndWhiteAttr      bool    `xml:"blackAndWhite,attr,omitempty"`
	DraftAttr              bool    `xml:"draft,attr,omitempty"`
	UseFirstPageNumberAttr bool    `xml:"useFirstPageNumber,attr,omitempty"`
	HorizontalDpiAttr      *Uint32 `xml:"horizontalDpi,attr,omitempty"`
	VerticalDpiAttr        *Uint32 `xml:"verticalDpi,attr,omitempty"`
	CopiesAttr             *Uint32 `xml:"copies,attr,omitempty"`
	RIdAttr                string  `xml:"r:id,attr,omitempty"`
}

// CTCustomChartsheetViews ...
type CTCustomChartsheetViews struct {
	CustomSheetView []*CTCustomChartsheetView `xml:"customSheetView"`
}

// CTCustomChartsheetView ...
type CTCustomChartsheetView struct {
	GuidAttr      string            `xml:"guid,attr"`
	ScaleAttr     *Uint32           `xml:"scale,attr,omitempty"`
	StateAttr     string            `xml:"state,attr,omitempty"`
	ZoomToFitAttr bool              `xml:"zoomToFit,attr,omitempty"`
	PageMargins   []*CTPageMargins  `xml:"pageMargins"`
	PageSetup     []*CTCsPageSetup  `xml:"pageSetup"`
	HeaderFooter  []*CTHeaderFooter `xml:"headerFooter"`
}

// CTCustomProperties ...
type CTCustomProperties struct {
	CustomPr []*CTCustomProperty `xml:"customPr"`
}

// CTCustomProperty ...
type CTCustomProperty struct {
	NameAttr string `xml:"name,attr"`
	RIdAttr  string `xml:"r:id,attr"`
}

// CTOleObjects ...
type CTOleObjects struct {
	OleObject []*CTOleObject `xml:"oleObject"`
}

// CTOleObject ...
type CTOleObject struct {
	ProgIdAttr    string        `xml:"progId,attr,omitempty"`
	DvAspectAttr  string        `xml:"dvAspect,attr,omitempty"`
	LinkAttr      string        `xml:"link,attr,omitempty"`
	OleUpdateAttr string        `xml:"oleUpdate,attr,omitempty"`
	AutoLoadAttr  bool          `xml:"autoLoad,attr,omitempty"`
	ShapeIdAttr   *Uint32       `xml:"shapeId,attr"`
	RIdAttr       string        `xml:"r:id,attr,omitempty"`
	ObjectPr      []*CTObjectPr `xml:"objectPr"`
}

// CTObjectPr ...
type CTObjectPr struct {
	LockedAttr      bool              `xml:"locked,attr,omitempty"`
	DefaultSizeAttr bool              `xml:"defaultSize,attr,omitempty"`
	PrintAttr       bool              `xml:"print,attr,omitempty"`
	DisabledAttr    bool              `xml:"disabled,attr,omitempty"`
	UiObjectAttr    bool              `xml:"uiObject,attr,omitempty"`
	AutoFillAttr    bool              `xml:"autoFill,attr,omitempty"`
	AutoLineAttr    bool              `xml:"autoLine,attr,omitempty"`
	AutoPictAttr    bool              `xml:"autoPict,attr,omitempty"`
	MacroAttr       string            `xml:"macro,attr,omitempty"`
	AltTextAttr     string            `xml:"altText,attr,omitempty"`
	DdeAttr         bool              `xml:"dde,attr,omitempty"`
	RIdAttr         string            `xml:"r:id,attr,omitempty"`
	Anchor          []*CTObjectAnchor `xml:"anchor"`
}

// STDvAspect ...
type STDvAspect string

// STOleUpdate ...
type STOleUpdate string

// CTWebPublishItems ...
type CTWebPublishItems struct {
	CountAttr      *Uint32             `xml:"count,attr,omitempty"`
	WebPublishItem []*CTWebPublishItem `xml:"webPublishItem"`
}

// CTWebPublishItem ...
type CTWebPublishItem struct {
	IdAttr              *Uint32 `xml:"id,attr"`
	DivIdAttr           string  `xml:"divId,attr"`
	SourceTypeAttr      string  `xml:"sourceType,attr"`
	SourceRefAttr       string  `xml:"sourceRef,attr,omitempty"`
	SourceObjectAttr    string  `xml:"sourceObject,attr,omitempty"`
	DestinationFileAttr string  `xml:"destinationFile,attr"`
	TitleAttr           string  `xml:"title,attr,omitempty"`
	AutoRepublishAttr   bool    `xml:"autoRepublish,attr,omitempty"`
}

// CTControls ...
type CTControls struct {
	Control []*CTControl `xml:"control"`
}

// CTControl ...
type CTControl struct {
	ShapeIdAttr *Uint32        `xml:"shapeId,attr"`
	RIdAttr     string         `xml:"r:id,attr"`
	NameAttr    string         `xml:"name,attr,omitempty"`
	ControlPr   []*CTControlPr `xml:"controlPr"`
}

// CTControlPr ...
type CTControlPr struct {
	LockedAttr        bool              `xml:"locked,attr,omitempty"`
	DefaultSizeAttr   bool              `xml:"defaultSize,attr,omitempty"`
	PrintAttr         bool              `xml:"print,attr,omitempty"`
	DisabledAttr      bool              `xml:"disabled,attr,omitempty"`
	RecalcAlwaysAttr  bool              `xml:"recalcAlways,attr,omitempty"`
	UiObjectAttr      bool              `xml:"uiObject,attr,omitempty"`
	AutoFillAttr      bool              `xml:"autoFill,attr,omitempty"`
	AutoLineAttr      bool              `xml:"autoLine,attr,omitempty"`
	AutoPictAttr      bool              `xml:"autoPict,attr,omitempty"`
	MacroAttr         string            `xml:"macro,attr,omitempty"`
	AltTextAttr       string            `xml:"altText,attr,omitempty"`
	LinkedCellAttr    string            `xml:"linkedCell,attr,omitempty"`
	ListFillRangeAttr string            `xml:"listFillRange,attr,omitempty"`
	CfAttr            string            `xml:"cf,attr,omitempty"`
	RIdAttr           string            `xml:"r:id,attr,omitempty"`
	Anchor            []*CTObjectAnchor `xml:"anchor"`
}

// STWebSourceType ...
type STWebSourceType string

// CTIgnoredErrors ...
type CTIgnoredErrors struct {
	IgnoredError []*CTIgnoredError  `xml:"ignoredError"`
	ExtLst       []*CTExtensionList `xml:"extLst"`
}

// CTIgnoredError ...
type CTIgnoredError struct {
	SqrefAttr              *STSqref `xml:"sqref,attr"`
	EvalErrorAttr          bool     `xml:"evalError,attr,omitempty"`
	TwoDigitTextYearAttr   bool     `xml:"twoDigitTextYear,attr,omitempty"`
	NumberStoredAsTextAttr bool     `xml:"numberStoredAsText,attr,omitempty"`
	FormulaAttr            bool     `xml:"formula,attr,omitempty"`
	FormulaRangeAttr       bool     `xml:"formulaRange,attr,omitempty"`
	UnlockedFormulaAttr    bool     `xml:"unlockedFormula,attr,omitempty"`
	EmptyCellReferenceAttr bool     `xml:"emptyCellReference,attr,omitempty"`
	ListDataValidationAttr bool     `xml:"listDataValidation,attr,omitempty"`
	CalculatedColumnAttr   bool     `xml:"calculatedColumn,attr,omitempty"`
}

// STPaneState ...
type STPaneState string

// CTTableParts ...
type CTTableParts struct {
	CountAttr *Uint32        `xml:"count,attr,omitempty"`
	TablePart []*CTTablePart `xml:"tablePart"`
}

// CTTablePart ...
type CTTablePart struct {
	RIdAttr string `xml:"r:id,attr"`
}

// Metadata ...
type Metadata *CTMetadata

// CTMetadata ...
type CTMetadata struct {
	MetadataTypes   []*CTMetadataTypes   `xml:"metadataTypes"`
	MetadataStrings []*CTMetadataStrings `xml:"metadataStrings"`
	MdxMetadata     []*CTMdxMetadata     `xml:"mdxMetadata"`
	FutureMetadata  []*CTFutureMetadata  `xml:"futureMetadata"`
	CellMetadata    []*CTMetadataBlocks  `xml:"cellMetadata"`
	ValueMetadata   []*CTMetadataBlocks  `xml:"valueMetadata"`
	ExtLst          []*CTExtensionList   `xml:"extLst"`
}

// CTMetadataTypes ...
type CTMetadataTypes struct {
	CountAttr    *Uint32           `xml:"count,attr,omitempty"`
	MetadataType []*CTMetadataType `xml:"metadataType"`
}

// CTMetadataType ...
type CTMetadataType struct {
	NameAttr                string  `xml:"name,attr"`
	MinSupportedVersionAttr *Uint32 `xml:"minSupportedVersion,attr"`
	GhostRowAttr            bool    `xml:"ghostRow,attr,omitempty"`
	GhostColAttr            bool    `xml:"ghostCol,attr,omitempty"`
	EditAttr                bool    `xml:"edit,attr,omitempty"`
	DeleteAttr              bool    `xml:"delete,attr,omitempty"`
	CopyAttr                bool    `xml:"copy,attr,omitempty"`
	PasteAllAttr            bool    `xml:"pasteAll,attr,omitempty"`
	PasteFormulasAttr       bool    `xml:"pasteFormulas,attr,omitempty"`
	PasteValuesAttr         bool    `xml:"pasteValues,attr,omitempty"`
	PasteFormatsAttr        bool    `xml:"pasteFormats,attr,omitempty"`
	PasteCommentsAttr       bool    `xml:"pasteComments,attr,omitempty"`
	PasteDataValidationAttr bool    `xml:"pasteDataValidation,attr,omitempty"`
	PasteBordersAttr        bool    `xml:"pasteBorders,attr,omitempty"`
	PasteColWidthsAttr      bool    `xml:"pasteColWidths,attr,omitempty"`
	PasteNumberFormatsAttr  bool    `xml:"pasteNumberFormats,attr,omitempty"`
	MergeAttr               bool    `xml:"merge,attr,omitempty"`
	SplitFirstAttr          bool    `xml:"splitFirst,attr,omitempty"`
	SplitAllAttr            bool    `xml:"splitAll,attr,omitempty"`
	RowColShiftAttr         bool    `xml:"rowColShift,attr,omitempty"`
	ClearAllAttr            bool    `xml:"clearAll,attr,omitempty"`
	ClearFormatsAttr        bool    `xml:"clearFormats,attr,omitempty"`
	ClearContentsAttr       bool    `xml:"clearContents,attr,omitempty"`
	ClearCommentsAttr       bool    `xml:"clearComments,attr,omitempty"`
	AssignAttr              bool    `xml:"assign,attr,omitempty"`
	CoerceAttr              bool    `xml:"coerce,attr,omitempty"`
	AdjustAttr              bool    `xml:"adjust,attr,omitempty"`
	CellMetaAttr            bool    `xml:"cellMeta,attr,omitempty"`
}

// CTMetadataBlocks ...
type CTMetadataBlocks struct {
	CountAttr *Uint32            `xml:"count,attr,omitempty"`
	Bk        []*CTMetadataBlock `xml:"bk"`
}

// CTMetadataBlock ...
type CTMetadataBlock struct {
	Rc []*CTMetadataRecord `xml:"rc"`
}

// CTMetadataRecord ...
type CTMetadataRecord struct {
	TAttr *Uint32 `xml:"t,attr"`
	VAttr *Uint32 `xml:"v,attr"`
}

// CTFutureMetadata ...
type CTFutureMetadata struct {
	NameAttr  string                   `xml:"name,attr"`
	CountAttr *Uint32                  `xml:"count,attr,omitempty"`
	Bk        []*CTFutureMetadataBlock `xml:"bk"`
	ExtLst    []*CTExtensionList       `xml:"extLst"`
}

// CTFutureMetadataBlock ...
type CTFutureMetadataBlock struct {
	ExtLst []*CTExtensionList `xml:"extLst"`
}

// CTMdxMetadata ...
type CTMdxMetadata struct {
	CountAttr *Uint32  `xml:"count,attr,omitempty"`
	Mdx       []*CTMdx `xml:"mdx"`
}

// CTMdx ...
type CTMdx struct {
	NAttr *Uint32           `xml:"n,attr"`
	FAttr string            `xml:"f,attr"`
	T     *CTMdxTuple       `xml:"t"`
	Ms    *CTMdxSet         `xml:"ms"`
	P     *CTMdxMemeberProp `xml:"p"`
	K     *CTMdxKPI         `xml:"k"`
}

// STMdxFunctionType ...
type STMdxFunctionType string

// CTMdxTuple ...
type CTMdxTuple struct {
	CAttr  *Uint32                  `xml:"c,attr,omitempty"`
	CtAttr string                   `xml:"ct,attr,omitempty"`
	SiAttr *Uint32                  `xml:"si,attr,omitempty"`
	FiAttr *Uint32                  `xml:"fi,attr,omitempty"`
	BcAttr []byte                   `xml:"bc,attr,omitempty"`
	FcAttr []byte                   `xml:"fc,attr,omitempty"`
	IAttr  bool                     `xml:"i,attr,omitempty"`
	UAttr  bool                     `xml:"u,attr,omitempty"`
	StAttr bool                     `xml:"st,attr,omitempty"`
	BAttr  bool                     `xml:"b,attr,omitempty"`
	N      []*CTMetadataStringIndex `xml:"n"`
}

// CTMdxSet ...
type CTMdxSet struct {
	NsAttr *Uint32                  `xml:"ns,attr"`
	CAttr  *Uint32                  `xml:"c,attr,omitempty"`
	OAttr  string                   `xml:"o,attr,omitempty"`
	N      []*CTMetadataStringIndex `xml:"n"`
}

// STMdxSetOrder ...
type STMdxSetOrder string

// CTMdxMemeberProp ...
type CTMdxMemeberProp struct {
	NAttr  *Uint32 `xml:"n,attr"`
	NpAttr *Uint32 `xml:"np,attr"`
}

// CTMdxKPI ...
type CTMdxKPI struct {
	NAttr  *Uint32 `xml:"n,attr"`
	NpAttr *Uint32 `xml:"np,attr"`
	PAttr  string  `xml:"p,attr"`
}

// STMdxKPIProperty ...
type STMdxKPIProperty string

// CTMetadataStringIndex ...
type CTMetadataStringIndex struct {
	XAttr *Uint32 `xml:"x,attr"`
	SAttr bool    `xml:"s,attr,omitempty"`
}

// CTMetadataStrings ...
type CTMetadataStrings struct {
	CountAttr *Uint32             `xml:"count,attr,omitempty"`
	S         []*CTXStringElement `xml:"s"`
}

// SingleXmlCells ...
type SingleXmlCells *CTSingleXmlCells

// CTSingleXmlCells ...
type CTSingleXmlCells struct {
	SingleXmlCell []*CTSingleXmlCell `xml:"singleXmlCell"`
}

// CTSingleXmlCell ...
type CTSingleXmlCell struct {
	IdAttr           *Uint32            `xml:"id,attr"`
	RAttr            string             `xml:"r,attr"`
	ConnectionIdAttr *Uint32            `xml:"connectionId,attr"`
	XmlCellPr        []*CTXmlCellPr     `xml:"xmlCellPr"`
	ExtLst           []*CTExtensionList `xml:"extLst"`
}

// CTXmlCellPr ...
type CTXmlCellPr struct {
	IdAttr         *Uint32            `xml:"id,attr"`
	UniqueNameAttr string             `xml:"uniqueName,attr,omitempty"`
	XmlPr          []*CTXmlPr         `xml:"xmlPr"`
	ExtLst         []*CTExtensionList `xml:"extLst"`
}

// CTXmlPr ...
type CTXmlPr struct {
	MapIdAttr       *Uint32            `xml:"mapId,attr"`
	XpathAttr       string             `xml:"xpath,attr"`
	XmlDataTypeAttr string             `xml:"xmlDataType,attr"`
	ExtLst          []*CTExtensionList `xml:"extLst"`
}

// StyleSheet ...
type StyleSheet *CTStylesheet

// CTStylesheet ...
type CTStylesheet struct {
	NumFmts      []*CTNumFmts       `xml:"numFmts"`
	Fonts        []*CTFonts         `xml:"fonts"`
	Fills        []*CTFills         `xml:"fills"`
	Borders      []*CTBorders       `xml:"borders"`
	CellStyleXfs []*CTCellStyleXfs  `xml:"cellStyleXfs"`
	CellXfs      []*CTCellXfs       `xml:"cellXfs"`
	CellStyles   []*CTCellStyles    `xml:"cellStyles"`
	Dxfs         []*CTDxfs          `xml:"dxfs"`
	TableStyles  []*CTTableStyles   `xml:"tableStyles"`
	Colors       []*CTColors        `xml:"colors"`
	ExtLst       []*CTExtensionList `xml:"extLst"`
}

// CTCellAlignment ...
type CTCellAlignment struct {
	HorizontalAttr      string          `xml:"horizontal,attr,omitempty"`
	VerticalAttr        string          `xml:"vertical,attr,omitempty"`
	TextRotationAttr    *STTextRotation `xml:"textRotation,attr,omitempty"`
	WrapTextAttr        bool            `xml:"wrapText,attr,omitempty"`
	IndentAttr          *Uint32         `xml:"indent,attr,omitempty"`
	RelativeIndentAttr  int             `xml:"relativeIndent,attr,omitempty"`
	JustifyLastLineAttr bool            `xml:"justifyLastLine,attr,omitempty"`
	ShrinkToFitAttr     bool            `xml:"shrinkToFit,attr,omitempty"`
	ReadingOrderAttr    *Uint32         `xml:"readingOrder,attr,omitempty"`
}

// STTextRotation ...
type STTextRotation int

// STBorderStyle ...
type STBorderStyle string

// CTBorders ...
type CTBorders struct {
	CountAttr *Uint32     `xml:"count,attr,omitempty"`
	Border    []*CTBorder `xml:"border"`
}

// CTBorder ...
type CTBorder struct {
	DiagonalUpAttr   bool          `xml:"diagonalUp,attr,omitempty"`
	DiagonalDownAttr bool          `xml:"diagonalDown,attr,omitempty"`
	OutlineAttr      bool          `xml:"outline,attr,omitempty"`
	Start            []*CTBorderPr `xml:"start"`
	End              []*CTBorderPr `xml:"end"`
	Top              []*CTBorderPr `xml:"top"`
	Bottom           []*CTBorderPr `xml:"bottom"`
	Diagonal         []*CTBorderPr `xml:"diagonal"`
	Vertical         []*CTBorderPr `xml:"vertical"`
	Horizontal       []*CTBorderPr `xml:"horizontal"`
}

// CTBorderPr ...
type CTBorderPr struct {
	StyleAttr string     `xml:"style,attr,omitempty"`
	Color     []*CTColor `xml:"color"`
}

// CTCellProtection ...
type CTCellProtection struct {
	LockedAttr bool `xml:"locked,attr,omitempty"`
	HiddenAttr bool `xml:"hidden,attr,omitempty"`
}

// CTFonts ...
type CTFonts struct {
	CountAttr *Uint32   `xml:"count,attr,omitempty"`
	Font      []*CTFont `xml:"font"`
}

// CTFills ...
type CTFills struct {
	CountAttr *Uint32   `xml:"count,attr,omitempty"`
	Fill      []*CTFill `xml:"fill"`
}

// CTFill ...
type CTFill struct {
	PatternFill  []*CTPatternFill  `xml:"patternFill"`
	GradientFill []*CTGradientFill `xml:"gradientFill"`
}

// CTPatternFill ...
type CTPatternFill struct {
	PatternTypeAttr string     `xml:"patternType,attr,omitempty"`
	FgColor         []*CTColor `xml:"fgColor"`
	BgColor         []*CTColor `xml:"bgColor"`
}

// CTColor ...
type CTColor struct {
	AutoAttr    bool    `xml:"auto,attr,omitempty"`
	IndexedAttr *Uint32 `xml:"indexed,attr,omitempty"`
	RgbAttr     []byte  `xml:"rgb,attr,omitempty"`
	ThemeAttr   *Uint32 `xml:"theme,attr,omitempty"`
	TintAttr    float64 `xml:"tint,attr,omitempty"`
}

// STPatternType ...
type STPatternType string

// CTGradientFill ...
type CTGradientFill struct {
	TypeAttr   string            `xml:"type,attr,omitempty"`
	DegreeAttr float64           `xml:"degree,attr,omitempty"`
	LeftAttr   float64           `xml:"left,attr,omitempty"`
	RightAttr  float64           `xml:"right,attr,omitempty"`
	TopAttr    float64           `xml:"top,attr,omitempty"`
	BottomAttr float64           `xml:"bottom,attr,omitempty"`
	Stop       []*CTGradientStop `xml:"stop"`
}

// CTGradientStop ...
type CTGradientStop struct {
	PositionAttr float64    `xml:"position,attr"`
	Color        []*CTColor `xml:"color"`
}

// STGradientType ...
type STGradientType string

// STHorizontalAlignment ...
type STHorizontalAlignment string

// STVerticalAlignment ...
type STVerticalAlignment string

// CTNumFmts ...
type CTNumFmts struct {
	CountAttr *Uint32     `xml:"count,attr,omitempty"`
	NumFmt    []*CTNumFmt `xml:"numFmt"`
}

// CTNumFmt ...
type CTNumFmt struct {
	NumFmtIdAttr   *Uint32 `xml:"numFmtId,attr"`
	FormatCodeAttr string  `xml:"formatCode,attr"`
}

// CTCellStyleXfs ...
type CTCellStyleXfs struct {
	CountAttr *Uint32 `xml:"count,attr,omitempty"`
	Xf        []*CTXf `xml:"xf"`
}

// CTCellXfs ...
type CTCellXfs struct {
	CountAttr *Uint32 `xml:"count,attr,omitempty"`
	Xf        []*CTXf `xml:"xf"`
}

// CTXf ...
type CTXf struct {
	NumFmtIdAttr          *Uint32             `xml:"numFmtId,attr,omitempty"`
	FontIdAttr            *Uint32             `xml:"fontId,attr,omitempty"`
	FillIdAttr            *Uint32             `xml:"fillId,attr,omitempty"`
	BorderIdAttr          *Uint32             `xml:"borderId,attr,omitempty"`
	XfIdAttr              *Uint32             `xml:"xfId,attr,omitempty"`
	QuotePrefixAttr       bool                `xml:"quotePrefix,attr,omitempty"`
	PivotButtonAttr       bool                `xml:"pivotButton,attr,omitempty"`
	ApplyNumberFormatAttr bool                `xml:"applyNumberFormat,attr,omitempty"`
	ApplyFontAttr         bool                `xml:"applyFont,attr,omitempty"`
	ApplyFillAttr         bool                `xml:"applyFill,attr,omitempty"`
	ApplyBorderAttr       bool                `xml:"applyBorder,attr,omitempty"`
	ApplyAlignmentAttr    bool                `xml:"applyAlignment,attr,omitempty"`
	ApplyProtectionAttr   bool                `xml:"applyProtection,attr,omitempty"`
	Alignment             []*CTCellAlignment  `xml:"alignment"`
	Protection            []*CTCellProtection `xml:"protection"`
	ExtLst                []*CTExtensionList  `xml:"extLst"`
}

// CTCellStyles ...
type CTCellStyles struct {
	CountAttr *Uint32        `xml:"count,attr,omitempty"`
	CellStyle []*CTCellStyle `xml:"cellStyle"`
}

// CTCellStyle ...
type CTCellStyle struct {
	NameAttr          string             `xml:"name,attr,omitempty"`
	XfIdAttr          *Uint32            `xml:"xfId,attr"`
	BuiltinIdAttr     *Uint32            `xml:"builtinId,attr,omitempty"`
	ILevelAttr        *Uint32            `xml:"iLevel,attr,omitempty"`
	HiddenAttr        bool               `xml:"hidden,attr,omitempty"`
	CustomBuiltinAttr bool               `xml:"customBuiltin,attr,omitempty"`
	ExtLst            []*CTExtensionList `xml:"extLst"`
}

// CTDxfs ...
type CTDxfs struct {
	CountAttr *Uint32  `xml:"count,attr,omitempty"`
	Dxf       []*CTDxf `xml:"dxf"`
}

// CTDxf ...
type CTDxf struct {
	Font       []*CTFont           `xml:"font"`
	NumFmt     []*CTNumFmt         `xml:"numFmt"`
	Fill       []*CTFill           `xml:"fill"`
	Alignment  []*CTCellAlignment  `xml:"alignment"`
	Border     []*CTBorder         `xml:"border"`
	Protection []*CTCellProtection `xml:"protection"`
	ExtLst     []*CTExtensionList  `xml:"extLst"`
}

// STNumFmtId ...
type STNumFmtId *Uint32

// STFontId ...
type STFontId *Uint32

// STFillId ...
type STFillId *Uint32

// STBorderId ...
type STBorderId *Uint32

// STCellStyleXfId ...
type STCellStyleXfId *Uint32

// STDxfId ...
type STDxfId *Uint32

// CTColors ...
type CTColors struct {
	IndexedColors []*CTIndexedColors `xml:"indexedColors"`
	MruColors     []*CTMRUColors     `xml:"mruColors"`
}

// CTIndexedColors ...
type CTIndexedColors struct {
	RgbColor []*CTRgbColor `xml:"rgbColor"`
}

// CTMRUColors ...
type CTMRUColors struct {
	Color []*CTColor `xml:"color"`
}

// CTRgbColor ...
type CTRgbColor struct {
	RgbAttr []byte `xml:"rgb,attr,omitempty"`
}

// CTTableStyles ...
type CTTableStyles struct {
	CountAttr             *Uint32         `xml:"count,attr,omitempty"`
	DefaultTableStyleAttr string          `xml:"defaultTableStyle,attr,omitempty"`
	DefaultPivotStyleAttr string          `xml:"defaultPivotStyle,attr,omitempty"`
	TableStyle            []*CTTableStyle `xml:"tableStyle"`
}

// CTTableStyle ...
type CTTableStyle struct {
	NameAttr          string                 `xml:"name,attr"`
	PivotAttr         bool                   `xml:"pivot,attr,omitempty"`
	TableAttr         bool                   `xml:"table,attr,omitempty"`
	CountAttr         *Uint32                `xml:"count,attr,omitempty"`
	TableStyleElement []*CTTableStyleElement `xml:"tableStyleElement"`
}

// CTTableStyleElement ...
type CTTableStyleElement struct {
	TypeAttr  string  `xml:"type,attr"`
	SizeAttr  *Uint32 `xml:"size,attr,omitempty"`
	DxfIdAttr *Uint32 `xml:"dxfId,attr,omitempty"`
}

// STTableStyleType ...
type STTableStyleType string

// CTBooleanProperty ...
type CTBooleanProperty struct {
	ValAttr bool `xml:"val,attr,omitempty"`
}

// CTFontSize ...
type CTFontSize struct {
	ValAttr float64 `xml:"val,attr"`
}

// CTIntProperty ...
type CTIntProperty struct {
	ValAttr int `xml:"val,attr"`
}

// CTFontName ...
type CTFontName struct {
	ValAttr string `xml:"val,attr"`
}

// CTVerticalAlignFontProperty ...
type CTVerticalAlignFontProperty struct {
	ValAttr string `xml:"val,attr"`
}

// CTFontScheme ...
type CTFontScheme struct {
	ValAttr string `xml:"val,attr"`
}

// STFontScheme ...
type STFontScheme string

// CTUnderlineProperty ...
type CTUnderlineProperty struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// STUnderlineValues ...
type STUnderlineValues string

// CTFontFamily ...
type CTFontFamily struct {
	ValAttr int `xml:"val,attr"`
}

// STFontFamily ...
type STFontFamily int

// CTFont ...
type CTFont struct {
	Name      []*CTFontName                  `xml:"name"`
	Charset   []*CTIntProperty               `xml:"charset"`
	Family    []*CTFontFamily                `xml:"family"`
	B         []*CTBooleanProperty           `xml:"b"`
	I         []*CTBooleanProperty           `xml:"i"`
	Strike    []*CTBooleanProperty           `xml:"strike"`
	Outline   []*CTBooleanProperty           `xml:"outline"`
	Shadow    []*CTBooleanProperty           `xml:"shadow"`
	Condense  []*CTBooleanProperty           `xml:"condense"`
	Extend    []*CTBooleanProperty           `xml:"extend"`
	Color     []*CTColor                     `xml:"color"`
	Sz        []*CTFontSize                  `xml:"sz"`
	U         []*CTUnderlineProperty         `xml:"u"`
	VertAlign []*CTVerticalAlignFontProperty `xml:"vertAlign"`
	Scheme    []*CTFontScheme                `xml:"scheme"`
}

// AGAutoFormat ...
type AGAutoFormat struct {
	AutoFormatIdAttr            *Uint32 `xml:"autoFormatId,attr,omitempty"`
	ApplyNumberFormatsAttr      bool    `xml:"applyNumberFormats,attr,omitempty"`
	ApplyBorderFormatsAttr      bool    `xml:"applyBorderFormats,attr,omitempty"`
	ApplyFontFormatsAttr        bool    `xml:"applyFontFormats,attr,omitempty"`
	ApplyPatternFormatsAttr     bool    `xml:"applyPatternFormats,attr,omitempty"`
	ApplyAlignmentFormatsAttr   bool    `xml:"applyAlignmentFormats,attr,omitempty"`
	ApplyWidthHeightFormatsAttr bool    `xml:"applyWidthHeightFormats,attr,omitempty"`
}

// ExternalLink ...
type ExternalLink *CTExternalLink

// CTExternalLink ...
type CTExternalLink struct {
	ExternalBook []*CTExternalBook `xml:"externalBook"`
	DdeLink      []*CTDdeLink      `xml:"ddeLink"`
	OleLink      []*CTOleLink      `xml:"oleLink"`
	ExtLst       *CTExtensionList  `xml:"extLst"`
}

// CTExternalBook ...
type CTExternalBook struct {
	RIdAttr      string                    `xml:"r:id,attr"`
	SheetNames   []*CTExternalSheetNames   `xml:"sheetNames"`
	DefinedNames []*CTExternalDefinedNames `xml:"definedNames"`
	SheetDataSet []*CTExternalSheetDataSet `xml:"sheetDataSet"`
}

// CTExternalSheetNames ...
type CTExternalSheetNames struct {
	SheetName []*CTExternalSheetName `xml:"sheetName"`
}

// CTExternalSheetName ...
type CTExternalSheetName struct {
	ValAttr string `xml:"val,attr,omitempty"`
}

// CTExternalDefinedNames ...
type CTExternalDefinedNames struct {
	DefinedName []*CTExternalDefinedName `xml:"definedName"`
}

// CTExternalDefinedName ...
type CTExternalDefinedName struct {
	NameAttr     string  `xml:"name,attr"`
	RefersToAttr string  `xml:"refersTo,attr,omitempty"`
	SheetIdAttr  *Uint32 `xml:"sheetId,attr,omitempty"`
}

// CTExternalSheetDataSet ...
type CTExternalSheetDataSet struct {
	SheetData []*CTExternalSheetData `xml:"sheetData"`
}

// CTExternalSheetData ...
type CTExternalSheetData struct {
	SheetIdAttr      *Uint32          `xml:"sheetId,attr"`
	RefreshErrorAttr bool             `xml:"refreshError,attr,omitempty"`
	Row              []*CTExternalRow `xml:"row"`
}

// CTExternalRow ...
type CTExternalRow struct {
	RAttr *Uint32           `xml:"r,attr"`
	Cell  []*CTExternalCell `xml:"cell"`
}

// CTExternalCell ...
type CTExternalCell struct {
	RAttr  string   `xml:"r,attr,omitempty"`
	TAttr  string   `xml:"t,attr,omitempty"`
	VmAttr *Uint32  `xml:"vm,attr,omitempty"`
	V      []string `xml:"v"`
}

// CTDdeLink ...
type CTDdeLink struct {
	DdeServiceAttr string        `xml:"ddeService,attr"`
	DdeTopicAttr   string        `xml:"ddeTopic,attr"`
	DdeItems       []*CTDdeItems `xml:"ddeItems"`
}

// CTDdeItems ...
type CTDdeItems struct {
	DdeItem []*CTDdeItem `xml:"ddeItem"`
}

// CTDdeItem ...
type CTDdeItem struct {
	NameAttr      string         `xml:"name,attr,omitempty"`
	OleAttr       bool           `xml:"ole,attr,omitempty"`
	AdviseAttr    bool           `xml:"advise,attr,omitempty"`
	PreferPicAttr bool           `xml:"preferPic,attr,omitempty"`
	Values        []*CTDdeValues `xml:"values"`
}

// CTDdeValues ...
type CTDdeValues struct {
	RowsAttr *Uint32       `xml:"rows,attr,omitempty"`
	ColsAttr *Uint32       `xml:"cols,attr,omitempty"`
	Value    []*CTDdeValue `xml:"value"`
}

// CTDdeValue ...
type CTDdeValue struct {
	TAttr string   `xml:"t,attr,omitempty"`
	Val   []string `xml:"val"`
}

// STDdeValueType ...
type STDdeValueType string

// CTOleLink ...
type CTOleLink struct {
	RIdAttr    string        `xml:"r:id,attr"`
	ProgIdAttr string        `xml:"progId,attr"`
	OleItems   []*CTOleItems `xml:"oleItems"`
}

// CTOleItems ...
type CTOleItems struct {
	OleItem []*CTOleItem `xml:"oleItem"`
}

// CTOleItem ...
type CTOleItem struct {
	NameAttr      string `xml:"name,attr"`
	IconAttr      bool   `xml:"icon,attr,omitempty"`
	AdviseAttr    bool   `xml:"advise,attr,omitempty"`
	PreferPicAttr bool   `xml:"preferPic,attr,omitempty"`
}

// Table ...
type Table *CTTable

// CTTable ...
type CTTable struct {
	IdAttr                   *Uint32             `xml:"id,attr"`
	NameAttr                 string              `xml:"name,attr,omitempty"`
	DisplayNameAttr          string              `xml:"displayName,attr"`
	CommentAttr              string              `xml:"comment,attr,omitempty"`
	RefAttr                  string              `xml:"ref,attr"`
	TableTypeAttr            string              `xml:"tableType,attr,omitempty"`
	HeaderRowCountAttr       *Uint32             `xml:"headerRowCount,attr,omitempty"`
	InsertRowAttr            bool                `xml:"insertRow,attr,omitempty"`
	InsertRowShiftAttr       bool                `xml:"insertRowShift,attr,omitempty"`
	TotalsRowCountAttr       *Uint32             `xml:"totalsRowCount,attr,omitempty"`
	TotalsRowShownAttr       bool                `xml:"totalsRowShown,attr,omitempty"`
	PublishedAttr            bool                `xml:"published,attr,omitempty"`
	HeaderRowDxfIdAttr       *Uint32             `xml:"headerRowDxfId,attr,omitempty"`
	DataDxfIdAttr            *Uint32             `xml:"dataDxfId,attr,omitempty"`
	TotalsRowDxfIdAttr       *Uint32             `xml:"totalsRowDxfId,attr,omitempty"`
	HeaderRowBorderDxfIdAttr *Uint32             `xml:"headerRowBorderDxfId,attr,omitempty"`
	TableBorderDxfIdAttr     *Uint32             `xml:"tableBorderDxfId,attr,omitempty"`
	TotalsRowBorderDxfIdAttr *Uint32             `xml:"totalsRowBorderDxfId,attr,omitempty"`
	HeaderRowCellStyleAttr   string              `xml:"headerRowCellStyle,attr,omitempty"`
	DataCellStyleAttr        string              `xml:"dataCellStyle,attr,omitempty"`
	TotalsRowCellStyleAttr   string              `xml:"totalsRowCellStyle,attr,omitempty"`
	ConnectionIdAttr         *Uint32             `xml:"connectionId,attr,omitempty"`
	AutoFilter               []*CTAutoFilter     `xml:"autoFilter"`
	SortState                []*CTSortState      `xml:"sortState"`
	TableColumns             []*CTTableColumns   `xml:"tableColumns"`
	TableStyleInfo           []*CTTableStyleInfo `xml:"tableStyleInfo"`
	ExtLst                   []*CTExtensionList  `xml:"extLst"`
}

// STTableType ...
type STTableType string

// CTTableStyleInfo ...
type CTTableStyleInfo struct {
	NameAttr              string `xml:"name,attr,omitempty"`
	ShowFirstColumnAttr   bool   `xml:"showFirstColumn,attr,omitempty"`
	ShowLastColumnAttr    bool   `xml:"showLastColumn,attr,omitempty"`
	ShowRowStripesAttr    bool   `xml:"showRowStripes,attr,omitempty"`
	ShowColumnStripesAttr bool   `xml:"showColumnStripes,attr,omitempty"`
}

// CTTableColumns ...
type CTTableColumns struct {
	CountAttr   *Uint32          `xml:"count,attr,omitempty"`
	TableColumn []*CTTableColumn `xml:"tableColumn"`
}

// CTTableColumn ...
type CTTableColumn struct {
	IdAttr                  *Uint32            `xml:"id,attr"`
	UniqueNameAttr          string             `xml:"uniqueName,attr,omitempty"`
	NameAttr                string             `xml:"name,attr"`
	TotalsRowFunctionAttr   string             `xml:"totalsRowFunction,attr,omitempty"`
	TotalsRowLabelAttr      string             `xml:"totalsRowLabel,attr,omitempty"`
	QueryTableFieldIdAttr   *Uint32            `xml:"queryTableFieldId,attr,omitempty"`
	HeaderRowDxfIdAttr      *Uint32            `xml:"headerRowDxfId,attr,omitempty"`
	DataDxfIdAttr           *Uint32            `xml:"dataDxfId,attr,omitempty"`
	TotalsRowDxfIdAttr      *Uint32            `xml:"totalsRowDxfId,attr,omitempty"`
	HeaderRowCellStyleAttr  string             `xml:"headerRowCellStyle,attr,omitempty"`
	DataCellStyleAttr       string             `xml:"dataCellStyle,attr,omitempty"`
	TotalsRowCellStyleAttr  string             `xml:"totalsRowCellStyle,attr,omitempty"`
	CalculatedColumnFormula []*CTTableFormula  `xml:"calculatedColumnFormula"`
	TotalsRowFormula        []*CTTableFormula  `xml:"totalsRowFormula"`
	XmlColumnPr             []*CTXmlColumnPr   `xml:"xmlColumnPr"`
	ExtLst                  []*CTExtensionList `xml:"extLst"`
}

// CTTableFormula ...
type CTTableFormula struct {
	ArrayAttr bool `xml:"array,attr,omitempty"`
}

// STTotalsRowFunction ...
type STTotalsRowFunction string

// CTXmlColumnPr ...
type CTXmlColumnPr struct {
	MapIdAttr        *Uint32            `xml:"mapId,attr"`
	XpathAttr        string             `xml:"xpath,attr"`
	DenormalizedAttr bool               `xml:"denormalized,attr,omitempty"`
	XmlDataTypeAttr  string             `xml:"xmlDataType,attr"`
	ExtLst           []*CTExtensionList `xml:"extLst"`
}

// STXmlDataType ...
type STXmlDataType string

// VolTypes ...
type VolTypes *CTVolTypes

// CTVolTypes ...
type CTVolTypes struct {
	VolType []*CTVolType     `xml:"volType"`
	ExtLst  *CTExtensionList `xml:"extLst"`
}

// CTVolType ...
type CTVolType struct {
	TypeAttr string       `xml:"type,attr"`
	Main     []*CTVolMain `xml:"main"`
}

// CTVolMain ...
type CTVolMain struct {
	FirstAttr string        `xml:"first,attr"`
	Tp        []*CTVolTopic `xml:"tp"`
}

// CTVolTopic ...
type CTVolTopic struct {
	TAttr string           `xml:"t,attr,omitempty"`
	V     []string         `xml:"v"`
	Stp   []string         `xml:"stp"`
	Tr    []*CTVolTopicRef `xml:"tr"`
}

// CTVolTopicRef ...
type CTVolTopicRef struct {
	RAttr string  `xml:"r,attr"`
	SAttr *Uint32 `xml:"s,attr"`
}

// STVolDepType ...
type STVolDepType string

// STVolValueType ...
type STVolValueType string

// Workbook ...
type Workbook *CTWorkbook

// CTWorkbook ...
type CTWorkbook struct {
	ConformanceAttr     string                   `xml:"conformance,attr,omitempty"`
	FileVersion         []*CTFileVersion         `xml:"fileVersion"`
	FileSharing         []*CTFileSharing         `xml:"fileSharing"`
	WorkbookPr          []*CTWorkbookPr          `xml:"workbookPr"`
	WorkbookProtection  []*CTWorkbookProtection  `xml:"workbookProtection"`
	BookViews           []*CTBookViews           `xml:"bookViews"`
	Sheets              []*CTSheets              `xml:"sheets"`
	FunctionGroups      []*CTFunctionGroups      `xml:"functionGroups"`
	ExternalReferences  []*CTExternalReferences  `xml:"externalReferences"`
	DefinedNames        []*CTDefinedNames        `xml:"definedNames"`
	CalcPr              []*CTCalcPr              `xml:"calcPr"`
	OleSize             []*CTOleSize             `xml:"oleSize"`
	CustomWorkbookViews []*CTCustomWorkbookViews `xml:"customWorkbookViews"`
	PivotCaches         []*CTPivotCaches         `xml:"pivotCaches"`
	SmartTagPr          []*CTSmartTagPr          `xml:"smartTagPr"`
	SmartTagTypes       []*CTSmartTagTypes       `xml:"smartTagTypes"`
	WebPublishing       []*CTWebPublishing       `xml:"webPublishing"`
	FileRecoveryPr      []*CTFileRecoveryPr      `xml:"fileRecoveryPr"`
	WebPublishObjects   []*CTWebPublishObjects   `xml:"webPublishObjects"`
	ExtLst              []*CTExtensionList       `xml:"extLst"`
}

// CTFileVersion ...
type CTFileVersion struct {
	AppNameAttr      string `xml:"appName,attr,omitempty"`
	LastEditedAttr   string `xml:"lastEdited,attr,omitempty"`
	LowestEditedAttr string `xml:"lowestEdited,attr,omitempty"`
	RupBuildAttr     string `xml:"rupBuild,attr,omitempty"`
	CodeNameAttr     string `xml:"codeName,attr,omitempty"`
}

// CTBookViews ...
type CTBookViews struct {
	WorkbookView []*CTBookView `xml:"workbookView"`
}

// CTBookView ...
type CTBookView struct {
	VisibilityAttr             string             `xml:"visibility,attr,omitempty"`
	MinimizedAttr              bool               `xml:"minimized,attr,omitempty"`
	ShowHorizontalScrollAttr   bool               `xml:"showHorizontalScroll,attr,omitempty"`
	ShowVerticalScrollAttr     bool               `xml:"showVerticalScroll,attr,omitempty"`
	ShowSheetTabsAttr          bool               `xml:"showSheetTabs,attr,omitempty"`
	XWindowAttr                int                `xml:"xWindow,attr,omitempty"`
	YWindowAttr                int                `xml:"yWindow,attr,omitempty"`
	WindowWidthAttr            *Uint32            `xml:"windowWidth,attr,omitempty"`
	WindowHeightAttr           *Uint32            `xml:"windowHeight,attr,omitempty"`
	TabRatioAttr               *Uint32            `xml:"tabRatio,attr,omitempty"`
	FirstSheetAttr             *Uint32            `xml:"firstSheet,attr,omitempty"`
	ActiveTabAttr              *Uint32            `xml:"activeTab,attr,omitempty"`
	AutoFilterDateGroupingAttr bool               `xml:"autoFilterDateGrouping,attr,omitempty"`
	ExtLst                     []*CTExtensionList `xml:"extLst"`
}

// STVisibility ...
type STVisibility string

// CTCustomWorkbookViews ...
type CTCustomWorkbookViews struct {
	CustomWorkbookView []*CTCustomWorkbookView `xml:"customWorkbookView"`
}

// CTCustomWorkbookView ...
type CTCustomWorkbookView struct {
	NameAttr                 string           `xml:"name,attr"`
	GuidAttr                 string           `xml:"guid,attr"`
	AutoUpdateAttr           bool             `xml:"autoUpdate,attr,omitempty"`
	MergeIntervalAttr        *Uint32          `xml:"mergeInterval,attr,omitempty"`
	ChangesSavedWinAttr      bool             `xml:"changesSavedWin,attr,omitempty"`
	OnlySyncAttr             bool             `xml:"onlySync,attr,omitempty"`
	PersonalViewAttr         bool             `xml:"personalView,attr,omitempty"`
	IncludePrintSettingsAttr bool             `xml:"includePrintSettings,attr,omitempty"`
	IncludeHiddenRowColAttr  bool             `xml:"includeHiddenRowCol,attr,omitempty"`
	MaximizedAttr            bool             `xml:"maximized,attr,omitempty"`
	MinimizedAttr            bool             `xml:"minimized,attr,omitempty"`
	ShowHorizontalScrollAttr bool             `xml:"showHorizontalScroll,attr,omitempty"`
	ShowVerticalScrollAttr   bool             `xml:"showVerticalScroll,attr,omitempty"`
	ShowSheetTabsAttr        bool             `xml:"showSheetTabs,attr,omitempty"`
	XWindowAttr              int              `xml:"xWindow,attr,omitempty"`
	YWindowAttr              int              `xml:"yWindow,attr,omitempty"`
	WindowWidthAttr          *Uint32          `xml:"windowWidth,attr"`
	WindowHeightAttr         *Uint32          `xml:"windowHeight,attr"`
	TabRatioAttr             *Uint32          `xml:"tabRatio,attr,omitempty"`
	ActiveSheetIdAttr        *Uint32          `xml:"activeSheetId,attr"`
	ShowFormulaBarAttr       bool             `xml:"showFormulaBar,attr,omitempty"`
	ShowStatusbarAttr        bool             `xml:"showStatusbar,attr,omitempty"`
	ShowCommentsAttr         string           `xml:"showComments,attr,omitempty"`
	ShowObjectsAttr          string           `xml:"showObjects,attr,omitempty"`
	ExtLst                   *CTExtensionList `xml:"extLst"`
}

// STComments ...
type STComments string

// STObjects ...
type STObjects string

// CTSheets ...
type CTSheets struct {
	Sheet []*CTSheet `xml:"sheet"`
}

// CTSheet ...
type CTSheet struct {
	NameAttr    string  `xml:"name,attr"`
	SheetIdAttr *Uint32 `xml:"sheetId,attr"`
	StateAttr   string  `xml:"state,attr,omitempty"`
	RIdAttr     string  `xml:"r:id,attr"`
}

// STSheetState ...
type STSheetState string

// CTWorkbookPr ...
type CTWorkbookPr struct {
	Date1904Attr                   bool    `xml:"date1904,attr,omitempty"`
	ShowObjectsAttr                string  `xml:"showObjects,attr,omitempty"`
	ShowBorderUnselectedTablesAttr bool    `xml:"showBorderUnselectedTables,attr,omitempty"`
	FilterPrivacyAttr              bool    `xml:"filterPrivacy,attr,omitempty"`
	PromptedSolutionsAttr          bool    `xml:"promptedSolutions,attr,omitempty"`
	ShowInkAnnotationAttr          bool    `xml:"showInkAnnotation,attr,omitempty"`
	BackupFileAttr                 bool    `xml:"backupFile,attr,omitempty"`
	SaveExternalLinkValuesAttr     bool    `xml:"saveExternalLinkValues,attr,omitempty"`
	UpdateLinksAttr                string  `xml:"updateLinks,attr,omitempty"`
	CodeNameAttr                   string  `xml:"codeName,attr,omitempty"`
	HidePivotFieldListAttr         bool    `xml:"hidePivotFieldList,attr,omitempty"`
	ShowPivotChartFilterAttr       bool    `xml:"showPivotChartFilter,attr,omitempty"`
	AllowRefreshQueryAttr          bool    `xml:"allowRefreshQuery,attr,omitempty"`
	PublishItemsAttr               bool    `xml:"publishItems,attr,omitempty"`
	CheckCompatibilityAttr         bool    `xml:"checkCompatibility,attr,omitempty"`
	AutoCompressPicturesAttr       bool    `xml:"autoCompressPictures,attr,omitempty"`
	RefreshAllConnectionsAttr      bool    `xml:"refreshAllConnections,attr,omitempty"`
	DefaultThemeVersionAttr        *Uint32 `xml:"defaultThemeVersion,attr,omitempty"`
}

// STUpdateLinks ...
type STUpdateLinks string

// CTSmartTagPr ...
type CTSmartTagPr struct {
	EmbedAttr bool   `xml:"embed,attr,omitempty"`
	ShowAttr  string `xml:"show,attr,omitempty"`
}

// STSmartTagShow ...
type STSmartTagShow string

// CTSmartTagTypes ...
type CTSmartTagTypes struct {
	SmartTagType []*CTSmartTagType `xml:"smartTagType"`
}

// CTSmartTagType ...
type CTSmartTagType struct {
	NamespaceUriAttr string `xml:"namespaceUri,attr,omitempty"`
	NameAttr         string `xml:"name,attr,omitempty"`
	UrlAttr          string `xml:"url,attr,omitempty"`
}

// CTFileRecoveryPr ...
type CTFileRecoveryPr struct {
	AutoRecoverAttr     bool `xml:"autoRecover,attr,omitempty"`
	CrashSaveAttr       bool `xml:"crashSave,attr,omitempty"`
	DataExtractLoadAttr bool `xml:"dataExtractLoad,attr,omitempty"`
	RepairLoadAttr      bool `xml:"repairLoad,attr,omitempty"`
}

// CTCalcPr ...
type CTCalcPr struct {
	CalcIdAttr                *Uint32 `xml:"calcId,attr,omitempty"`
	CalcModeAttr              string  `xml:"calcMode,attr,omitempty"`
	FullCalcOnLoadAttr        bool    `xml:"fullCalcOnLoad,attr,omitempty"`
	RefModeAttr               string  `xml:"refMode,attr,omitempty"`
	IterateAttr               bool    `xml:"iterate,attr,omitempty"`
	IterateCountAttr          *Uint32 `xml:"iterateCount,attr,omitempty"`
	IterateDeltaAttr          float64 `xml:"iterateDelta,attr,omitempty"`
	FullPrecisionAttr         bool    `xml:"fullPrecision,attr,omitempty"`
	CalcCompletedAttr         bool    `xml:"calcCompleted,attr,omitempty"`
	CalcOnSaveAttr            bool    `xml:"calcOnSave,attr,omitempty"`
	ConcurrentCalcAttr        bool    `xml:"concurrentCalc,attr,omitempty"`
	ConcurrentManualCountAttr *Uint32 `xml:"concurrentManualCount,attr,omitempty"`
	ForceFullCalcAttr         bool    `xml:"forceFullCalc,attr,omitempty"`
}

// STCalcMode ...
type STCalcMode string

// STRefMode ...
type STRefMode string

// CTDefinedNames ...
type CTDefinedNames struct {
	DefinedName []*CTDefinedName `xml:"definedName"`
}

// CTDefinedName ...
type CTDefinedName struct {
	NameAttr              string  `xml:"name,attr"`
	CommentAttr           string  `xml:"comment,attr,omitempty"`
	CustomMenuAttr        string  `xml:"customMenu,attr,omitempty"`
	DescriptionAttr       string  `xml:"description,attr,omitempty"`
	HelpAttr              string  `xml:"help,attr,omitempty"`
	StatusBarAttr         string  `xml:"statusBar,attr,omitempty"`
	LocalSheetIdAttr      *Uint32 `xml:"localSheetId,attr,omitempty"`
	HiddenAttr            bool    `xml:"hidden,attr,omitempty"`
	FunctionAttr          bool    `xml:"function,attr,omitempty"`
	VbProcedureAttr       bool    `xml:"vbProcedure,attr,omitempty"`
	XlmAttr               bool    `xml:"xlm,attr,omitempty"`
	FunctionGroupIdAttr   *Uint32 `xml:"functionGroupId,attr,omitempty"`
	ShortcutKeyAttr       string  `xml:"shortcutKey,attr,omitempty"`
	PublishToServerAttr   bool    `xml:"publishToServer,attr,omitempty"`
	WorkbookParameterAttr bool    `xml:"workbookParameter,attr,omitempty"`
}

// CTExternalReferences ...
type CTExternalReferences struct {
	ExternalReference []*CTExternalReference `xml:"externalReference"`
}

// CTExternalReference ...
type CTExternalReference struct {
	RIdAttr string `xml:"r:id,attr"`
}

// CTSheetBackgroundPicture ...
type CTSheetBackgroundPicture struct {
	RIdAttr string `xml:"r:id,attr"`
}

// CTPivotCaches ...
type CTPivotCaches struct {
	PivotCache []*CTPivotCache `xml:"pivotCache"`
}

// CTPivotCache ...
type CTPivotCache struct {
	CacheIdAttr *Uint32 `xml:"cacheId,attr"`
	RIdAttr     string  `xml:"r:id,attr"`
}

// CTFileSharing ...
type CTFileSharing struct {
	ReadOnlyRecommendedAttr bool    `xml:"readOnlyRecommended,attr,omitempty"`
	UserNameAttr            string  `xml:"userName,attr,omitempty"`
	AlgorithmNameAttr       string  `xml:"algorithmName,attr,omitempty"`
	HashValueAttr           []byte  `xml:"hashValue,attr,omitempty"`
	SaltValueAttr           []byte  `xml:"saltValue,attr,omitempty"`
	SpinCountAttr           *Uint32 `xml:"spinCount,attr,omitempty"`
}

// CTOleSize ...
type CTOleSize struct {
	RefAttr string `xml:"ref,attr"`
}

// CTWorkbookProtection ...
type CTWorkbookProtection struct {
	LockStructureAttr          bool    `xml:"lockStructure,attr,omitempty"`
	LockWindowsAttr            bool    `xml:"lockWindows,attr,omitempty"`
	LockRevisionAttr           bool    `xml:"lockRevision,attr,omitempty"`
	RevisionsAlgorithmNameAttr string  `xml:"revisionsAlgorithmName,attr,omitempty"`
	RevisionsHashValueAttr     []byte  `xml:"revisionsHashValue,attr,omitempty"`
	RevisionsSaltValueAttr     []byte  `xml:"revisionsSaltValue,attr,omitempty"`
	RevisionsSpinCountAttr     *Uint32 `xml:"revisionsSpinCount,attr,omitempty"`
	WorkbookAlgorithmNameAttr  string  `xml:"workbookAlgorithmName,attr,omitempty"`
	WorkbookHashValueAttr      []byte  `xml:"workbookHashValue,attr,omitempty"`
	WorkbookSaltValueAttr      []byte  `xml:"workbookSaltValue,attr,omitempty"`
	WorkbookSpinCountAttr      *Uint32 `xml:"workbookSpinCount,attr,omitempty"`
}

// CTWebPublishing ...
type CTWebPublishing struct {
	CssAttr              bool    `xml:"css,attr,omitempty"`
	ThicketAttr          bool    `xml:"thicket,attr,omitempty"`
	LongFileNamesAttr    bool    `xml:"longFileNames,attr,omitempty"`
	VmlAttr              bool    `xml:"vml,attr,omitempty"`
	AllowPngAttr         bool    `xml:"allowPng,attr,omitempty"`
	TargetScreenSizeAttr string  `xml:"targetScreenSize,attr,omitempty"`
	DpiAttr              *Uint32 `xml:"dpi,attr,omitempty"`
	CharacterSetAttr     string  `xml:"characterSet,attr,omitempty"`
}

// STTargetScreenSize ...
type STTargetScreenSize string

// CTFunctionGroups ...
type CTFunctionGroups struct {
	BuiltInGroupCountAttr *Uint32          `xml:"builtInGroupCount,attr,omitempty"`
	FunctionGroup         *CTFunctionGroup `xml:"functionGroup"`
}

// CTFunctionGroup ...
type CTFunctionGroup struct {
	NameAttr string `xml:"name,attr,omitempty"`
}

// CTWebPublishObjects ...
type CTWebPublishObjects struct {
	CountAttr        *Uint32               `xml:"count,attr,omitempty"`
	WebPublishObject []*CTWebPublishObject `xml:"webPublishObject"`
}

// CTWebPublishObject ...
type CTWebPublishObject struct {
	IdAttr              *Uint32 `xml:"id,attr"`
	DivIdAttr           string  `xml:"divId,attr"`
	SourceObjectAttr    string  `xml:"sourceObject,attr,omitempty"`
	DestinationFileAttr string  `xml:"destinationFile,attr"`
	TitleAttr           string  `xml:"title,attr,omitempty"`
	AutoRepublishAttr   bool    `xml:"autoRepublish,attr,omitempty"`
}
