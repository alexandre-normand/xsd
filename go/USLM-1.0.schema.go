// Copyright 2020 The xgen Authors. All rights reserved.
//
// DO NOT EDIT: generated by xgen XSD generator
//
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package schema

import (
	"encoding/xml"
	"time"
)

// DateSimpleType ...
type DateSimpleType struct {
	Date     time.Time
	DateTime time.Time
}

// OccurrenceSimpleType ...
type OccurrenceSimpleType struct {
	PositiveInteger int
	ChoiceEnum      *ChoiceEnum
}

// ShortStringSimpleType ...
type ShortStringSimpleType string

// MediumStringSimpleType ...
type MediumStringSimpleType string

// LongStringSimpleType ...
type LongStringSimpleType string

// ChoiceEnum ...
type ChoiceEnum string

// PropertyTypeEnum ...
type PropertyTypeEnum string

// SetTypeEnum ...
type SetTypeEnum string

// StatusEnum ...
type StatusEnum string

// ActionTypeEnum ...
type ActionTypeEnum string

// PositionEnum ...
type PositionEnum string

// OrientationEnum ...
type OrientationEnum string

// NoteTypeEnum ...
type NoteTypeEnum string

// IdentificationGroup ...
type IdentificationGroup struct {
	IdAttr         string `xml:"id,attr,omitempty"`
	NameAttr       string `xml:"name,attr,omitempty"`
	TemporalIdAttr string `xml:"temporalId,attr,omitempty"`
	IdentifierAttr string `xml:"identifier,attr,omitempty"`
}

// ClassificationGroup ...
type ClassificationGroup struct {
	RoleAttr  string `xml:"role,attr,omitempty"`
	ClassAttr string `xml:"class,attr,omitempty"`
	StyleAttr string `xml:"style,attr,omitempty"`
}

// AnnotationGroup ...
type AnnotationGroup struct {
	NoteAttr            string `xml:"note,attr,omitempty"`
	AltAttr             string `xml:"alt,attr,omitempty"`
	MetaAttr            string `xml:"meta,attr,omitempty"`
	MiscAttr            string `xml:"misc,attr,omitempty"`
	DraftingTipAttr     string `xml:"draftingTip,attr,omitempty"`
	CodificationTipAttr string `xml:"codificationTip,attr,omitempty"`
}

// DescriptionGroup ...
type DescriptionGroup struct {
	TitleAttr     string `xml:"title,attr,omitempty"`
	BriefAttr     string `xml:"brief,attr,omitempty"`
	SortOrderAttr int    `xml:"sortOrder,attr,omitempty"`
}

// ReferenceGroup ...
type ReferenceGroup struct {
	HrefAttr    string `xml:"href,attr,omitempty"`
	IdrefAttr   string `xml:"idref,attr,omitempty"`
	PortionAttr string `xml:"portion,attr,omitempty"`
}

// AmendingGroup ...
type AmendingGroup struct {
	PosAttr      string `xml:"pos,attr,omitempty"`
	PosTextAttr  string `xml:"posText,attr,omitempty"`
	PosCountAttr int    `xml:"posCount,attr,omitempty"`
}

// LinkGroup ...
type LinkGroup struct {
	SrcAttr string `xml:"src,attr,omitempty"`
}

// ValueGroup ...
type ValueGroup struct {
	ValueAttr      string `xml:"value,attr,omitempty"`
	StartValueAttr string `xml:"startValue,attr,omitempty"`
	EndValueAttr   string `xml:"endValue,attr,omitempty"`
}

// NoteGroup ...
type NoteGroup struct {
	TypeAttr  string `xml:"type,attr,omitempty"`
	TopicAttr string `xml:"topic,attr,omitempty"`
}

// DateGroup ...
type DateGroup struct {
	DateAttr      *DateSimpleType `xml:"date,attr,omitempty"`
	StartDateAttr *DateSimpleType `xml:"startDate,attr,omitempty"`
	EndDateAttr   *DateSimpleType `xml:"endDate,attr,omitempty"`
}

// VersioningGroup ...
type VersioningGroup struct {
	StartPeriodAttr *DateSimpleType `xml:"startPeriod,attr,omitempty"`
	EndPeriodAttr   *DateSimpleType `xml:"endPeriod,attr,omitempty"`
	StatusAttr      string          `xml:"status,attr,omitempty"`
	PartialAttr     bool            `xml:"partial,attr,omitempty"`
}

// ActionGroup ...
type ActionGroup struct {
	TypeAttr             string                `xml:"type,attr,omitempty"`
	OccurrenceAttr       *OccurrenceSimpleType `xml:"occurrence,attr,omitempty"`
	CommencementDateAttr *DateSimpleType       `xml:"commencementDate,attr,omitempty"`
}

// CellGroup ...
type CellGroup struct {
	ColspanAttr int    `xml:"colspan,attr,omitempty"`
	RowspanAttr int    `xml:"rowspan,attr,omitempty"`
	LeadersAttr string `xml:"leaders,attr,omitempty"`
}

// BaseType ...
type BaseType struct {
	IdentificationGroup *IdentificationGroup
	ClassificationGroup *ClassificationGroup
	AnnotationGroup     *AnnotationGroup
	VersioningGroup     *VersioningGroup
}

// BaseBlockType ...
type BaseBlockType struct {
	IdentificationGroup *IdentificationGroup
	ClassificationGroup *ClassificationGroup
	AnnotationGroup     *AnnotationGroup
	VersioningGroup     *VersioningGroup
}

// BaseContentType ...
type BaseContentType struct {
	IdentificationGroup *IdentificationGroup
	ClassificationGroup *ClassificationGroup
	AnnotationGroup     *AnnotationGroup
	VersioningGroup     *VersioningGroup
}

// MarkerType ...
type MarkerType struct {
}

// InlineType ...
type InlineType struct {
	Marker *MarkerType `xml:"marker"`
	Inline *InlineType `xml:"inline"`
}

// BlockType ...
type BlockType struct {
}

// TextType ...
type TextType struct {
}

// ContentType ...
type ContentType struct {
	OrientationAttr string `xml:"orientation,attr,omitempty"`
}

// Marker ...
type Marker *MarkerType

// Inline ...
type Inline *InlineType

// Block ...
type Block *BlockType

// Content ...
type Content *ContentType

// LawDocType ...
type LawDocType struct {
	Meta     *MetaType     `xml:"meta"`
	Main     *MainType     `xml:"main"`
	Block    *BlockType    `xml:"block"`
	Appendix *AppendixType `xml:"appendix"`
}

// GenericDocType ...
type GenericDocType struct {
	Meta     *MetaType       `xml:"meta"`
	Content  *ContentType    `xml:"content"`
	Appendix []*AppendixType `xml:"appendix"`
}

// MetaType ...
type MetaType struct {
	Property *PropertyType `xml:"property"`
	Set      *SetType      `xml:"set"`
}

// PropertyType ...
type PropertyType struct {
	DateGroup      *DateGroup
	ValueGroup     *ValueGroup
	ReferenceGroup *ReferenceGroup
	TypeAttr       string `xml:"type,attr,omitempty"`
}

// SetType ...
type SetType struct {
	TypeAttr string        `xml:"type,attr,omitempty"`
	Property *PropertyType `xml:"property"`
	Set      *SetType      `xml:"set"`
}

// TocType ...
type TocType struct {
	GenerateAttr     bool `xml:"generate,attr,omitempty"`
	HeadingStructure *HeadingStructure
	TocItem          *TocItemType `xml:"tocItem"`
	Layout           *LayoutType  `xml:"layout"`
}

// TocItemType ...
type TocItemType struct {
	DescriptionGroup *DescriptionGroup
	HeadingStructure *HeadingStructure
	TocItem          []*TocItemType `xml:"tocItem"`
	Content          []*ContentType `xml:"content"`
}

// MainType ...
type MainType struct {
	NoteStructure     *NoteStructure
	PreambleStructure *PreambleStructure
	LevelStructure    *LevelStructure
	Property          *PropertyType  `xml:"property"`
	Block             *BlockType     `xml:"block"`
	Statement         *StatementType `xml:"statement"`
	Toc               *TocType       `xml:"toc"`
}

// StatementType ...
type StatementType struct {
	DescriptionGroup *DescriptionGroup
	Marker           *MarkerType  `xml:"marker"`
	Inline           *InlineType  `xml:"inline"`
	Block            *BlockType   `xml:"block"`
	Text             *TextType    `xml:"text"`
	Content          *ContentType `xml:"content"`
	Level            *LevelType   `xml:"level"`
}

// PreambleType ...
type PreambleType struct {
	DescriptionGroup *DescriptionGroup
	HeadingStructure *HeadingStructure
	RecitalStructure []*RecitalStructure
	EnactingFormula  *StatementType `xml:"enactingFormula"`
}

// LevelType ...
type LevelType struct {
	DescriptionGroup *DescriptionGroup
	NumStructure     *NumStructure
	HeadingStructure *HeadingStructure
	TocStructure     []*TocStructure
	LevelStructure   *LevelStructure
}

// NumType ...
type NumType struct {
	ValueGroup *ValueGroup
}

// HeadingType ...
type HeadingType struct {
}

// InstructionType ...
type InstructionType struct {
	Ref           *RefType           `xml:"ref"`
	Inline        *InlineType        `xml:"inline"`
	Marker        *MarkerType        `xml:"marker"`
	Action        []*ActionType      `xml:"action"`
	Level         []*LevelType       `xml:"level"`
	QuotedText    *QuotedTextType    `xml:"quotedText"`
	QuotedContent *QuotedContentType `xml:"quotedContent"`
}

// ActionType ...
type ActionType struct {
	ReferenceGroup *ReferenceGroup
	AmendingGroup  *AmendingGroup
	ActionGroup    *ActionGroup
}

// NotesType ...
type NotesType struct {
	NoteGroup  *NoteGroup
	Heading    *HeadingType   `xml:"heading"`
	Subheading []*HeadingType `xml:"subheading"`
	Note       []*NoteType    `xml:"note"`
	Layout     *LayoutType    `xml:"layout"`
}

// NoteType ...
type NoteType struct {
	NoteGroup *NoteGroup
	DateGroup *DateGroup
}

// AppendixType ...
type AppendixType struct {
	DescriptionGroup *DescriptionGroup
	LinkGroup        *LinkGroup
	OrientationAttr  string `xml:"orientation,attr,omitempty"`
	NumStructure     *NumStructure
	HeadingStructure *HeadingStructure
	TocStructure     *TocStructure
	LevelStructure   *LevelStructure
	Block            *BlockType `xml:"block"`
}

// SignaturesType ...
type SignaturesType struct {
	P         *PType           `xml:"p"`
	Signature []*SignatureType `xml:"signature"`
	Layout    *LayoutType      `xml:"layout"`
	Date      time.Time        `xml:"date"`
}

// Name ...
type Name struct {
	XMLName xml.Name `xml:"name"`
}

// Role ...
type Role struct {
	XMLName xml.Name `xml:"role"`
}

// Affiliation ...
type Affiliation struct {
	XMLName xml.Name `xml:"affiliation"`
}

// SignatureType ...
type SignatureType struct {
	Name        *Name        `xml:"name"`
	Role        *Role        `xml:"role"`
	Affiliation *Affiliation `xml:"affiliation"`
	Date        time.Time    `xml:"date"`
}

// RefType ...
type RefType struct {
	AmendingGroup *AmendingGroup
}

// DateType ...
type DateType struct {
	DateGroup *DateGroup
}

// QuotedTextType ...
type QuotedTextType struct {
	OriginAttr string `xml:"origin,attr,omitempty"`
}

// QuotedContentType ...
type QuotedContentType struct {
	OriginAttr string `xml:"origin,attr,omitempty"`
}

// NoteStructure ...
type NoteStructure struct {
	Note  *NoteType
	Notes *NotesType
}

// NumStructure ...
type NumStructure struct {
	Num           []*NumType
	NoteStructure []*NoteStructure
}

// HeadingStructure ...
type HeadingStructure struct {
	Heading       []*HeadingType
	Subheading    []*HeadingType
	NoteStructure []*NoteStructure
}

// TocStructure ...
type TocStructure struct {
	Toc           *TocType
	NoteStructure []*NoteStructure
}

// StatementStructure ...
type StatementStructure struct {
	Statement     *StatementType
	NoteStructure []*NoteStructure
}

// RecitalStructure ...
type RecitalStructure struct {
	Recital       *StatementType
	NoteStructure []*NoteStructure
}

// PreambleStructure ...
type PreambleStructure struct {
	Preamble        *PreambleType
	EnactingFormula *StatementType
	NoteStructure   []*NoteStructure
}

// LevelStructure ...
type LevelStructure struct {
	Instruction   []*InstructionType
	Content       []*ContentType
	Text          *TextType
	Level         *LevelType
	CrossHeading  *HeadingType
	NoteStructure []*NoteStructure
	NoteStructure []*NoteStructure
	NoteStructure []*NoteStructure
}

// LawDoc ...
type LawDoc *LawDocType

// Document ...
type Document *GenericDocType

// Meta ...
type Meta *MetaType

// Property ...
type Property *PropertyType

// Set ...
type Set *SetType

// Toc ...
type Toc *TocType

// TocItem ...
type TocItem *TocItemType

// Main ...
type Main *MainType

// Statement ...
type Statement *StatementType

// Preamble ...
type Preamble *PreambleType

// Recital ...
type Recital *StatementType

// EnactingFormula ...
type EnactingFormula *StatementType

// Level ...
type Level *LevelType

// Num ...
type Num *NumType

// Text ...
type Text *TextType

// Heading ...
type Heading *HeadingType

// Subheading ...
type Subheading *HeadingType

// CrossHeading ...
type CrossHeading *HeadingType

// Instruction ...
type Instruction *InstructionType

// Action ...
type Action *ActionType

// Notes ...
type Notes *NotesType

// Note ...
type Note *NoteType

// Appendix ...
type Appendix *AppendixType

// Signatures ...
type Signatures *SignaturesType

// Signature ...
type Signature *SignatureType

// Ref ...
type Ref *RefType

// Date ...
type Date *DateType

// QuotedText ...
type QuotedText *QuotedTextType

// QuotedContent ...
type QuotedContent *QuotedContentType

// LayoutType ...
type LayoutType struct {
	OrientationAttr string `xml:"orientation,attr,omitempty"`
	NoteStructure   *NoteStructure
	Header          *RowType     `xml:"header"`
	Row             *RowType     `xml:"row"`
	TocItem         *TocItemType `xml:"tocItem"`
	Block           *BlockType   `xml:"block"`
	Content         *ContentType `xml:"content"`
}

// RowType ...
type RowType struct {
	Column []*ColumnType `xml:"column"`
}

// ColumnType ...
type ColumnType struct {
	CellGroup *CellGroup
}

// PType ...
type PType struct {
}

// BrType ...
type BrType struct {
}

// ImgType ...
type ImgType struct {
	LinkGroup       *LinkGroup
	OrientationAttr string `xml:"orientation,attr,omitempty"`
}

// Layout ...
type Layout *LayoutType

// Header ...
type Header *RowType

// Row ...
type Row *RowType

// Column ...
type Column *ColumnType

// P ...
type P *PType

// Br ...
type Br *BrType

// Img ...
type Img *ImgType

// Center ...
type Center *ContentType

// FillIn ...
type FillIn *ContentType

// CheckBox ...
type CheckBox *ContentType

// B ...
type B *InlineType

// I ...
type I *InlineType

// Sub ...
type Sub *InlineType

// Sup ...
type Sup *InlineType

// Del ...
type Del *InlineType

// Ins ...
type Ins *InlineType

// Bill ...
type Bill *LawDocType

// Statute ...
type Statute *LawDocType

// Resolution ...
type Resolution *LawDocType

// Amendment ...
type Amendment *LawDocType

// UscDoc ...
type UscDoc *LawDocType

// DocNumber ...
type DocNumber *PropertyType

// DocPublicationName ...
type DocPublicationName *PropertyType

// DocReleasePoint ...
type DocReleasePoint *PropertyType

// DocTitle ...
type DocTitle *StatementType

// LongTitle ...
type LongTitle *StatementType

// ShortTitle ...
type ShortTitle *InlineType

// Term ...
type Term *InlineType

// Preliminary ...
type Preliminary *LevelType

// Title ...
type Title *LevelType

// Subtitle ...
type Subtitle *LevelType

// Part ...
type Part *LevelType

// Subpart ...
type Subpart *LevelType

// Division ...
type Division *LevelType

// Subdivision ...
type Subdivision *LevelType

// Chapter ...
type Chapter *LevelType

// Subchapter ...
type Subchapter *LevelType

// Article ...
type Article *LevelType

// Subarticle ...
type Subarticle *LevelType

// Section ...
type Section *LevelType

// Subsection ...
type Subsection *LevelType

// Paragraph ...
type Paragraph *LevelType

// Subparagraph ...
type Subparagraph *LevelType

// Clause ...
type Clause *LevelType

// Subclause ...
type Subclause *LevelType

// Item ...
type Item *LevelType

// Subitem ...
type Subitem *LevelType

// Subsubitem ...
type Subsubitem *LevelType

// Def ...
type Def *TextType

// Chapeau ...
type Chapeau *TextType

// Continuation ...
type Continuation *TextType

// Proviso ...
type Proviso *TextType

// AmendingFormula ...
type AmendingFormula *InstructionType

// SourceCredit ...
type SourceCredit *NoteType

// StatutoryNote ...
type StatutoryNote *NoteType

// EditorialNote ...
type EditorialNote *NoteType

// ChangeNote ...
type ChangeNote *NoteType

// Made ...
type Made *SignaturesType

// Approved ...
type Approved *SignaturesType

// Schedule ...
type Schedule *AppendixType
