// Code generated by xgen. DO NOT EDIT.

export class Project {
	Extend: string;
	PomVersion: string;
	Id: string;
	Name: string;
	GroupId: string;
	CurrentVersion: string;
	Organization: Organization;
	InceptionYear: string;
	Package: string;
	Logo: string;
	GumpRepositoryId: string;
	Description: string;
	ShortDescription: string;
	Url: string;
	IssueTrackingUrl: string;
	SiteAddress: string;
	SiteDirectory: string;
	DistributionSite: string;
	DistributionDirectory: string;
	Repository: Repository;
	Versions: Versions;
	Branches: Branches;
	MailingLists: MailingLists;
	Developers: Developers;
	Contributors: Contributors;
	Licenses: Licenses;
	Dependencies: Dependencies;
	Build: Build;
	Reports: Reports;
	Properties: Properties;
}

export type Extend = string;

export type Connection = string;

export type DeveloperConnection = string;

export type CurrentVersion = string;

export type Description = string;

export type DistributionSite = string;

export type DistributionDirectory = string;

export type Name = string;

export type GroupId = string;

export type ArtifactId = string;

export type GumpRepositoryId = string;

export type Id = string;

export type InceptionYear = string;

export type IssueTrackingUrl = string;

export type Logo = string;

export type Package = string;

export type PomVersion = string;

export type ShortDescription = string;

export type SiteAddress = string;

export type SiteDirectory = string;

export type Url = string;

export class Repository {
	Connection: string;
	DeveloperConnection: string;
	Url: string;
}

export class Organization {
	Name: string;
	Url: string;
	Logo: string;
}

export class Versions {
	Version: Array<Version>;
}

export class Version {
	Id: string;
	Name: string;
	Tag: string;
}

export type Tag = string;

export class Branches {
	Branch: Array<Branch>;
}

export class Branch {
	Tag: string;
}

export class MailingLists {
	MailingList: Array<MailingList>;
}

export class MailingList {
	Name: string;
	Subscribe: string;
	Unsubscribe: string;
	Archive: string;
}

export type Subscribe = string;

export type Unsubscribe = string;

export type Archive = string;

export class Developers {
	Developer: Array<Developer>;
}

export class Developer {
	ContactDetails: ContactDetails;
	Name: string;
	Id: string;
}

export class ContactDetails {
	Email: string;
	Organization: string;
	Roles: Roles;
	Url: string;
	Timezone: number;
}

export type Email = string;

export class Roles {
	Role: string;
}

export type Role = string;

export type TimezoneType = number;

export type Timezone = number;

export class Contributors {
	Contributor: Array<Contributor>;
}

export class Contributor {
	ContactDetails: ContactDetails;
	Name: string;
}

export class Licenses {
	License: Array<License>;
}

export class License {
	Name: string;
	Url: string;
	Distribution: string;
}

export type Distribution = string;

export class Dependencies {
	Dependency: Array<Dependency>;
}

export class Dependency {
	Id: string;
	GroupId: string;
	ArtifactId: string;
	Version: string;
	Jar: string;
	Type: string;
	Url: string;
	Properties: Properties;
}

export type Type = string;

export type Jar = string;

export class Build {
	NagEmailAddress: string;
	SourceDirectory: string;
	SourceModifications: SourceModifications;
	UnitTestSourceDirectory: string;
	IntegrationUnitTestSourceDirectory: string;
	AspectSourceDirectory: string;
	UnitTest: UnitTest;
	Resources: Resources;
}

export type NagEmailAddress = string;

export type SourceDirectory = string;

export class SourceModifications {
	SourceModification: Array<SourceModification>;
}

export class SourceModification {
	ClassName: string;
	Includes: Array<Includes>;
	Excludes: Array<Excludes>;
}

export type UnitTestSourceDirectory = string;

export type IntegrationUnitTestSourceDirectory = string;

export type AspectSourceDirectory = string;

export class UnitTest {
	Includes: Array<Includes>;
	Excludes: Array<Excludes>;
	Resources: Resources;
}

export class Includes {
	Include: string;
}

export class Excludes {
	Exclude: string;
}

export type Include = string;

export type Exclude = string;

export class Resources {
	Resource: Array<Resource>;
}

export type Directory = string;

export type TargetPath = string;

export type Filtering = boolean;

export class Resource {
	Directory: string;
	TargetPath: string;
	Includes: Array<Includes>;
	Excludes: Array<Excludes>;
	Filtering: boolean;
}

export class Reports {
	Report: string;
}

export class Properties {
}

export type Classloader = string;
