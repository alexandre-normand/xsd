// Code generated by xgen. DO NOT EDIT.

export type Project = Model;

export class Licenses {
	License: Array<License>;
}

export class Developers {
	Developer: Array<Developer>;
}

export class Contributors {
	Contributor: Array<Contributor>;
}

export class MailingLists {
	MailingList: Array<MailingList>;
}

export class Modules {
	Module: string;
}

export class Properties {
}

export class Dependencies {
	Dependency: Array<Dependency>;
}

export class Repositories {
	Repository: Array<Repository>;
}

export class PluginRepositories {
	PluginRepository: Array<Repository>;
}

export class Reports {
}

export class Profiles {
	Profile: Array<Profile>;
}

export class Model {
	ChildProjectUrlInheritAppendPathAttr: string | null;
	ModelVersion: string;
	Parent: Parent;
	GroupId: string;
	ArtifactId: string;
	Version: string;
	Packaging: string;
	Name: string;
	Description: string;
	Url: string;
	InceptionYear: string;
	Organization: Organization;
	Licenses: Licenses;
	Developers: Developers;
	Contributors: Contributors;
	MailingLists: MailingLists;
	Prerequisites: Prerequisites;
	Modules: Modules;
	Scm: Scm;
	IssueManagement: IssueManagement;
	CiManagement: CiManagement;
	DistributionManagement: DistributionManagement;
	Properties: Properties;
	DependencyManagement: DependencyManagement;
	Dependencies: Dependencies;
	Repositories: Repositories;
	PluginRepositories: PluginRepositories;
	Build: Build;
	Reports: Reports;
	Reporting: Reporting;
	Profiles: Profiles;
}

export class License {
	Name: string;
	Url: string;
	Distribution: string;
	Comments: string;
}

export class Notifiers {
	Notifier: Array<Notifier>;
}

export class CiManagement {
	System: string;
	Url: string;
	Notifiers: Notifiers;
}

export class Configuration {
}

export class Notifier {
	Type: string;
	SendOnError: boolean;
	SendOnFailure: boolean;
	SendOnSuccess: boolean;
	SendOnWarning: boolean;
	Address: string;
	Configuration: Configuration;
}

export class Scm {
	ChildScmConnectionInheritAppendPathAttr: string | null;
	ChildScmDeveloperConnectionInheritAppendPathAttr: string | null;
	ChildScmUrlInheritAppendPathAttr: string | null;
	Connection: string;
	DeveloperConnection: string;
	Tag: string;
	Url: string;
}

export class IssueManagement {
	System: string;
	Url: string;
}

export class DependencyManagement {
	Dependencies: Dependencies;
}

export class Exclusions {
	Exclusion: Array<Exclusion>;
}

export class Dependency {
	GroupId: string;
	ArtifactId: string;
	Version: string;
	Type: string;
	Classifier: string;
	Scope: string;
	SystemPath: string;
	Exclusions: Exclusions;
	Optional: string;
}

export class Exclusion {
	ArtifactId: string;
	GroupId: string;
}

export class Parent {
	GroupId: string;
	ArtifactId: string;
	Version: string;
	RelativePath: string;
}

export class Roles {
	Role: string;
}

export class Developer {
	Id: string;
	Name: string;
	Email: string;
	Url: string;
	Organization: string;
	OrganizationUrl: string;
	Roles: Roles;
	Timezone: string;
	Properties: Properties;
}

export class OtherArchives {
	OtherArchive: string;
}

export class MailingList {
	Name: string;
	Subscribe: string;
	Unsubscribe: string;
	Post: string;
	Archive: string;
	OtherArchives: OtherArchives;
}

export class Contributor {
	Name: string;
	Email: string;
	Url: string;
	Organization: string;
	OrganizationUrl: string;
	Roles: Roles;
	Timezone: string;
	Properties: Properties;
}

export class Organization {
	Name: string;
	Url: string;
}

export class DistributionManagement {
	Repository: DeploymentRepository;
	SnapshotRepository: DeploymentRepository;
	Site: Site;
	DownloadUrl: string;
	Relocation: Relocation;
	Status: string;
}

export class DeploymentRepository {
	UniqueVersion: boolean;
	Releases: RepositoryPolicy;
	Snapshots: RepositoryPolicy;
	Id: string;
	Name: string;
	Url: string;
	Layout: string;
}

export class RepositoryPolicy {
	Enabled: string;
	UpdatePolicy: string;
	ChecksumPolicy: string;
}

export class Relocation {
	GroupId: string;
	ArtifactId: string;
	Version: string;
	Message: string;
}

export class Site {
	ChildSiteUrlInheritAppendPathAttr: string | null;
	Id: string;
	Name: string;
	Url: string;
}

export class Plugins {
	Plugin: Array<ReportPlugin>;
}

export class Reporting {
	ExcludeDefaults: string;
	OutputDirectory: string;
	Plugins: Plugins;
}

export class ReportSets {
	ReportSet: Array<ReportSet>;
}

export class ReportPlugin {
	GroupId: string;
	ArtifactId: string;
	Version: string;
	ReportSets: ReportSets;
	Inherited: string;
	Configuration: Configuration;
}

export class ReportSet {
	Id: string;
	Reports: Reports;
	Inherited: string;
	Configuration: Configuration;
}

export class Profile {
	Id: string;
	Activation: Activation;
	Build: BuildBase;
	Modules: Modules;
	DistributionManagement: DistributionManagement;
	Properties: Properties;
	DependencyManagement: DependencyManagement;
	Dependencies: Dependencies;
	Repositories: Repositories;
	PluginRepositories: PluginRepositories;
	Reports: Reports;
	Reporting: Reporting;
}

export class Activation {
	ActiveByDefault: boolean;
	Jdk: string;
	Os: ActivationOS;
	Property: ActivationProperty;
	File: ActivationFile;
}

export class ActivationProperty {
	Name: string;
	Value: string;
}

export class ActivationFile {
	Missing: string;
	Exists: string;
}

export class ActivationOS {
	Name: string;
	Family: string;
	Arch: string;
	Version: string;
}

export class Repository {
	Releases: RepositoryPolicy;
	Snapshots: RepositoryPolicy;
	Id: string;
	Name: string;
	Url: string;
	Layout: string;
}

export class Resources {
	Resource: Array<Resource>;
}

export class TestResources {
	TestResource: Array<Resource>;
}

export class Filters {
	Filter: string;
}

export class BuildBase {
	DefaultGoal: string;
	Resources: Resources;
	TestResources: TestResources;
	Directory: string;
	FinalName: string;
	Filters: Filters;
	PluginManagement: PluginManagement;
	Plugins: Plugins;
}

export class Executions {
	Execution: Array<PluginExecution>;
}

export class Goals {
}

export class Plugin {
	GroupId: string;
	ArtifactId: string;
	Version: string;
	Extensions: string;
	Executions: Executions;
	Dependencies: Dependencies;
	Goals: Goals;
	Inherited: string;
	Configuration: Configuration;
}

export class PluginExecution {
	Id: string;
	Phase: string;
	Goals: Goals;
	Inherited: string;
	Configuration: Configuration;
}

export class Includes {
	Include: string;
}

export class Excludes {
	Exclude: string;
}

export class Resource {
	TargetPath: string;
	Filtering: string;
	Directory: string;
	Includes: Includes;
	Excludes: Excludes;
}

export class PluginManagement {
	Plugins: Plugins;
}

export class Prerequisites {
	Maven: string;
}

export class Extensions {
	Extension: Array<Extension>;
}

export class Build {
	SourceDirectory: string;
	ScriptSourceDirectory: string;
	TestSourceDirectory: string;
	OutputDirectory: string;
	TestOutputDirectory: string;
	Extensions: Extensions;
	DefaultGoal: string;
	Resources: Resources;
	TestResources: TestResources;
	Directory: string;
	FinalName: string;
	Filters: Filters;
	PluginManagement: PluginManagement;
	Plugins: Plugins;
}

export class Extension {
	GroupId: string;
	ArtifactId: string;
	Version: string;
}
