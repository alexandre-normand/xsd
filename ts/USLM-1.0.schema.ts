// Copyright 2020 The xgen Authors. All rights reserved.
//
// DO NOT EDIT: generated by xgen XSD generator
//
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

export class DateSimpleType {
	DateTime: string;
	Date: string;
}

export class OccurrenceSimpleType {
	PositiveInteger: number;
	ChoiceEnum: ChoiceEnum;
}

export type ShortStringSimpleType = string;

export type MediumStringSimpleType = string;

export type LongStringSimpleType = string;

export enum ChoiceEnum {
	all = 'all',
	none = 'none',
	first = 'first',
	last = 'last',
}

export enum PropertyTypeEnum {
	string = 'string',
	number = 'number',
	token = 'token',
	boolean = 'boolean',
	text = 'text',
	date = 'date',
	url = 'url',
}

export enum SetTypeEnum {
	bag = 'bag',
	seq = 'seq',
	grp = 'grp',
	alt = 'alt',
	res = 'res',
}

export enum StatusEnum {
	proposed = 'proposed',
	withdrawn = 'withdrawn',
	cancelled = 'cancelled',
	pending = 'pending',
	operational = 'operational',
	suspended = 'suspended',
	renumbered = 'renumbered',
	repealed = 'repealed',
	expired = 'expired',
	terminated = 'terminated',
	hadItsEffect = 'hadItsEffect',
	omitted = 'omitted',
	notAdopted = 'notAdopted',
	transferred = 'transferred',
	redesignated = 'redesignated',
	reserved = 'reserved',
	vacant = 'vacant',
	crossReference = 'crossReference',
	unknown = 'unknown',
}

export enum ActionTypeEnum {
	enact = 'enact',
	add = 'add',
	amend = 'amend',
	substitute = 'substitute',
	renumber = 'renumber',
	repeal = 'repeal',
	insert = 'insert',
	delete = 'delete',
}

export enum PositionEnum {
	start = 'start',
	before = 'before',
	inside = 'inside',
	after = 'after',
	end = 'end',
}

export enum OrientationEnum {
	portrait = 'portrait',
	landscape = 'landscape',
}

export enum NoteTypeEnum {
	inline = 'inline',
	footnote = 'footnote',
	endnote = 'endnote',
	uscNote = 'uscNote',
}

export class IdentificationGroup {
	IdAttr: string | null;
	NameAttr: string | null;
	TemporalIdAttr: string | null;
	IdentifierAttr: string | null;
}

export class ClassificationGroup {
	RoleAttr: string | null;
	ClassAttr: string | null;
	StyleAttr: string | null;
}

export class AnnotationGroup {
	NoteAttr: string | null;
	AltAttr: string | null;
	MetaAttr: string | null;
	MiscAttr: string | null;
	DraftingTipAttr: string | null;
	CodificationTipAttr: string | null;
}

export class DescriptionGroup {
	TitleAttr: string | null;
	BriefAttr: string | null;
	SortOrderAttr: number | null;
}

export class ReferenceGroup {
	HrefAttr: string | null;
	IdrefAttr: string | null;
	PortionAttr: string | null;
}

export class AmendingGroup {
	PosAttr: string | null;
	PosTextAttr: string | null;
	PosCountAttr: number | null;
}

export class LinkGroup {
	SrcAttr: string | null;
}

export class ValueGroup {
	ValueAttr: string | null;
	StartValueAttr: string | null;
	EndValueAttr: string | null;
}

export class NoteGroup {
	TypeAttr: string | null;
	TopicAttr: string | null;
}

export class DateGroup {
	DateAttr: DateSimpleType | null;
	StartDateAttr: DateSimpleType | null;
	EndDateAttr: DateSimpleType | null;
}

export class VersioningGroup {
	StartPeriodAttr: DateSimpleType | null;
	EndPeriodAttr: DateSimpleType | null;
	StatusAttr: string | null;
	PartialAttr: boolean | null;
}

export class ActionGroup {
	TypeAttr: string | null;
	OccurrenceAttr: OccurrenceSimpleType | null;
	CommencementDateAttr: DateSimpleType | null;
}

export class CellGroup {
	ColspanAttr: number | null;
	RowspanAttr: number | null;
	LeadersAttr: string | null;
}

export class BaseType {
	IdentificationGroup: IdentificationGroup;
	ClassificationGroup: ClassificationGroup;
	AnnotationGroup: AnnotationGroup;
	VersioningGroup: VersioningGroup;
}

export class BaseBlockType {
	IdentificationGroup: IdentificationGroup;
	ClassificationGroup: ClassificationGroup;
	AnnotationGroup: AnnotationGroup;
	VersioningGroup: VersioningGroup;
}

export class BaseContentType {
	IdentificationGroup: IdentificationGroup;
	ClassificationGroup: ClassificationGroup;
	AnnotationGroup: AnnotationGroup;
	VersioningGroup: VersioningGroup;
}

export class MarkerType {
}

export class InlineType {
	Marker: Array<MarkerType>;
	Inline: Array<InlineType>;
}

export class BlockType {
}

export class TextType {
}

export class ContentType {
	OrientationAttr: string | null;
}

export type Marker = MarkerType;

export type Inline = InlineType;

export type Block = BlockType;

export type Content = ContentType;

export class LawDocType {
	Meta: Array<MetaType>;
	Main: Array<MainType>;
	Block: Array<BlockType>;
	Appendix: Array<AppendixType>;
}

export class GenericDocType {
	Meta: Array<MetaType>;
	Content: Array<ContentType>;
	Appendix: Array<AppendixType>;
}

export class MetaType {
	Property: Array<PropertyType>;
	Set: Array<SetType>;
}

export class PropertyType {
	DateGroup: DateGroup;
	ValueGroup: ValueGroup;
	ReferenceGroup: ReferenceGroup;
	TypeAttr: string | null;
}

export class SetType {
	TypeAttr: string | null;
	Property: Array<PropertyType>;
	Set: Array<SetType>;
}

export class TocType {
	GenerateAttr: boolean | null;
	HeadingStructure: HeadingStructure;
	TocItem: Array<TocItemType>;
	Layout: Array<LayoutType>;
}

export class TocItemType {
	DescriptionGroup: DescriptionGroup;
	HeadingStructure: HeadingStructure;
	TocItem: Array<TocItemType>;
	Content: Array<ContentType>;
}

export class MainType {
	NoteStructure: NoteStructure;
	PreambleStructure: PreambleStructure;
	LevelStructure: LevelStructure;
	Property: Array<PropertyType>;
	Block: Array<BlockType>;
	Statement: Array<StatementType>;
	Toc: Array<TocType>;
}

export class StatementType {
	DescriptionGroup: DescriptionGroup;
	Marker: Array<MarkerType>;
	Inline: Array<InlineType>;
	Block: Array<BlockType>;
	Text: Array<TextType>;
	Content: Array<ContentType>;
	Level: Array<LevelType>;
}

export class PreambleType {
	DescriptionGroup: DescriptionGroup;
	HeadingStructure: HeadingStructure;
	RecitalStructure: Array<RecitalStructure>;
	EnactingFormula: Array<StatementType>;
}

export class LevelType {
	DescriptionGroup: DescriptionGroup;
	NumStructure: NumStructure;
	HeadingStructure: HeadingStructure;
	TocStructure: Array<TocStructure>;
	LevelStructure: LevelStructure;
}

export class NumType {
	ValueGroup: ValueGroup;
}

export class HeadingType {
}

export class InstructionType {
	Ref: Array<RefType>;
	Inline: Array<InlineType>;
	Marker: Array<MarkerType>;
	Action: Array<ActionType>;
	Level: Array<LevelType>;
	QuotedText: Array<QuotedTextType>;
	QuotedContent: Array<QuotedContentType>;
}

export class ActionType {
	ReferenceGroup: ReferenceGroup;
	AmendingGroup: AmendingGroup;
	ActionGroup: ActionGroup;
}

export class NotesType {
	NoteGroup: NoteGroup;
	Heading: Array<HeadingType>;
	Subheading: Array<HeadingType>;
	Note: Array<NoteType>;
	Layout: Array<LayoutType>;
}

export class NoteType {
	NoteGroup: NoteGroup;
	DateGroup: DateGroup;
}

export class AppendixType {
	DescriptionGroup: DescriptionGroup;
	LinkGroup: LinkGroup;
	OrientationAttr: string | null;
	NumStructure: NumStructure;
	HeadingStructure: HeadingStructure;
	TocStructure: TocStructure;
	LevelStructure: LevelStructure;
	Block: Array<BlockType>;
}

export class SignaturesType {
	P: Array<PType>;
	Signature: Array<SignatureType>;
	Layout: Array<LayoutType>;
	Date: Array<string>;
}

export class Name {
}

export class Role {
}

export class Affiliation {
}

export class SignatureType {
	Name: Array<Name>;
	Role: Array<Role>;
	Affiliation: Array<Affiliation>;
	Date: Array<string>;
}

export class RefType {
	AmendingGroup: AmendingGroup;
}

export class DateType {
	DateGroup: DateGroup;
}

export class QuotedTextType {
	OriginAttr: string | null;
}

export class QuotedContentType {
	OriginAttr: string | null;
}

export class NoteStructure {
	Note: NoteType;
	Notes: NotesType;
}

export class NumStructure {
	Num: Array<NumType>;
	NoteStructure: Array<NoteStructure>;
}

export class HeadingStructure {
	Heading: Array<HeadingType>;
	Subheading: Array<HeadingType>;
	NoteStructure: Array<NoteStructure>;
}

export class TocStructure {
	Toc: TocType;
	NoteStructure: Array<NoteStructure>;
}

export class StatementStructure {
	Statement: StatementType;
	NoteStructure: Array<NoteStructure>;
}

export class RecitalStructure {
	Recital: StatementType;
	NoteStructure: Array<NoteStructure>;
}

export class PreambleStructure {
	Preamble: PreambleType;
	EnactingFormula: StatementType;
	NoteStructure: Array<NoteStructure>;
}

export class LevelStructure {
	Instruction: Array<InstructionType>;
	Content: Array<ContentType>;
	Text: TextType;
	Level: LevelType;
	CrossHeading: HeadingType;
	NoteStructure: Array<NoteStructure>;
	NoteStructure: Array<NoteStructure>;
	NoteStructure: Array<NoteStructure>;
}

export type LawDoc = LawDocType;

export type Document = GenericDocType;

export type Meta = MetaType;

export type Property = PropertyType;

export type Set = SetType;

export type Toc = TocType;

export type TocItem = TocItemType;

export type Main = MainType;

export type Statement = StatementType;

export type Preamble = PreambleType;

export type Recital = StatementType;

export type EnactingFormula = StatementType;

export type Level = LevelType;

export type Num = NumType;

export type Text = TextType;

export type Heading = HeadingType;

export type Subheading = HeadingType;

export type CrossHeading = HeadingType;

export type Instruction = InstructionType;

export type Action = ActionType;

export type Notes = NotesType;

export type Note = NoteType;

export type Appendix = AppendixType;

export type Signatures = SignaturesType;

export type Signature = SignatureType;

export type Ref = RefType;

export type Date = DateType;

export type QuotedText = QuotedTextType;

export type QuotedContent = QuotedContentType;

export class LayoutType {
	OrientationAttr: string | null;
	NoteStructure: NoteStructure;
	Header: Array<RowType>;
	Row: Array<RowType>;
	TocItem: Array<TocItemType>;
	Block: Array<BlockType>;
	Content: Array<ContentType>;
}

export class RowType {
	Column: Array<ColumnType>;
}

export class ColumnType {
	CellGroup: CellGroup;
}

export class PType {
}

export class BrType {
}

export class ImgType {
	LinkGroup: LinkGroup;
	OrientationAttr: string | null;
}

export type Layout = LayoutType;

export type Header = RowType;

export type Row = RowType;

export type Column = ColumnType;

export type P = PType;

export type Br = BrType;

export type Img = ImgType;

export type Center = ContentType;

export type FillIn = ContentType;

export type CheckBox = ContentType;

export type B = InlineType;

export type I = InlineType;

export type Sub = InlineType;

export type Sup = InlineType;

export type Del = InlineType;

export type Ins = InlineType;

export type Bill = LawDocType;

export type Statute = LawDocType;

export type Resolution = LawDocType;

export type Amendment = LawDocType;

export type UscDoc = LawDocType;

export type DocNumber = PropertyType;

export type DocPublicationName = PropertyType;

export type DocReleasePoint = PropertyType;

export type DocTitle = StatementType;

export type LongTitle = StatementType;

export type ShortTitle = InlineType;

export type Term = InlineType;

export type Preliminary = LevelType;

export type Title = LevelType;

export type Subtitle = LevelType;

export type Part = LevelType;

export type Subpart = LevelType;

export type Division = LevelType;

export type Subdivision = LevelType;

export type Chapter = LevelType;

export type Subchapter = LevelType;

export type Article = LevelType;

export type Subarticle = LevelType;

export type Section = LevelType;

export type Subsection = LevelType;

export type Paragraph = LevelType;

export type Subparagraph = LevelType;

export type Clause = LevelType;

export type Subclause = LevelType;

export type Item = LevelType;

export type Subitem = LevelType;

export type Subsubitem = LevelType;

export type Def = TextType;

export type Chapeau = TextType;

export type Continuation = TextType;

export type Proviso = TextType;

export type AmendingFormula = InstructionType;

export type SourceCredit = NoteType;

export type StatutoryNote = NoteType;

export type EditorialNote = NoteType;

export type ChangeNote = NoteType;

export type Made = SignaturesType;

export type Approved = SignaturesType;

export type Schedule = AppendixType;
