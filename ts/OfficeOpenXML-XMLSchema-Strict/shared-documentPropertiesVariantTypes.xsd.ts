// Code generated by xgen. DO NOT EDIT.

export enum ST_VectorBaseType {
	variant = 'variant',
	i1 = 'i1',
	i2 = 'i2',
	i4 = 'i4',
	i8 = 'i8',
	ui1 = 'ui1',
	ui2 = 'ui2',
	ui4 = 'ui4',
	ui8 = 'ui8',
	r4 = 'r4',
	r8 = 'r8',
	lpstr = 'lpstr',
	lpwstr = 'lpwstr',
	bstr = 'bstr',
	date = 'date',
	filetime = 'filetime',
	bool = 'bool',
	cy = 'cy',
	error = 'error',
	clsid = 'clsid',
}

export enum ST_ArrayBaseType {
	variant = 'variant',
	i1 = 'i1',
	i2 = 'i2',
	i4 = 'i4',
	int = 'int',
	ui1 = 'ui1',
	ui2 = 'ui2',
	ui4 = 'ui4',
	uint = 'uint',
	r4 = 'r4',
	r8 = 'r8',
	decimal = 'decimal',
	bstr = 'bstr',
	date = 'date',
	bool = 'bool',
	cy = 'cy',
	error = 'error',
}

export type ST_Cy = string;

export type ST_Error = string;

export class CT_Empty {
}

export class CT_Null {
}

export class CT_Vector {
	BaseTypeAttr: string;
	SizeAttr: number;
	Variant: CT_Variant;
	I1: any;
	I2: number;
	I4: number;
	I8: number;
	Ui1: any;
	Ui2: number;
	Ui4: number;
	Ui8: number;
	R4: number;
	R8: number;
	Lpstr: string;
	Lpwstr: string;
	Bstr: string;
	Date: string;
	Filetime: string;
	Bool: boolean;
	Cy: string;
	Error: string;
	Clsid: string;
}

export class CT_Array {
	LBoundsAttr: number;
	UBoundsAttr: number;
	BaseTypeAttr: string;
	Variant: CT_Variant;
	I1: any;
	I2: number;
	I4: number;
	Int: number;
	Ui1: any;
	Ui2: number;
	Ui4: number;
	Uint: number;
	R4: number;
	R8: number;
	Decimal: number;
	Bstr: string;
	Date: string;
	Bool: boolean;
	Error: string;
	Cy: string;
}

export class CT_Variant {
	Variant: CT_Variant;
	Vector: CT_Vector;
	Array: CT_Array;
	Blob: Array<any>;
	Oblob: Array<any>;
	Empty: CT_Empty;
	Null: CT_Null;
	I1: any;
	I2: number;
	I4: number;
	I8: number;
	Int: number;
	Ui1: any;
	Ui2: number;
	Ui4: number;
	Ui8: number;
	Uint: number;
	R4: number;
	R8: number;
	Decimal: number;
	Lpstr: string;
	Lpwstr: string;
	Bstr: string;
	Date: string;
	Filetime: string;
	Bool: boolean;
	Cy: string;
	Error: string;
	Stream: Array<any>;
	Ostream: Array<any>;
	Storage: Array<any>;
	Ostorage: Array<any>;
	Vstream: CT_Vstream;
	Clsid: string;
}

export class CT_Vstream {
	VersionAttr: string | null;
}

export type Variant = CT_Variant;

export type Vector = CT_Vector;

export type Array = CT_Array;

export type Blob = Array<any>;

export type Oblob = Array<any>;

export type Empty = CT_Empty;

export type Null = CT_Null;

export type I1 = any;

export type I2 = number;

export type I4 = number;

export type I8 = number;

export type Int = number;

export type Ui1 = any;

export type Ui2 = number;

export type Ui4 = number;

export type Ui8 = number;

export type Uint = number;

export type R4 = number;

export type R8 = number;

export type Decimal = number;

export type Lpstr = string;

export type Lpwstr = string;

export type Bstr = string;

export type Date = string;

export type Filetime = string;

export type Bool = boolean;

export type Cy = string;

export type Error = string;

export type Stream = Array<any>;

export type Ostream = Array<any>;

export type Storage = Array<any>;

export type Ostorage = Array<any>;

export type Vstream = CT_Vstream;

export type Clsid = string;
