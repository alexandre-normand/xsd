// Code generated by xgen. DO NOT EDIT.

package schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "Properties")
public class Properties {
	protected CT_Properties Properties;
}

// CT_Properties ...
public class CT_Properties {
	@XmlElement(required = true, name = "Template")
	protected List<String> Template;
	@XmlElement(required = true, name = "Manager")
	protected List<String> Manager;
	@XmlElement(required = true, name = "Company")
	protected List<String> Company;
	@XmlElement(required = true, name = "Pages")
	protected List<Integer> Pages;
	@XmlElement(required = true, name = "Words")
	protected List<Integer> Words;
	@XmlElement(required = true, name = "Characters")
	protected List<Integer> Characters;
	@XmlElement(required = true, name = "PresentationFormat")
	protected List<String> PresentationFormat;
	@XmlElement(required = true, name = "Lines")
	protected List<Integer> Lines;
	@XmlElement(required = true, name = "Paragraphs")
	protected List<Integer> Paragraphs;
	@XmlElement(required = true, name = "Slides")
	protected List<Integer> Slides;
	@XmlElement(required = true, name = "Notes")
	protected List<Integer> Notes;
	@XmlElement(required = true, name = "TotalTime")
	protected List<Integer> TotalTime;
	@XmlElement(required = true, name = "HiddenSlides")
	protected List<Integer> HiddenSlides;
	@XmlElement(required = true, name = "MMClips")
	protected List<Integer> MMClips;
	@XmlElement(required = true, name = "ScaleCrop")
	protected List<Boolean> ScaleCrop;
	@XmlElement(required = true, name = "HeadingPairs")
	protected List<CT_VectorVariant> HeadingPairs;
	@XmlElement(required = true, name = "TitlesOfParts")
	protected List<CT_VectorLpstr> TitlesOfParts;
	@XmlElement(required = true, name = "LinksUpToDate")
	protected List<Boolean> LinksUpToDate;
	@XmlElement(required = true, name = "CharactersWithSpaces")
	protected List<Integer> CharactersWithSpaces;
	@XmlElement(required = true, name = "SharedDoc")
	protected List<Boolean> SharedDoc;
	@XmlElement(required = true, name = "HyperlinkBase")
	protected List<String> HyperlinkBase;
	@XmlElement(required = true, name = "HLinks")
	protected List<CT_VectorVariant> HLinks;
	@XmlElement(required = true, name = "HyperlinksChanged")
	protected List<Boolean> HyperlinksChanged;
	@XmlElement(required = true, name = "DigSig")
	protected List<CT_DigSigBlob> DigSig;
	@XmlElement(required = true, name = "Application")
	protected List<String> Application;
	@XmlElement(required = true, name = "AppVersion")
	protected List<String> AppVersion;
	@XmlElement(required = true, name = "DocSecurity")
	protected List<Integer> DocSecurity;
}

// CT_VectorVariant ...
public class CT_VectorVariant {
	@XmlElement(required = true, name = "vt:vector")
	protected CT_Vector VtVector;
}

// CT_VectorLpstr ...
public class CT_VectorLpstr {
	@XmlElement(required = true, name = "vt:vector")
	protected CT_Vector VtVector;
}

// CT_DigSigBlob ...
public class CT_DigSigBlob {
	@XmlElement(required = true, name = "vt:blob")
	protected List<Byte> VtBlob;
}
