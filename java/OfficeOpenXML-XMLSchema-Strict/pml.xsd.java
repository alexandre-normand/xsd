// Code generated by xgen. DO NOT EDIT.

package schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;

// ST_TransitionSideDirectionType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TransitionSideDirectionType")
public class ST_TransitionSideDirectionType {
	protected String ST_TransitionSideDirectionType;
}

// ST_TransitionCornerDirectionType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TransitionCornerDirectionType")
public class ST_TransitionCornerDirectionType {
	protected String ST_TransitionCornerDirectionType;
}

// ST_TransitionInOutDirectionType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TransitionInOutDirectionType")
public class ST_TransitionInOutDirectionType {
	protected String ST_TransitionInOutDirectionType;
}

// CT_SideDirectionTransition ...
public class CT_SideDirectionTransition {
	@XmlAttribute(name = "dir")
	protected StringAttr Dir;
}

// CT_CornerDirectionTransition ...
public class CT_CornerDirectionTransition {
	@XmlAttribute(name = "dir")
	protected StringAttr Dir;
}

// ST_TransitionEightDirectionType ...
public class ST_TransitionEightDirectionType {
	@XmlElement(required = true)
	protected String ST_TransitionSideDirectionType;
	@XmlElement(required = true)
	protected String ST_TransitionCornerDirectionType;
}

// CT_EightDirectionTransition ...
public class CT_EightDirectionTransition {
	@XmlAttribute(name = "dir")
	protected ST_TransitionEightDirectionTypeAttr Dir;
}

// CT_OrientationTransition ...
public class CT_OrientationTransition {
	@XmlAttribute(name = "dir")
	protected StringAttr Dir;
}

// CT_InOutTransition ...
public class CT_InOutTransition {
	@XmlAttribute(name = "dir")
	protected StringAttr Dir;
}

// CT_OptionalBlackTransition ...
public class CT_OptionalBlackTransition {
	@XmlAttribute(name = "thruBlk")
	protected BooleanAttr ThruBlk;
}

// CT_SplitTransition ...
public class CT_SplitTransition {
	@XmlAttribute(name = "orient")
	protected StringAttr Orient;
	@XmlAttribute(name = "dir")
	protected StringAttr Dir;
}

// CT_WheelTransition ...
public class CT_WheelTransition {
	@XmlAttribute(name = "spokes")
	protected IntegerAttr Spokes;
}

// CT_TransitionStartSoundAction ...
public class CT_TransitionStartSoundAction {
	@XmlAttribute(name = "loop")
	protected BooleanAttr Loop;
	@XmlElement(required = true, name = "snd")
	protected CT_EmbeddedWAVAudioFile Snd;
}

// CT_TransitionSoundAction ...
public class CT_TransitionSoundAction {
	@XmlElement(required = true, name = "stSnd")
	protected CT_TransitionStartSoundAction StSnd;
	@XmlElement(required = true, name = "endSnd")
	protected CT_Empty EndSnd;
}

// ST_TransitionSpeed ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TransitionSpeed")
public class ST_TransitionSpeed {
	protected String ST_TransitionSpeed;
}

// CT_SlideTransition ...
public class CT_SlideTransition {
	@XmlAttribute(name = "spd")
	protected StringAttr Spd;
	@XmlAttribute(name = "advClick")
	protected BooleanAttr AdvClick;
	@XmlAttribute(name = "advTm")
	protected IntegerAttr AdvTm;
	@XmlElement(required = true, name = "blinds")
	protected CT_OrientationTransition Blinds;
	@XmlElement(required = true, name = "checker")
	protected CT_OrientationTransition Checker;
	@XmlElement(required = true, name = "circle")
	protected CT_Empty Circle;
	@XmlElement(required = true, name = "dissolve")
	protected CT_Empty Dissolve;
	@XmlElement(required = true, name = "comb")
	protected CT_OrientationTransition Comb;
	@XmlElement(required = true, name = "cover")
	protected CT_EightDirectionTransition Cover;
	@XmlElement(required = true, name = "cut")
	protected CT_OptionalBlackTransition Cut;
	@XmlElement(required = true, name = "diamond")
	protected CT_Empty Diamond;
	@XmlElement(required = true, name = "fade")
	protected CT_OptionalBlackTransition Fade;
	@XmlElement(required = true, name = "newsflash")
	protected CT_Empty Newsflash;
	@XmlElement(required = true, name = "plus")
	protected CT_Empty Plus;
	@XmlElement(required = true, name = "pull")
	protected CT_EightDirectionTransition Pull;
	@XmlElement(required = true, name = "push")
	protected CT_SideDirectionTransition Push;
	@XmlElement(required = true, name = "random")
	protected CT_Empty Random;
	@XmlElement(required = true, name = "randomBar")
	protected CT_OrientationTransition RandomBar;
	@XmlElement(required = true, name = "split")
	protected CT_SplitTransition Split;
	@XmlElement(required = true, name = "strips")
	protected CT_CornerDirectionTransition Strips;
	@XmlElement(required = true, name = "wedge")
	protected CT_Empty Wedge;
	@XmlElement(required = true, name = "wheel")
	protected CT_WheelTransition Wheel;
	@XmlElement(required = true, name = "wipe")
	protected CT_SideDirectionTransition Wipe;
	@XmlElement(required = true, name = "zoom")
	protected CT_InOutTransition Zoom;
	@XmlElement(required = true, name = "sndAc")
	protected CT_TransitionSoundAction SndAc;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// ST_TLTimeIndefinite ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeIndefinite")
public class ST_TLTimeIndefinite {
	protected String ST_TLTimeIndefinite;
}

// ST_TLTime ...
public class ST_TLTime {
	@XmlElement(required = true)
	protected Integer UnsignedInt;
	@XmlElement(required = true)
	protected String ST_TLTimeIndefinite;
}

// ST_TLTimeNodeID ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodeID")
public class ST_TLTimeNodeID {
	protected Integer ST_TLTimeNodeID;
}

// CT_TLIterateIntervalTime ...
public class CT_TLIterateIntervalTime {
	@XmlAttribute(name = "val", required = true)
	protected ST_TLTimeAttr Val;
}

// CT_TLIterateIntervalPercentage ...
public class CT_TLIterateIntervalPercentage {
	@XmlAttribute(name = "val", required = true)
	protected ST_PositivePercentageAttr Val;
}

// ST_IterateType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_IterateType")
public class ST_IterateType {
	protected String ST_IterateType;
}

// CT_TLIterateData ...
public class CT_TLIterateData {
	@XmlAttribute(name = "type")
	protected StringAttr Type;
	@XmlAttribute(name = "backwards")
	protected BooleanAttr Backwards;
	@XmlElement(required = true, name = "tmAbs")
	protected CT_TLIterateIntervalTime TmAbs;
	@XmlElement(required = true, name = "tmPct")
	protected CT_TLIterateIntervalPercentage TmPct;
}

// CT_TLSubShapeId ...
public class CT_TLSubShapeId {
	@XmlAttribute(name = "spid", required = true)
	protected StringAttr Spid;
}

// CT_TLTextTargetElement ...
public class CT_TLTextTargetElement {
	@XmlElement(required = true, name = "charRg")
	protected CT_IndexRange CharRg;
	@XmlElement(required = true, name = "pRg")
	protected CT_IndexRange PRg;
}

// ST_TLChartSubelementType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLChartSubelementType")
public class ST_TLChartSubelementType {
	protected String ST_TLChartSubelementType;
}

// CT_TLOleChartTargetElement ...
public class CT_TLOleChartTargetElement {
	@XmlAttribute(name = "type", required = true)
	protected StringAttr Type;
	@XmlAttribute(name = "lvl")
	protected IntegerAttr Lvl;
}

// CT_TLShapeTargetElement ...
public class CT_TLShapeTargetElement {
	@XmlAttribute(name = "spid", required = true)
	protected IntegerAttr Spid;
	@XmlElement(required = true, name = "bg")
	protected CT_Empty Bg;
	@XmlElement(required = true, name = "subSp")
	protected CT_TLSubShapeId SubSp;
	@XmlElement(required = true, name = "oleChartEl")
	protected CT_TLOleChartTargetElement OleChartEl;
	@XmlElement(required = true, name = "txEl")
	protected CT_TLTextTargetElement TxEl;
	@XmlElement(required = true, name = "graphicEl")
	protected CT_AnimationElementChoice GraphicEl;
}

// CT_TLTimeTargetElement ...
public class CT_TLTimeTargetElement {
	@XmlElement(required = true, name = "sldTgt")
	protected CT_Empty SldTgt;
	@XmlElement(required = true, name = "sndTgt")
	protected CT_EmbeddedWAVAudioFile SndTgt;
	@XmlElement(required = true, name = "spTgt")
	protected CT_TLShapeTargetElement SpTgt;
	@XmlElement(required = true, name = "inkTgt")
	protected CT_TLSubShapeId InkTgt;
}

// CT_TLTriggerTimeNodeID ...
public class CT_TLTriggerTimeNodeID {
	@XmlAttribute(name = "val", required = true)
	protected IntegerAttr Val;
}

// ST_TLTriggerRuntimeNode ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTriggerRuntimeNode")
public class ST_TLTriggerRuntimeNode {
	protected String ST_TLTriggerRuntimeNode;
}

// CT_TLTriggerRuntimeNode ...
public class CT_TLTriggerRuntimeNode {
	@XmlAttribute(name = "val", required = true)
	protected StringAttr Val;
}

// ST_TLTriggerEvent ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTriggerEvent")
public class ST_TLTriggerEvent {
	protected String ST_TLTriggerEvent;
}

// CT_TLTimeCondition ...
public class CT_TLTimeCondition {
	@XmlAttribute(name = "evt")
	protected StringAttr Evt;
	@XmlAttribute(name = "delay")
	protected ST_TLTimeAttr Delay;
	@XmlElement(required = true, name = "tgtEl")
	protected CT_TLTimeTargetElement TgtEl;
	@XmlElement(required = true, name = "tn")
	protected CT_TLTriggerTimeNodeID Tn;
	@XmlElement(required = true, name = "rtn")
	protected CT_TLTriggerRuntimeNode Rtn;
}

// CT_TLTimeConditionList ...
public class CT_TLTimeConditionList {
	@XmlElement(required = true, name = "cond")
	protected List<CT_TLTimeCondition> Cond;
}

// CT_TimeNodeList ...
public class CT_TimeNodeList {
	@XmlElement(required = true, name = "par")
	protected CT_TLTimeNodeParallel Par;
	@XmlElement(required = true, name = "seq")
	protected CT_TLTimeNodeSequence Seq;
	@XmlElement(required = true, name = "excl")
	protected CT_TLTimeNodeExclusive Excl;
	@XmlElement(required = true, name = "anim")
	protected CT_TLAnimateBehavior Anim;
	@XmlElement(required = true, name = "animClr")
	protected CT_TLAnimateColorBehavior AnimClr;
	@XmlElement(required = true, name = "animEffect")
	protected CT_TLAnimateEffectBehavior AnimEffect;
	@XmlElement(required = true, name = "animMotion")
	protected CT_TLAnimateMotionBehavior AnimMotion;
	@XmlElement(required = true, name = "animRot")
	protected CT_TLAnimateRotationBehavior AnimRot;
	@XmlElement(required = true, name = "animScale")
	protected CT_TLAnimateScaleBehavior AnimScale;
	@XmlElement(required = true, name = "cmd")
	protected CT_TLCommandBehavior Cmd;
	@XmlElement(required = true, name = "set")
	protected CT_TLSetBehavior Set;
	@XmlElement(required = true, name = "audio")
	protected CT_TLMediaNodeAudio Audio;
	@XmlElement(required = true, name = "video")
	protected CT_TLMediaNodeVideo Video;
}

// ST_TLTimeNodePresetClassType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodePresetClassType")
public class ST_TLTimeNodePresetClassType {
	protected String ST_TLTimeNodePresetClassType;
}

// ST_TLTimeNodeRestartType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodeRestartType")
public class ST_TLTimeNodeRestartType {
	protected String ST_TLTimeNodeRestartType;
}

// ST_TLTimeNodeFillType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodeFillType")
public class ST_TLTimeNodeFillType {
	protected String ST_TLTimeNodeFillType;
}

// ST_TLTimeNodeSyncType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodeSyncType")
public class ST_TLTimeNodeSyncType {
	protected String ST_TLTimeNodeSyncType;
}

// ST_TLTimeNodeMasterRelation ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodeMasterRelation")
public class ST_TLTimeNodeMasterRelation {
	protected String ST_TLTimeNodeMasterRelation;
}

// ST_TLTimeNodeType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodeType")
public class ST_TLTimeNodeType {
	protected String ST_TLTimeNodeType;
}

// CT_TLCommonTimeNodeData ...
public class CT_TLCommonTimeNodeData {
	@XmlAttribute(name = "id")
	protected IntegerAttr Id;
	@XmlAttribute(name = "presetID")
	protected IntegerAttr PresetID;
	@XmlAttribute(name = "presetClass")
	protected StringAttr PresetClass;
	@XmlAttribute(name = "presetSubtype")
	protected IntegerAttr PresetSubtype;
	@XmlAttribute(name = "dur")
	protected ST_TLTimeAttr Dur;
	@XmlAttribute(name = "repeatCount")
	protected ST_TLTimeAttr RepeatCount;
	@XmlAttribute(name = "repeatDur")
	protected ST_TLTimeAttr RepeatDur;
	@XmlAttribute(name = "spd")
	protected ST_PercentageAttr Spd;
	@XmlAttribute(name = "accel")
	protected ST_PositiveFixedPercentageAttr Accel;
	@XmlAttribute(name = "decel")
	protected ST_PositiveFixedPercentageAttr Decel;
	@XmlAttribute(name = "autoRev")
	protected BooleanAttr AutoRev;
	@XmlAttribute(name = "restart")
	protected StringAttr Restart;
	@XmlAttribute(name = "fill")
	protected StringAttr Fill;
	@XmlAttribute(name = "syncBehavior")
	protected StringAttr SyncBehavior;
	@XmlAttribute(name = "tmFilter")
	protected StringAttr TmFilter;
	@XmlAttribute(name = "evtFilter")
	protected StringAttr EvtFilter;
	@XmlAttribute(name = "display")
	protected BooleanAttr Display;
	@XmlAttribute(name = "masterRel")
	protected StringAttr MasterRel;
	@XmlAttribute(name = "bldLvl")
	protected IntegerAttr BldLvl;
	@XmlAttribute(name = "grpId")
	protected IntegerAttr GrpId;
	@XmlAttribute(name = "afterEffect")
	protected BooleanAttr AfterEffect;
	@XmlAttribute(name = "nodeType")
	protected StringAttr NodeType;
	@XmlAttribute(name = "nodePh")
	protected BooleanAttr NodePh;
	@XmlElement(required = true, name = "stCondLst")
	protected CT_TLTimeConditionList StCondLst;
	@XmlElement(required = true, name = "endCondLst")
	protected CT_TLTimeConditionList EndCondLst;
	@XmlElement(required = true, name = "endSync")
	protected CT_TLTimeCondition EndSync;
	@XmlElement(required = true, name = "iterate")
	protected CT_TLIterateData Iterate;
	@XmlElement(required = true, name = "childTnLst")
	protected CT_TimeNodeList ChildTnLst;
	@XmlElement(required = true, name = "subTnLst")
	protected CT_TimeNodeList SubTnLst;
}

// CT_TLTimeNodeParallel ...
public class CT_TLTimeNodeParallel {
	@XmlElement(required = true, name = "cTn")
	protected CT_TLCommonTimeNodeData CTn;
}

// ST_TLNextActionType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLNextActionType")
public class ST_TLNextActionType {
	protected String ST_TLNextActionType;
}

// ST_TLPreviousActionType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLPreviousActionType")
public class ST_TLPreviousActionType {
	protected String ST_TLPreviousActionType;
}

// CT_TLTimeNodeSequence ...
public class CT_TLTimeNodeSequence {
	@XmlAttribute(name = "concurrent")
	protected BooleanAttr Concurrent;
	@XmlAttribute(name = "prevAc")
	protected StringAttr PrevAc;
	@XmlAttribute(name = "nextAc")
	protected StringAttr NextAc;
	@XmlElement(required = true, name = "cTn")
	protected CT_TLCommonTimeNodeData CTn;
	@XmlElement(required = true, name = "prevCondLst")
	protected CT_TLTimeConditionList PrevCondLst;
	@XmlElement(required = true, name = "nextCondLst")
	protected CT_TLTimeConditionList NextCondLst;
}

// CT_TLTimeNodeExclusive ...
public class CT_TLTimeNodeExclusive {
	@XmlElement(required = true, name = "cTn")
	protected CT_TLCommonTimeNodeData CTn;
}

// CT_TLBehaviorAttributeNameList ...
public class CT_TLBehaviorAttributeNameList {
	@XmlElement(required = true, name = "attrName")
	protected List<String> AttrName;
}

// ST_TLBehaviorAdditiveType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLBehaviorAdditiveType")
public class ST_TLBehaviorAdditiveType {
	protected String ST_TLBehaviorAdditiveType;
}

// ST_TLBehaviorAccumulateType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLBehaviorAccumulateType")
public class ST_TLBehaviorAccumulateType {
	protected String ST_TLBehaviorAccumulateType;
}

// ST_TLBehaviorTransformType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLBehaviorTransformType")
public class ST_TLBehaviorTransformType {
	protected String ST_TLBehaviorTransformType;
}

// ST_TLBehaviorOverrideType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLBehaviorOverrideType")
public class ST_TLBehaviorOverrideType {
	protected String ST_TLBehaviorOverrideType;
}

// CT_TLCommonBehaviorData ...
public class CT_TLCommonBehaviorData {
	@XmlAttribute(name = "additive")
	protected StringAttr Additive;
	@XmlAttribute(name = "accumulate")
	protected StringAttr Accumulate;
	@XmlAttribute(name = "xfrmType")
	protected StringAttr XfrmType;
	@XmlAttribute(name = "from")
	protected StringAttr From;
	@XmlAttribute(name = "to")
	protected StringAttr To;
	@XmlAttribute(name = "by")
	protected StringAttr By;
	@XmlAttribute(name = "rctx")
	protected StringAttr Rctx;
	@XmlAttribute(name = "override")
	protected StringAttr Override;
	@XmlElement(required = true, name = "cTn")
	protected CT_TLCommonTimeNodeData CTn;
	@XmlElement(required = true, name = "tgtEl")
	protected CT_TLTimeTargetElement TgtEl;
	@XmlElement(required = true, name = "attrNameLst")
	protected CT_TLBehaviorAttributeNameList AttrNameLst;
}

// CT_TLAnimVariantBooleanVal ...
public class CT_TLAnimVariantBooleanVal {
	@XmlAttribute(name = "val", required = true)
	protected BooleanAttr Val;
}

// CT_TLAnimVariantIntegerVal ...
public class CT_TLAnimVariantIntegerVal {
	@XmlAttribute(name = "val", required = true)
	protected IntegerAttr Val;
}

// CT_TLAnimVariantFloatVal ...
public class CT_TLAnimVariantFloatVal {
	@XmlAttribute(name = "val", required = true)
	protected FloatAttr Val;
}

// CT_TLAnimVariantStringVal ...
public class CT_TLAnimVariantStringVal {
	@XmlAttribute(name = "val", required = true)
	protected StringAttr Val;
}

// CT_TLAnimVariant ...
public class CT_TLAnimVariant {
	@XmlElement(required = true, name = "boolVal")
	protected CT_TLAnimVariantBooleanVal BoolVal;
	@XmlElement(required = true, name = "intVal")
	protected CT_TLAnimVariantIntegerVal IntVal;
	@XmlElement(required = true, name = "fltVal")
	protected CT_TLAnimVariantFloatVal FltVal;
	@XmlElement(required = true, name = "strVal")
	protected CT_TLAnimVariantStringVal StrVal;
	@XmlElement(required = true, name = "clrVal")
	protected CT_Color ClrVal;
}

// ST_TLTimeAnimateValueTime ...
public class ST_TLTimeAnimateValueTime {
	@XmlElement(required = true)
	protected ST_PositiveFixedPercentage ST_PositiveFixedPercentage;
	@XmlElement(required = true)
	protected String ST_TLTimeIndefinite;
}

// CT_TLTimeAnimateValue ...
public class CT_TLTimeAnimateValue {
	@XmlAttribute(name = "tm")
	protected ST_TLTimeAnimateValueTimeAttr Tm;
	@XmlAttribute(name = "fmla")
	protected StringAttr Fmla;
	@XmlElement(required = true, name = "val")
	protected CT_TLAnimVariant Val;
}

// CT_TLTimeAnimateValueList ...
public class CT_TLTimeAnimateValueList {
	@XmlElement(required = true, name = "tav")
	protected List<CT_TLTimeAnimateValue> Tav;
}

// ST_TLAnimateBehaviorCalcMode ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateBehaviorCalcMode")
public class ST_TLAnimateBehaviorCalcMode {
	protected String ST_TLAnimateBehaviorCalcMode;
}

// ST_TLAnimateBehaviorValueType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateBehaviorValueType")
public class ST_TLAnimateBehaviorValueType {
	protected String ST_TLAnimateBehaviorValueType;
}

// CT_TLAnimateBehavior ...
public class CT_TLAnimateBehavior {
	@XmlAttribute(name = "by")
	protected StringAttr By;
	@XmlAttribute(name = "from")
	protected StringAttr From;
	@XmlAttribute(name = "to")
	protected StringAttr To;
	@XmlAttribute(name = "calcmode")
	protected StringAttr Calcmode;
	@XmlAttribute(name = "valueType")
	protected StringAttr ValueType;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
	@XmlElement(required = true, name = "tavLst")
	protected CT_TLTimeAnimateValueList TavLst;
}

// CT_TLByRgbColorTransform ...
public class CT_TLByRgbColorTransform {
	@XmlAttribute(name = "r", required = true)
	protected ST_FixedPercentageAttr R;
	@XmlAttribute(name = "g", required = true)
	protected ST_FixedPercentageAttr G;
	@XmlAttribute(name = "b", required = true)
	protected ST_FixedPercentageAttr B;
}

// CT_TLByHslColorTransform ...
public class CT_TLByHslColorTransform {
	@XmlAttribute(name = "h", required = true)
	protected IntegerAttr H;
	@XmlAttribute(name = "s", required = true)
	protected ST_FixedPercentageAttr S;
	@XmlAttribute(name = "l", required = true)
	protected ST_FixedPercentageAttr L;
}

// CT_TLByAnimateColorTransform ...
public class CT_TLByAnimateColorTransform {
	@XmlElement(required = true, name = "rgb")
	protected CT_TLByRgbColorTransform Rgb;
	@XmlElement(required = true, name = "hsl")
	protected CT_TLByHslColorTransform Hsl;
}

// ST_TLAnimateColorSpace ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateColorSpace")
public class ST_TLAnimateColorSpace {
	protected String ST_TLAnimateColorSpace;
}

// ST_TLAnimateColorDirection ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateColorDirection")
public class ST_TLAnimateColorDirection {
	protected String ST_TLAnimateColorDirection;
}

// CT_TLAnimateColorBehavior ...
public class CT_TLAnimateColorBehavior {
	@XmlAttribute(name = "clrSpc")
	protected StringAttr ClrSpc;
	@XmlAttribute(name = "dir")
	protected StringAttr Dir;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
	@XmlElement(required = true, name = "by")
	protected CT_TLByAnimateColorTransform By;
	@XmlElement(required = true, name = "from")
	protected CT_Color From;
	@XmlElement(required = true, name = "to")
	protected CT_Color To;
}

// ST_TLAnimateEffectTransition ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateEffectTransition")
public class ST_TLAnimateEffectTransition {
	protected String ST_TLAnimateEffectTransition;
}

// CT_TLAnimateEffectBehavior ...
public class CT_TLAnimateEffectBehavior {
	@XmlAttribute(name = "transition")
	protected StringAttr Transition;
	@XmlAttribute(name = "filter")
	protected StringAttr Filter;
	@XmlAttribute(name = "prLst")
	protected StringAttr PrLst;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
	@XmlElement(required = true, name = "progress")
	protected CT_TLAnimVariant Progress;
}

// ST_TLAnimateMotionBehaviorOrigin ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateMotionBehaviorOrigin")
public class ST_TLAnimateMotionBehaviorOrigin {
	protected String ST_TLAnimateMotionBehaviorOrigin;
}

// ST_TLAnimateMotionPathEditMode ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateMotionPathEditMode")
public class ST_TLAnimateMotionPathEditMode {
	protected String ST_TLAnimateMotionPathEditMode;
}

// CT_TLPoint ...
public class CT_TLPoint {
	@XmlAttribute(name = "x", required = true)
	protected ST_PercentageAttr X;
	@XmlAttribute(name = "y", required = true)
	protected ST_PercentageAttr Y;
}

// CT_TLAnimateMotionBehavior ...
public class CT_TLAnimateMotionBehavior {
	@XmlAttribute(name = "origin")
	protected StringAttr Origin;
	@XmlAttribute(name = "path")
	protected StringAttr Path;
	@XmlAttribute(name = "pathEditMode")
	protected StringAttr PathEditMode;
	@XmlAttribute(name = "rAng")
	protected IntegerAttr RAng;
	@XmlAttribute(name = "ptsTypes")
	protected StringAttr PtsTypes;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
	@XmlElement(required = true, name = "by")
	protected CT_TLPoint By;
	@XmlElement(required = true, name = "from")
	protected CT_TLPoint From;
	@XmlElement(required = true, name = "to")
	protected CT_TLPoint To;
	@XmlElement(required = true, name = "rCtr")
	protected CT_TLPoint RCtr;
}

// CT_TLAnimateRotationBehavior ...
public class CT_TLAnimateRotationBehavior {
	@XmlAttribute(name = "by")
	protected IntegerAttr By;
	@XmlAttribute(name = "from")
	protected IntegerAttr From;
	@XmlAttribute(name = "to")
	protected IntegerAttr To;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
}

// CT_TLAnimateScaleBehavior ...
public class CT_TLAnimateScaleBehavior {
	@XmlAttribute(name = "zoomContents")
	protected BooleanAttr ZoomContents;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
	@XmlElement(required = true, name = "by")
	protected CT_TLPoint By;
	@XmlElement(required = true, name = "from")
	protected CT_TLPoint From;
	@XmlElement(required = true, name = "to")
	protected CT_TLPoint To;
}

// ST_TLCommandType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLCommandType")
public class ST_TLCommandType {
	protected String ST_TLCommandType;
}

// CT_TLCommandBehavior ...
public class CT_TLCommandBehavior {
	@XmlAttribute(name = "type")
	protected StringAttr Type;
	@XmlAttribute(name = "cmd")
	protected StringAttr Cmd;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
}

// CT_TLSetBehavior ...
public class CT_TLSetBehavior {
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
	@XmlElement(required = true, name = "to")
	protected CT_TLAnimVariant To;
}

// CT_TLCommonMediaNodeData ...
public class CT_TLCommonMediaNodeData {
	@XmlAttribute(name = "vol")
	protected ST_PositiveFixedPercentageAttr Vol;
	@XmlAttribute(name = "mute")
	protected BooleanAttr Mute;
	@XmlAttribute(name = "numSld")
	protected IntegerAttr NumSld;
	@XmlAttribute(name = "showWhenStopped")
	protected BooleanAttr ShowWhenStopped;
	@XmlElement(required = true, name = "cTn")
	protected CT_TLCommonTimeNodeData CTn;
	@XmlElement(required = true, name = "tgtEl")
	protected CT_TLTimeTargetElement TgtEl;
}

// CT_TLMediaNodeAudio ...
public class CT_TLMediaNodeAudio {
	@XmlAttribute(name = "isNarration")
	protected BooleanAttr IsNarration;
	@XmlElement(required = true, name = "cMediaNode")
	protected CT_TLCommonMediaNodeData CMediaNode;
}

// CT_TLMediaNodeVideo ...
public class CT_TLMediaNodeVideo {
	@XmlAttribute(name = "fullScrn")
	protected BooleanAttr FullScrn;
	@XmlElement(required = true, name = "cMediaNode")
	protected CT_TLCommonMediaNodeData CMediaNode;
}

// AG_TLBuild ...
public class AG_TLBuild {
	@XmlAttribute(name = "spid", required = true)
	protected IntegerAttr Spid;
	@XmlAttribute(name = "grpId", required = true)
	protected IntegerAttr GrpId;
	@XmlAttribute(name = "uiExpand")
	protected BooleanAttr UiExpand;
}

// CT_TLTemplate ...
public class CT_TLTemplate {
	@XmlAttribute(name = "lvl")
	protected IntegerAttr Lvl;
	@XmlElement(required = true, name = "tnLst")
	protected CT_TimeNodeList TnLst;
}

// CT_TLTemplateList ...
public class CT_TLTemplateList {
	@XmlElement(required = true, name = "tmpl")
	protected List<CT_TLTemplate> Tmpl;
}

// ST_TLParaBuildType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLParaBuildType")
public class ST_TLParaBuildType {
	protected String ST_TLParaBuildType;
}

// CT_TLBuildParagraph ...
public class CT_TLBuildParagraph {
	@XmlElement(required = true)
	protected AG_TLBuild AG_TLBuild;
	@XmlAttribute(name = "build")
	protected StringAttr Build;
	@XmlAttribute(name = "bldLvl")
	protected IntegerAttr BldLvl;
	@XmlAttribute(name = "animBg")
	protected BooleanAttr AnimBg;
	@XmlAttribute(name = "autoUpdateAnimBg")
	protected BooleanAttr AutoUpdateAnimBg;
	@XmlAttribute(name = "rev")
	protected BooleanAttr Rev;
	@XmlAttribute(name = "advAuto")
	protected ST_TLTimeAttr AdvAuto;
	@XmlElement(required = true, name = "tmplLst")
	protected CT_TLTemplateList TmplLst;
}

// ST_TLDiagramBuildType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLDiagramBuildType")
public class ST_TLDiagramBuildType {
	protected String ST_TLDiagramBuildType;
}

// CT_TLBuildDiagram ...
public class CT_TLBuildDiagram {
	@XmlElement(required = true)
	protected AG_TLBuild AG_TLBuild;
	@XmlAttribute(name = "bld")
	protected StringAttr Bld;
}

// ST_TLOleChartBuildType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLOleChartBuildType")
public class ST_TLOleChartBuildType {
	protected String ST_TLOleChartBuildType;
}

// CT_TLOleBuildChart ...
public class CT_TLOleBuildChart {
	@XmlElement(required = true)
	protected AG_TLBuild AG_TLBuild;
	@XmlAttribute(name = "bld")
	protected StringAttr Bld;
	@XmlAttribute(name = "animBg")
	protected BooleanAttr AnimBg;
}

// CT_TLGraphicalObjectBuild ...
public class CT_TLGraphicalObjectBuild {
	@XmlElement(required = true)
	protected AG_TLBuild AG_TLBuild;
	@XmlElement(required = true, name = "bldAsOne")
	protected CT_Empty BldAsOne;
	@XmlElement(required = true, name = "bldSub")
	protected CT_AnimationGraphicalObjectBuildProperties BldSub;
}

// CT_BuildList ...
public class CT_BuildList {
	@XmlElement(required = true, name = "bldP")
	protected CT_TLBuildParagraph BldP;
	@XmlElement(required = true, name = "bldDgm")
	protected CT_TLBuildDiagram BldDgm;
	@XmlElement(required = true, name = "bldOleChart")
	protected CT_TLOleBuildChart BldOleChart;
	@XmlElement(required = true, name = "bldGraphic")
	protected CT_TLGraphicalObjectBuild BldGraphic;
}

// CT_SlideTiming ...
public class CT_SlideTiming {
	@XmlElement(required = true, name = "tnLst")
	protected CT_TimeNodeList TnLst;
	@XmlElement(required = true, name = "bldLst")
	protected CT_BuildList BldLst;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_Empty ...
public class CT_Empty {
}

// ST_Name ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_Name")
public class ST_Name {
	protected String ST_Name;
}

// ST_Direction ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_Direction")
public class ST_Direction {
	protected String ST_Direction;
}

// ST_Index ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_Index")
public class ST_Index {
	protected Integer ST_Index;
}

// CT_IndexRange ...
public class CT_IndexRange {
	@XmlAttribute(name = "st", required = true)
	protected IntegerAttr St;
	@XmlAttribute(name = "end", required = true)
	protected IntegerAttr End;
}

// CT_SlideRelationshipListEntry ...
public class CT_SlideRelationshipListEntry {
	@XmlAttribute(name = "r:id", required = true)
	protected StringAttr RId;
}

// CT_SlideRelationshipList ...
public class CT_SlideRelationshipList {
	@XmlElement(required = true, name = "sld")
	protected List<CT_SlideRelationshipListEntry> Sld;
}

// CT_CustomShowId ...
public class CT_CustomShowId {
	@XmlAttribute(name = "id", required = true)
	protected IntegerAttr Id;
}

// EG_SlideListChoice ...
public class EG_SlideListChoice {
	@XmlElement(required = true, name = "sldAll")
	protected CT_Empty SldAll;
	@XmlElement(required = true, name = "sldRg")
	protected CT_IndexRange SldRg;
	@XmlElement(required = true, name = "custShow")
	protected CT_CustomShowId CustShow;
}

// CT_CustomerData ...
public class CT_CustomerData {
	@XmlAttribute(name = "r:id", required = true)
	protected StringAttr RId;
}

// CT_TagsData ...
public class CT_TagsData {
	@XmlAttribute(name = "r:id", required = true)
	protected StringAttr RId;
}

// CT_CustomerDataList ...
public class CT_CustomerDataList {
	@XmlElement(required = true, name = "custData")
	protected List<CT_CustomerData> CustData;
	@XmlElement(required = true, name = "tags")
	protected CT_TagsData Tags;
}

// CT_Extension ...
public class CT_Extension {
	@XmlAttribute(name = "uri", required = true)
	protected StringAttr Uri;
}

// EG_ExtensionList ...
public class EG_ExtensionList {
	@XmlElement(required = true, name = "ext")
	protected List<CT_Extension> Ext;
}

// CT_ExtensionList ...
public class CT_ExtensionList {
	protected List<EG_ExtensionList> EG_ExtensionList;
}

// CT_ExtensionListModify ...
public class CT_ExtensionListModify {
	@XmlAttribute(name = "mod")
	protected BooleanAttr Mod;
	protected List<EG_ExtensionList> EG_ExtensionList;
}

// CT_CommentAuthor ...
public class CT_CommentAuthor {
	@XmlAttribute(name = "id", required = true)
	protected IntegerAttr Id;
	@XmlAttribute(name = "name", required = true)
	protected StringAttr Name;
	@XmlAttribute(name = "initials", required = true)
	protected StringAttr Initials;
	@XmlAttribute(name = "lastIdx", required = true)
	protected IntegerAttr LastIdx;
	@XmlAttribute(name = "clrIdx", required = true)
	protected IntegerAttr ClrIdx;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_CommentAuthorList ...
public class CT_CommentAuthorList {
	@XmlElement(required = true, name = "cmAuthor")
	protected List<CT_CommentAuthor> CmAuthor;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "cmAuthorLst")
public class CmAuthorLst {
	protected CT_CommentAuthorList CmAuthorLst;
}

// CT_Comment ...
public class CT_Comment {
	@XmlAttribute(name = "authorId", required = true)
	protected IntegerAttr AuthorId;
	@XmlAttribute(name = "dt")
	protected ByteAttr Dt;
	@XmlAttribute(name = "idx", required = true)
	protected IntegerAttr Idx;
	@XmlElement(required = true, name = "pos")
	protected CT_Point2D Pos;
	@XmlElement(required = true, name = "text")
	protected String Text;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_CommentList ...
public class CT_CommentList {
	@XmlElement(required = true, name = "cm")
	protected List<CT_Comment> Cm;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "cmLst")
public class CmLst {
	protected CT_CommentList CmLst;
}

// AG_Ole ...
public class AG_Ole {
	@XmlAttribute(name = "name")
	protected StringAttr Name;
	@XmlAttribute(name = "showAsIcon")
	protected BooleanAttr ShowAsIcon;
	@XmlAttribute(name = "r:id")
	protected StringAttr RId;
	@XmlAttribute(name = "imgW")
	protected IntegerAttr ImgW;
	@XmlAttribute(name = "imgH")
	protected IntegerAttr ImgH;
}

// ST_OleObjectFollowColorScheme ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_OleObjectFollowColorScheme")
public class ST_OleObjectFollowColorScheme {
	protected String ST_OleObjectFollowColorScheme;
}

// CT_OleObjectEmbed ...
public class CT_OleObjectEmbed {
	@XmlAttribute(name = "followColorScheme")
	protected StringAttr FollowColorScheme;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_OleObjectLink ...
public class CT_OleObjectLink {
	@XmlAttribute(name = "updateAutomatic")
	protected BooleanAttr UpdateAutomatic;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_OleObject ...
public class CT_OleObject {
	@XmlElement(required = true)
	protected AG_Ole AG_Ole;
	@XmlAttribute(name = "progId")
	protected StringAttr ProgId;
	@XmlElement(required = true, name = "embed")
	protected CT_OleObjectEmbed Embed;
	@XmlElement(required = true, name = "link")
	protected CT_OleObjectLink Link;
	@XmlElement(required = true, name = "pic")
	protected CT_Picture Pic;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "oleObj")
public class OleObj {
	protected CT_OleObject OleObj;
}

// CT_Control ...
public class CT_Control {
	@XmlElement(required = true)
	protected AG_Ole AG_Ole;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
	@XmlElement(required = true, name = "pic")
	protected CT_Picture Pic;
}

// CT_ControlList ...
public class CT_ControlList {
	@XmlElement(required = true, name = "control")
	protected List<CT_Control> Control;
}

// ST_SlideId ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SlideId")
public class ST_SlideId {
	protected Integer ST_SlideId;
}

// CT_SlideIdListEntry ...
public class CT_SlideIdListEntry {
	@XmlAttribute(name = "id", required = true)
	protected IntegerAttr Id;
	@XmlAttribute(name = "r:id", required = true)
	protected StringAttr RId;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_SlideIdList ...
public class CT_SlideIdList {
	@XmlElement(required = true, name = "sldId")
	protected List<CT_SlideIdListEntry> SldId;
}

// ST_SlideMasterId ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SlideMasterId")
public class ST_SlideMasterId {
	protected Integer ST_SlideMasterId;
}

// CT_SlideMasterIdListEntry ...
public class CT_SlideMasterIdListEntry {
	@XmlAttribute(name = "id")
	protected IntegerAttr Id;
	@XmlAttribute(name = "r:id", required = true)
	protected StringAttr RId;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_SlideMasterIdList ...
public class CT_SlideMasterIdList {
	@XmlElement(required = true, name = "sldMasterId")
	protected List<CT_SlideMasterIdListEntry> SldMasterId;
}

// CT_NotesMasterIdListEntry ...
public class CT_NotesMasterIdListEntry {
	@XmlAttribute(name = "r:id", required = true)
	protected StringAttr RId;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_NotesMasterIdList ...
public class CT_NotesMasterIdList {
	@XmlElement(required = true, name = "notesMasterId")
	protected CT_NotesMasterIdListEntry NotesMasterId;
}

// CT_HandoutMasterIdListEntry ...
public class CT_HandoutMasterIdListEntry {
	@XmlAttribute(name = "r:id", required = true)
	protected StringAttr RId;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_HandoutMasterIdList ...
public class CT_HandoutMasterIdList {
	@XmlElement(required = true, name = "handoutMasterId")
	protected CT_HandoutMasterIdListEntry HandoutMasterId;
}

// CT_EmbeddedFontDataId ...
public class CT_EmbeddedFontDataId {
	@XmlAttribute(name = "r:id", required = true)
	protected StringAttr RId;
}

// CT_EmbeddedFontListEntry ...
public class CT_EmbeddedFontListEntry {
	@XmlElement(required = true, name = "font")
	protected CT_TextFont Font;
	@XmlElement(required = true, name = "regular")
	protected CT_EmbeddedFontDataId Regular;
	@XmlElement(required = true, name = "bold")
	protected CT_EmbeddedFontDataId Bold;
	@XmlElement(required = true, name = "italic")
	protected CT_EmbeddedFontDataId Italic;
	@XmlElement(required = true, name = "boldItalic")
	protected CT_EmbeddedFontDataId BoldItalic;
}

// CT_EmbeddedFontList ...
public class CT_EmbeddedFontList {
	@XmlElement(required = true, name = "embeddedFont")
	protected List<CT_EmbeddedFontListEntry> EmbeddedFont;
}

// CT_SmartTags ...
public class CT_SmartTags {
	@XmlAttribute(name = "r:id", required = true)
	protected StringAttr RId;
}

// CT_CustomShow ...
public class CT_CustomShow {
	@XmlAttribute(name = "name", required = true)
	protected StringAttr Name;
	@XmlAttribute(name = "id", required = true)
	protected IntegerAttr Id;
	@XmlElement(required = true, name = "sldLst")
	protected CT_SlideRelationshipList SldLst;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_CustomShowList ...
public class CT_CustomShowList {
	@XmlElement(required = true, name = "custShow")
	protected List<CT_CustomShow> CustShow;
}

// ST_PhotoAlbumLayout ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_PhotoAlbumLayout")
public class ST_PhotoAlbumLayout {
	protected String ST_PhotoAlbumLayout;
}

// ST_PhotoAlbumFrameShape ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_PhotoAlbumFrameShape")
public class ST_PhotoAlbumFrameShape {
	protected String ST_PhotoAlbumFrameShape;
}

// CT_PhotoAlbum ...
public class CT_PhotoAlbum {
	@XmlAttribute(name = "bw")
	protected BooleanAttr Bw;
	@XmlAttribute(name = "showCaptions")
	protected BooleanAttr ShowCaptions;
	@XmlAttribute(name = "layout")
	protected StringAttr Layout;
	@XmlAttribute(name = "frame")
	protected StringAttr Frame;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// ST_SlideSizeCoordinate ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SlideSizeCoordinate")
public class ST_SlideSizeCoordinate {
	protected Integer ST_SlideSizeCoordinate;
}

// ST_SlideSizeType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SlideSizeType")
public class ST_SlideSizeType {
	protected String ST_SlideSizeType;
}

// CT_SlideSize ...
public class CT_SlideSize {
	@XmlAttribute(name = "cx", required = true)
	protected IntegerAttr Cx;
	@XmlAttribute(name = "cy", required = true)
	protected IntegerAttr Cy;
	@XmlAttribute(name = "type")
	protected StringAttr Type;
}

// CT_Kinsoku ...
public class CT_Kinsoku {
	@XmlAttribute(name = "lang")
	protected StringAttr Lang;
	@XmlAttribute(name = "invalStChars", required = true)
	protected StringAttr InvalStChars;
	@XmlAttribute(name = "invalEndChars", required = true)
	protected StringAttr InvalEndChars;
}

// ST_BookmarkIdSeed ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_BookmarkIdSeed")
public class ST_BookmarkIdSeed {
	protected Integer ST_BookmarkIdSeed;
}

// CT_ModifyVerifier ...
public class CT_ModifyVerifier {
	@XmlAttribute(name = "algorithmName")
	protected StringAttr AlgorithmName;
	@XmlAttribute(name = "hashValue")
	protected List<Byte>Attr HashValue;
	@XmlAttribute(name = "saltValue")
	protected List<Byte>Attr SaltValue;
	@XmlAttribute(name = "spinValue")
	protected IntegerAttr SpinValue;
}

// CT_Presentation ...
public class CT_Presentation {
	@XmlAttribute(name = "serverZoom")
	protected ST_PercentageAttr ServerZoom;
	@XmlAttribute(name = "firstSlideNum")
	protected IntegerAttr FirstSlideNum;
	@XmlAttribute(name = "showSpecialPlsOnTitleSld")
	protected BooleanAttr ShowSpecialPlsOnTitleSld;
	@XmlAttribute(name = "rtl")
	protected BooleanAttr Rtl;
	@XmlAttribute(name = "removePersonalInfoOnSave")
	protected BooleanAttr RemovePersonalInfoOnSave;
	@XmlAttribute(name = "compatMode")
	protected BooleanAttr CompatMode;
	@XmlAttribute(name = "strictFirstAndLastChars")
	protected BooleanAttr StrictFirstAndLastChars;
	@XmlAttribute(name = "embedTrueTypeFonts")
	protected BooleanAttr EmbedTrueTypeFonts;
	@XmlAttribute(name = "saveSubsetFonts")
	protected BooleanAttr SaveSubsetFonts;
	@XmlAttribute(name = "autoCompressPictures")
	protected BooleanAttr AutoCompressPictures;
	@XmlAttribute(name = "bookmarkIdSeed")
	protected IntegerAttr BookmarkIdSeed;
	@XmlAttribute(name = "conformance")
	protected StringAttr Conformance;
	@XmlElement(required = true, name = "sldMasterIdLst")
	protected CT_SlideMasterIdList SldMasterIdLst;
	@XmlElement(required = true, name = "notesMasterIdLst")
	protected CT_NotesMasterIdList NotesMasterIdLst;
	@XmlElement(required = true, name = "handoutMasterIdLst")
	protected CT_HandoutMasterIdList HandoutMasterIdLst;
	@XmlElement(required = true, name = "sldIdLst")
	protected CT_SlideIdList SldIdLst;
	@XmlElement(required = true, name = "sldSz")
	protected CT_SlideSize SldSz;
	@XmlElement(required = true, name = "notesSz")
	protected CT_PositiveSize2D NotesSz;
	@XmlElement(required = true, name = "smartTags")
	protected CT_SmartTags SmartTags;
	@XmlElement(required = true, name = "embeddedFontLst")
	protected CT_EmbeddedFontList EmbeddedFontLst;
	@XmlElement(required = true, name = "custShowLst")
	protected CT_CustomShowList CustShowLst;
	@XmlElement(required = true, name = "photoAlbum")
	protected CT_PhotoAlbum PhotoAlbum;
	@XmlElement(required = true, name = "custDataLst")
	protected CT_CustomerDataList CustDataLst;
	@XmlElement(required = true, name = "kinsoku")
	protected CT_Kinsoku Kinsoku;
	@XmlElement(required = true, name = "defaultTextStyle")
	protected CT_TextListStyle DefaultTextStyle;
	@XmlElement(required = true, name = "modifyVerifier")
	protected CT_ModifyVerifier ModifyVerifier;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "presentation")
public class Presentation {
	protected CT_Presentation Presentation;
}

// CT_HtmlPublishProperties ...
public class CT_HtmlPublishProperties {
	@XmlAttribute(name = "showSpeakerNotes")
	protected BooleanAttr ShowSpeakerNotes;
	@XmlAttribute(name = "target")
	protected StringAttr Target;
	@XmlAttribute(name = "title")
	protected StringAttr Title;
	@XmlAttribute(name = "r:id", required = true)
	protected StringAttr RId;
	protected List<EG_SlideListChoice> EG_SlideListChoice;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// ST_PrintWhat ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_PrintWhat")
public class ST_PrintWhat {
	protected String ST_PrintWhat;
}

// ST_PrintColorMode ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_PrintColorMode")
public class ST_PrintColorMode {
	protected String ST_PrintColorMode;
}

// CT_PrintProperties ...
public class CT_PrintProperties {
	@XmlAttribute(name = "prnWhat")
	protected StringAttr PrnWhat;
	@XmlAttribute(name = "clrMode")
	protected StringAttr ClrMode;
	@XmlAttribute(name = "hiddenSlides")
	protected BooleanAttr HiddenSlides;
	@XmlAttribute(name = "scaleToFitPaper")
	protected BooleanAttr ScaleToFitPaper;
	@XmlAttribute(name = "frameSlides")
	protected BooleanAttr FrameSlides;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_ShowInfoBrowse ...
public class CT_ShowInfoBrowse {
	@XmlAttribute(name = "showScrollbar")
	protected BooleanAttr ShowScrollbar;
}

// CT_ShowInfoKiosk ...
public class CT_ShowInfoKiosk {
	@XmlAttribute(name = "restart")
	protected IntegerAttr Restart;
}

// EG_ShowType ...
public class EG_ShowType {
	@XmlElement(required = true, name = "present")
	protected CT_Empty Present;
	@XmlElement(required = true, name = "browse")
	protected CT_ShowInfoBrowse Browse;
	@XmlElement(required = true, name = "kiosk")
	protected CT_ShowInfoKiosk Kiosk;
}

// CT_ShowProperties ...
public class CT_ShowProperties {
	@XmlAttribute(name = "loop")
	protected BooleanAttr Loop;
	@XmlAttribute(name = "showNarration")
	protected BooleanAttr ShowNarration;
	@XmlAttribute(name = "showAnimation")
	protected BooleanAttr ShowAnimation;
	@XmlAttribute(name = "useTimings")
	protected BooleanAttr UseTimings;
	protected List<EG_ShowType> EG_ShowType;
	protected List<EG_SlideListChoice> EG_SlideListChoice;
	@XmlElement(required = true, name = "penClr")
	protected CT_Color PenClr;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_PresentationProperties ...
public class CT_PresentationProperties {
	@XmlElement(required = true, name = "prnPr")
	protected CT_PrintProperties PrnPr;
	@XmlElement(required = true, name = "showPr")
	protected CT_ShowProperties ShowPr;
	@XmlElement(required = true, name = "clrMru")
	protected CT_ColorMRU ClrMru;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "presentationPr")
public class PresentationPr {
	protected CT_PresentationProperties PresentationPr;
}

// CT_HeaderFooter ...
public class CT_HeaderFooter {
	@XmlAttribute(name = "sldNum")
	protected BooleanAttr SldNum;
	@XmlAttribute(name = "hdr")
	protected BooleanAttr Hdr;
	@XmlAttribute(name = "ftr")
	protected BooleanAttr Ftr;
	@XmlAttribute(name = "dt")
	protected BooleanAttr Dt;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// ST_PlaceholderType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_PlaceholderType")
public class ST_PlaceholderType {
	protected String ST_PlaceholderType;
}

// ST_PlaceholderSize ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_PlaceholderSize")
public class ST_PlaceholderSize {
	protected String ST_PlaceholderSize;
}

// CT_Placeholder ...
public class CT_Placeholder {
	@XmlAttribute(name = "type")
	protected StringAttr Type;
	@XmlAttribute(name = "orient")
	protected StringAttr Orient;
	@XmlAttribute(name = "sz")
	protected StringAttr Sz;
	@XmlAttribute(name = "idx")
	protected IntegerAttr Idx;
	@XmlAttribute(name = "hasCustomPrompt")
	protected BooleanAttr HasCustomPrompt;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_ApplicationNonVisualDrawingProps ...
public class CT_ApplicationNonVisualDrawingProps {
	@XmlAttribute(name = "isPhoto")
	protected BooleanAttr IsPhoto;
	@XmlAttribute(name = "userDrawn")
	protected BooleanAttr UserDrawn;
	protected List<EG_Media> AEG_Media;
	@XmlElement(required = true, name = "ph")
	protected CT_Placeholder Ph;
	@XmlElement(required = true, name = "custDataLst")
	protected CT_CustomerDataList CustDataLst;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_ShapeNonVisual ...
public class CT_ShapeNonVisual {
	@XmlElement(required = true, name = "cNvPr")
	protected CT_NonVisualDrawingProps CNvPr;
	@XmlElement(required = true, name = "cNvSpPr")
	protected CT_NonVisualDrawingShapeProps CNvSpPr;
	@XmlElement(required = true, name = "nvPr")
	protected CT_ApplicationNonVisualDrawingProps NvPr;
}

// CT_Shape ...
public class CT_Shape {
	@XmlAttribute(name = "useBgFill")
	protected BooleanAttr UseBgFill;
	@XmlElement(required = true, name = "nvSpPr")
	protected CT_ShapeNonVisual NvSpPr;
	@XmlElement(required = true, name = "spPr")
	protected CT_ShapeProperties SpPr;
	@XmlElement(required = true, name = "style")
	protected CT_ShapeStyle Style;
	@XmlElement(required = true, name = "txBody")
	protected CT_TextBody TxBody;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_ConnectorNonVisual ...
public class CT_ConnectorNonVisual {
	@XmlElement(required = true, name = "cNvPr")
	protected CT_NonVisualDrawingProps CNvPr;
	@XmlElement(required = true, name = "cNvCxnSpPr")
	protected CT_NonVisualConnectorProperties CNvCxnSpPr;
	@XmlElement(required = true, name = "nvPr")
	protected CT_ApplicationNonVisualDrawingProps NvPr;
}

// CT_Connector ...
public class CT_Connector {
	@XmlElement(required = true, name = "nvCxnSpPr")
	protected CT_ConnectorNonVisual NvCxnSpPr;
	@XmlElement(required = true, name = "spPr")
	protected CT_ShapeProperties SpPr;
	@XmlElement(required = true, name = "style")
	protected CT_ShapeStyle Style;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_PictureNonVisual ...
public class CT_PictureNonVisual {
	@XmlElement(required = true, name = "cNvPr")
	protected CT_NonVisualDrawingProps CNvPr;
	@XmlElement(required = true, name = "cNvPicPr")
	protected CT_NonVisualPictureProperties CNvPicPr;
	@XmlElement(required = true, name = "nvPr")
	protected CT_ApplicationNonVisualDrawingProps NvPr;
}

// CT_Picture ...
public class CT_Picture {
	@XmlElement(required = true, name = "nvPicPr")
	protected CT_PictureNonVisual NvPicPr;
	@XmlElement(required = true, name = "blipFill")
	protected CT_BlipFillProperties BlipFill;
	@XmlElement(required = true, name = "spPr")
	protected CT_ShapeProperties SpPr;
	@XmlElement(required = true, name = "style")
	protected CT_ShapeStyle Style;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_GraphicalObjectFrameNonVisual ...
public class CT_GraphicalObjectFrameNonVisual {
	@XmlElement(required = true, name = "cNvPr")
	protected CT_NonVisualDrawingProps CNvPr;
	@XmlElement(required = true, name = "cNvGraphicFramePr")
	protected CT_NonVisualGraphicFrameProperties CNvGraphicFramePr;
	@XmlElement(required = true, name = "nvPr")
	protected CT_ApplicationNonVisualDrawingProps NvPr;
}

// CT_GraphicalObjectFrame ...
public class CT_GraphicalObjectFrame {
	@XmlAttribute(name = "bwMode")
	protected StringAttr BwMode;
	@XmlElement(required = true, name = "nvGraphicFramePr")
	protected CT_GraphicalObjectFrameNonVisual NvGraphicFramePr;
	@XmlElement(required = true, name = "xfrm")
	protected CT_Transform2D Xfrm;
	@XmlElement(required = true, name = "a:graphic")
	protected CT_GraphicalObject AGraphic;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_GroupShapeNonVisual ...
public class CT_GroupShapeNonVisual {
	@XmlElement(required = true, name = "cNvPr")
	protected CT_NonVisualDrawingProps CNvPr;
	@XmlElement(required = true, name = "cNvGrpSpPr")
	protected CT_NonVisualGroupDrawingShapeProps CNvGrpSpPr;
	@XmlElement(required = true, name = "nvPr")
	protected CT_ApplicationNonVisualDrawingProps NvPr;
}

// CT_GroupShape ...
public class CT_GroupShape {
	@XmlElement(required = true, name = "nvGrpSpPr")
	protected CT_GroupShapeNonVisual NvGrpSpPr;
	@XmlElement(required = true, name = "grpSpPr")
	protected CT_GroupShapeProperties GrpSpPr;
	@XmlElement(required = true, name = "sp")
	protected CT_Shape Sp;
	@XmlElement(required = true, name = "grpSp")
	protected CT_GroupShape GrpSp;
	@XmlElement(required = true, name = "graphicFrame")
	protected CT_GraphicalObjectFrame GraphicFrame;
	@XmlElement(required = true, name = "cxnSp")
	protected CT_Connector CxnSp;
	@XmlElement(required = true, name = "pic")
	protected CT_Picture Pic;
	@XmlElement(required = true, name = "contentPart")
	protected CT_Rel ContentPart;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_Rel ...
public class CT_Rel {
	@XmlAttribute(name = "r:id", required = true)
	protected StringAttr RId;
}

// EG_TopLevelSlide ...
public class EG_TopLevelSlide {
	@XmlElement(required = true, name = "clrMap")
	protected CT_ColorMapping ClrMap;
}

// EG_ChildSlide ...
public class EG_ChildSlide {
	@XmlElement(required = true, name = "clrMapOvr")
	protected CT_ColorMappingOverride ClrMapOvr;
}

// AG_ChildSlide ...
public class AG_ChildSlide {
	@XmlAttribute(name = "showMasterSp")
	protected BooleanAttr ShowMasterSp;
	@XmlAttribute(name = "showMasterPhAnim")
	protected BooleanAttr ShowMasterPhAnim;
}

// CT_BackgroundProperties ...
public class CT_BackgroundProperties {
	@XmlAttribute(name = "shadeToTitle")
	protected BooleanAttr ShadeToTitle;
	protected List<EG_FillProperties> AEG_FillProperties;
	protected List<EG_EffectProperties> AEG_EffectProperties;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// EG_Background ...
public class EG_Background {
	@XmlElement(required = true, name = "bgPr")
	protected CT_BackgroundProperties BgPr;
	@XmlElement(required = true, name = "bgRef")
	protected CT_StyleMatrixReference BgRef;
}

// CT_Background ...
public class CT_Background {
	@XmlAttribute(name = "bwMode")
	protected StringAttr BwMode;
	protected EG_Background EG_Background;
}

// CT_CommonSlideData ...
public class CT_CommonSlideData {
	@XmlAttribute(name = "name")
	protected StringAttr Name;
	@XmlElement(required = true, name = "bg")
	protected CT_Background Bg;
	@XmlElement(required = true, name = "spTree")
	protected CT_GroupShape SpTree;
	@XmlElement(required = true, name = "custDataLst")
	protected CT_CustomerDataList CustDataLst;
	@XmlElement(required = true, name = "controls")
	protected CT_ControlList Controls;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_Slide ...
public class CT_Slide {
	@XmlElement(required = true)
	protected AG_ChildSlide AG_ChildSlide;
	@XmlAttribute(name = "show")
	protected BooleanAttr Show;
	protected List<EG_ChildSlide> EG_ChildSlide;
	@XmlElement(required = true, name = "cSld")
	protected CT_CommonSlideData CSld;
	@XmlElement(required = true, name = "transition")
	protected CT_SlideTransition Transition;
	@XmlElement(required = true, name = "timing")
	protected CT_SlideTiming Timing;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "sld")
public class Sld {
	protected CT_Slide Sld;
}

// ST_SlideLayoutType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SlideLayoutType")
public class ST_SlideLayoutType {
	protected String ST_SlideLayoutType;
}

// CT_SlideLayout ...
public class CT_SlideLayout {
	@XmlElement(required = true)
	protected AG_ChildSlide AG_ChildSlide;
	@XmlAttribute(name = "matchingName")
	protected StringAttr MatchingName;
	@XmlAttribute(name = "type")
	protected StringAttr Type;
	@XmlAttribute(name = "preserve")
	protected BooleanAttr Preserve;
	@XmlAttribute(name = "userDrawn")
	protected BooleanAttr UserDrawn;
	protected List<EG_ChildSlide> EG_ChildSlide;
	@XmlElement(required = true, name = "cSld")
	protected CT_CommonSlideData CSld;
	@XmlElement(required = true, name = "transition")
	protected CT_SlideTransition Transition;
	@XmlElement(required = true, name = "timing")
	protected CT_SlideTiming Timing;
	@XmlElement(required = true, name = "hf")
	protected CT_HeaderFooter Hf;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "sldLayout")
public class SldLayout {
	protected CT_SlideLayout SldLayout;
}

// CT_SlideMasterTextStyles ...
public class CT_SlideMasterTextStyles {
	@XmlElement(required = true, name = "titleStyle")
	protected CT_TextListStyle TitleStyle;
	@XmlElement(required = true, name = "bodyStyle")
	protected CT_TextListStyle BodyStyle;
	@XmlElement(required = true, name = "otherStyle")
	protected CT_TextListStyle OtherStyle;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// ST_SlideLayoutId ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SlideLayoutId")
public class ST_SlideLayoutId {
	protected Integer ST_SlideLayoutId;
}

// CT_SlideLayoutIdListEntry ...
public class CT_SlideLayoutIdListEntry {
	@XmlAttribute(name = "id")
	protected IntegerAttr Id;
	@XmlAttribute(name = "r:id", required = true)
	protected StringAttr RId;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_SlideLayoutIdList ...
public class CT_SlideLayoutIdList {
	@XmlElement(required = true, name = "sldLayoutId")
	protected List<CT_SlideLayoutIdListEntry> SldLayoutId;
}

// CT_SlideMaster ...
public class CT_SlideMaster {
	@XmlAttribute(name = "preserve")
	protected BooleanAttr Preserve;
	protected List<EG_TopLevelSlide> EG_TopLevelSlide;
	@XmlElement(required = true, name = "cSld")
	protected CT_CommonSlideData CSld;
	@XmlElement(required = true, name = "sldLayoutIdLst")
	protected CT_SlideLayoutIdList SldLayoutIdLst;
	@XmlElement(required = true, name = "transition")
	protected CT_SlideTransition Transition;
	@XmlElement(required = true, name = "timing")
	protected CT_SlideTiming Timing;
	@XmlElement(required = true, name = "hf")
	protected CT_HeaderFooter Hf;
	@XmlElement(required = true, name = "txStyles")
	protected CT_SlideMasterTextStyles TxStyles;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "sldMaster")
public class SldMaster {
	protected CT_SlideMaster SldMaster;
}

// CT_HandoutMaster ...
public class CT_HandoutMaster {
	protected List<EG_TopLevelSlide> EG_TopLevelSlide;
	@XmlElement(required = true, name = "cSld")
	protected CT_CommonSlideData CSld;
	@XmlElement(required = true, name = "hf")
	protected CT_HeaderFooter Hf;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "handoutMaster")
public class HandoutMaster {
	protected CT_HandoutMaster HandoutMaster;
}

// CT_NotesMaster ...
public class CT_NotesMaster {
	protected List<EG_TopLevelSlide> EG_TopLevelSlide;
	@XmlElement(required = true, name = "cSld")
	protected CT_CommonSlideData CSld;
	@XmlElement(required = true, name = "hf")
	protected CT_HeaderFooter Hf;
	@XmlElement(required = true, name = "notesStyle")
	protected CT_TextListStyle NotesStyle;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "notesMaster")
public class NotesMaster {
	protected CT_NotesMaster NotesMaster;
}

// CT_NotesSlide ...
public class CT_NotesSlide {
	@XmlElement(required = true)
	protected AG_ChildSlide AG_ChildSlide;
	protected List<EG_ChildSlide> EG_ChildSlide;
	@XmlElement(required = true, name = "cSld")
	protected CT_CommonSlideData CSld;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "notes")
public class Notes {
	protected CT_NotesSlide Notes;
}

// CT_SlideSyncProperties ...
public class CT_SlideSyncProperties {
	@XmlAttribute(name = "serverSldId", required = true)
	protected StringAttr ServerSldId;
	@XmlAttribute(name = "serverSldModifiedTime", required = true)
	protected ByteAttr ServerSldModifiedTime;
	@XmlAttribute(name = "clientInsertedTime", required = true)
	protected ByteAttr ClientInsertedTime;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "sldSyncPr")
public class SldSyncPr {
	protected CT_SlideSyncProperties SldSyncPr;
}

// CT_StringTag ...
public class CT_StringTag {
	@XmlAttribute(name = "name", required = true)
	protected StringAttr Name;
	@XmlAttribute(name = "val", required = true)
	protected StringAttr Val;
}

// CT_TagList ...
public class CT_TagList {
	@XmlElement(required = true, name = "tag")
	protected List<CT_StringTag> Tag;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "tagLst")
public class TagLst {
	protected CT_TagList TagLst;
}

// ST_SplitterBarState ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SplitterBarState")
public class ST_SplitterBarState {
	protected String ST_SplitterBarState;
}

// ST_ViewType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_ViewType")
public class ST_ViewType {
	protected String ST_ViewType;
}

// CT_NormalViewPortion ...
public class CT_NormalViewPortion {
	@XmlAttribute(name = "sz", required = true)
	protected ST_PositiveFixedPercentageAttr Sz;
	@XmlAttribute(name = "autoAdjust")
	protected BooleanAttr AutoAdjust;
}

// CT_NormalViewProperties ...
public class CT_NormalViewProperties {
	@XmlAttribute(name = "showOutlineIcons")
	protected BooleanAttr ShowOutlineIcons;
	@XmlAttribute(name = "snapVertSplitter")
	protected BooleanAttr SnapVertSplitter;
	@XmlAttribute(name = "vertBarState")
	protected StringAttr VertBarState;
	@XmlAttribute(name = "horzBarState")
	protected StringAttr HorzBarState;
	@XmlAttribute(name = "preferSingleView")
	protected BooleanAttr PreferSingleView;
	@XmlElement(required = true, name = "restoredLeft")
	protected CT_NormalViewPortion RestoredLeft;
	@XmlElement(required = true, name = "restoredTop")
	protected CT_NormalViewPortion RestoredTop;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_CommonViewProperties ...
public class CT_CommonViewProperties {
	@XmlAttribute(name = "varScale")
	protected BooleanAttr VarScale;
	@XmlElement(required = true, name = "scale")
	protected CT_Scale2D Scale;
	@XmlElement(required = true, name = "origin")
	protected CT_Point2D Origin;
}

// CT_NotesTextViewProperties ...
public class CT_NotesTextViewProperties {
	@XmlElement(required = true, name = "cViewPr")
	protected CT_CommonViewProperties CViewPr;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_OutlineViewSlideEntry ...
public class CT_OutlineViewSlideEntry {
	@XmlAttribute(name = "r:id", required = true)
	protected StringAttr RId;
	@XmlAttribute(name = "collapse")
	protected BooleanAttr Collapse;
}

// CT_OutlineViewSlideList ...
public class CT_OutlineViewSlideList {
	@XmlElement(required = true, name = "sld")
	protected List<CT_OutlineViewSlideEntry> Sld;
}

// CT_OutlineViewProperties ...
public class CT_OutlineViewProperties {
	@XmlElement(required = true, name = "cViewPr")
	protected CT_CommonViewProperties CViewPr;
	@XmlElement(required = true, name = "sldLst")
	protected CT_OutlineViewSlideList SldLst;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_SlideSorterViewProperties ...
public class CT_SlideSorterViewProperties {
	@XmlAttribute(name = "showFormatting")
	protected BooleanAttr ShowFormatting;
	@XmlElement(required = true, name = "cViewPr")
	protected CT_CommonViewProperties CViewPr;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_Guide ...
public class CT_Guide {
	@XmlAttribute(name = "orient")
	protected StringAttr Orient;
	@XmlAttribute(name = "pos")
	protected ST_Coordinate32Attr Pos;
}

// CT_GuideList ...
public class CT_GuideList {
	@XmlElement(required = true, name = "guide")
	protected List<CT_Guide> Guide;
}

// CT_CommonSlideViewProperties ...
public class CT_CommonSlideViewProperties {
	@XmlAttribute(name = "snapToGrid")
	protected BooleanAttr SnapToGrid;
	@XmlAttribute(name = "snapToObjects")
	protected BooleanAttr SnapToObjects;
	@XmlAttribute(name = "showGuides")
	protected BooleanAttr ShowGuides;
	@XmlElement(required = true, name = "cViewPr")
	protected CT_CommonViewProperties CViewPr;
	@XmlElement(required = true, name = "guideLst")
	protected CT_GuideList GuideLst;
}

// CT_SlideViewProperties ...
public class CT_SlideViewProperties {
	@XmlElement(required = true, name = "cSldViewPr")
	protected CT_CommonSlideViewProperties CSldViewPr;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_NotesViewProperties ...
public class CT_NotesViewProperties {
	@XmlElement(required = true, name = "cSldViewPr")
	protected CT_CommonSlideViewProperties CSldViewPr;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_ViewProperties ...
public class CT_ViewProperties {
	@XmlAttribute(name = "lastView")
	protected StringAttr LastView;
	@XmlAttribute(name = "showComments")
	protected BooleanAttr ShowComments;
	@XmlElement(required = true, name = "normalViewPr")
	protected CT_NormalViewProperties NormalViewPr;
	@XmlElement(required = true, name = "slideViewPr")
	protected CT_SlideViewProperties SlideViewPr;
	@XmlElement(required = true, name = "outlineViewPr")
	protected CT_OutlineViewProperties OutlineViewPr;
	@XmlElement(required = true, name = "notesTextViewPr")
	protected CT_NotesTextViewProperties NotesTextViewPr;
	@XmlElement(required = true, name = "sorterViewPr")
	protected CT_SlideSorterViewProperties SorterViewPr;
	@XmlElement(required = true, name = "notesViewPr")
	protected CT_NotesViewProperties NotesViewPr;
	@XmlElement(required = true, name = "gridSpacing")
	protected CT_PositiveSize2D GridSpacing;
	@XmlElement(required = true, name = "extLst")
	protected CT_ExtensionList ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "viewPr")
public class ViewPr {
	protected CT_ViewProperties ViewPr;
}
