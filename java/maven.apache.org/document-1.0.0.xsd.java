// Code generated by xgen. DO NOT EDIT.

package schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "document")
public class Document {
	protected DocumentModel Document;
}

public class DocumentModel {
	@XmlAttribute(name = "outputName")
	protected StringAttr OutputName;
	@XmlElement(required = true, name = "meta")
	protected DocumentMeta Meta;
	@XmlElement(required = true, name = "toc")
	protected DocumentTOC Toc;
	@XmlElement(required = true, name = "cover")
	protected DocumentCover Cover;
}

public class DocumentTOC {
	@XmlAttribute(name = "name")
	protected StringAttr Name;
	@XmlAttribute(name = "depth")
	protected IntegerAttr Depth;
	@XmlElement(required = true, name = "item")
	protected List<DocumentTOCItem> Item;
}

public class DocumentTOCItem {
	@XmlAttribute(name = "name")
	protected StringAttr Name;
	@XmlAttribute(name = "ref")
	protected StringAttr Ref;
	@XmlAttribute(name = "collapse")
	protected BooleanAttr Collapse;
	@XmlElement(required = true, name = "item")
	protected List<DocumentTOCItem> Item;
}

public class DocumentCover {
	@XmlElement(required = true, name = "coverTitle")
	protected String CoverTitle;
	@XmlElement(required = true, name = "coverSubTitle")
	protected String CoverSubTitle;
	@XmlElement(required = true, name = "coverVersion")
	protected String CoverVersion;
	@XmlElement(required = true, name = "coverType")
	protected String CoverType;
	@XmlElement(required = true, name = "coverDate")
	protected Byte CoverDate;
	@XmlElement(required = true, name = "author")
	protected List<DocumentAuthor> Author;
	@XmlElement(required = true, name = "projectName")
	protected String ProjectName;
	@XmlElement(required = true, name = "projectLogo")
	protected String ProjectLogo;
	@XmlElement(required = true, name = "companyName")
	protected String CompanyName;
	@XmlElement(required = true, name = "companyLogo")
	protected String CompanyLogo;
}

public class DocumentAuthor {
	@XmlElement(required = true, name = "firstName")
	protected String FirstName;
	@XmlElement(required = true, name = "lastName")
	protected String LastName;
	@XmlElement(required = true, name = "initials")
	protected String Initials;
	@XmlElement(required = true, name = "title")
	protected String Title;
	@XmlElement(required = true, name = "position")
	protected String Position;
	@XmlElement(required = true, name = "email")
	protected String Email;
	@XmlElement(required = true, name = "phoneNumber")
	protected String PhoneNumber;
	@XmlElement(required = true, name = "faxNumber")
	protected String FaxNumber;
	@XmlElement(required = true, name = "companyName")
	protected String CompanyName;
	@XmlElement(required = true, name = "street")
	protected String Street;
	@XmlElement(required = true, name = "city")
	protected String City;
	@XmlElement(required = true, name = "postalCode")
	protected String PostalCode;
	@XmlElement(required = true, name = "country")
	protected String Country;
	@XmlElement(required = true, name = "state")
	protected String State;
}

public class Authors {
	@XmlElement(required = true, name = "author")
	protected List<DocumentAuthor> Author;
}

public class KeyWords {
	@XmlElement(required = true, name = "keyWord")
	protected List<String> KeyWord;
}

public class DocumentMeta {
	@XmlElement(required = true, name = "title")
	protected String Title;
	@XmlElement(required = true, name = "author")
	protected String Author;
	@XmlElement(required = true, name = "authors")
	protected Authors Authors;
	@XmlElement(required = true, name = "subject")
	protected String Subject;
	@XmlElement(required = true, name = "keywords")
	protected String Keywords;
	@XmlElement(required = true, name = "keyWords")
	protected KeyWords KeyWords;
	@XmlElement(required = true, name = "pageSize")
	protected String PageSize;
	@XmlElement(required = true, name = "generator")
	protected String Generator;
	@XmlElement(required = true, name = "description")
	protected String Description;
	@XmlElement(required = true, name = "initialCreator")
	protected String InitialCreator;
	@XmlElement(required = true, name = "creator")
	protected String Creator;
	@XmlElement(required = true, name = "printedBy")
	protected String PrintedBy;
	@XmlElement(required = true, name = "creationDate")
	protected Byte CreationDate;
	@XmlElement(required = true, name = "date")
	protected Byte Date;
	@XmlElement(required = true, name = "printDate")
	protected Byte PrintDate;
	@XmlElement(required = true, name = "template")
	protected DocumentTemplate Template;
	@XmlElement(required = true, name = "hyperlinkBehaviour")
	protected DocumentHyperlinkBehaviour HyperlinkBehaviour;
	@XmlElement(required = true, name = "language")
	protected String Language;
	@XmlElement(required = true, name = "editingCycles")
	protected Long EditingCycles;
	@XmlElement(required = true, name = "editingDuration")
	protected Long EditingDuration;
	@XmlElement(required = true, name = "documentStatistic")
	protected DocumentStatistic DocumentStatistic;
	@XmlElement(required = true, name = "confidential")
	protected Boolean Confidential;
	@XmlElement(required = true, name = "draft")
	protected Boolean Draft;
}

public class DocumentTemplate {
	@XmlAttribute(name = "href")
	protected StringAttr Href;
	@XmlAttribute(name = "title")
	protected StringAttr Title;
	@XmlAttribute(name = "date")
	protected ByteAttr Date;
}

public class DocumentStatistic {
	@XmlAttribute(name = "pageCount")
	protected LongAttr PageCount;
	@XmlAttribute(name = "tableCount")
	protected LongAttr TableCount;
	@XmlAttribute(name = "drawCount")
	protected LongAttr DrawCount;
	@XmlAttribute(name = "imageCount")
	protected LongAttr ImageCount;
	@XmlAttribute(name = "objectCount")
	protected LongAttr ObjectCount;
	@XmlAttribute(name = "oleObjectCount")
	protected LongAttr OleObjectCount;
	@XmlAttribute(name = "paragraphCount")
	protected LongAttr ParagraphCount;
	@XmlAttribute(name = "wordCount")
	protected LongAttr WordCount;
	@XmlAttribute(name = "characterCount")
	protected LongAttr CharacterCount;
	@XmlAttribute(name = "rowCount")
	protected LongAttr RowCount;
	@XmlAttribute(name = "frameCount")
	protected LongAttr FrameCount;
	@XmlAttribute(name = "sentenceCount")
	protected LongAttr SentenceCount;
	@XmlAttribute(name = "syllableCount")
	protected LongAttr SyllableCount;
	@XmlAttribute(name = "nonWhitespaceCharacterCount")
	protected LongAttr NonWhitespaceCharacterCount;
}

public class DocumentHyperlinkBehaviour {
	@XmlAttribute(name = "targetFrame")
	protected StringAttr TargetFrame;
}
