// Code generated by xgen. DO NOT EDIT.

package schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "project")
public class Project {
	protected Model Project;
}

public class Licenses {
	@XmlElement(required = true, name = "license")
	protected List<License> License;
}

public class Developers {
	@XmlElement(required = true, name = "developer")
	protected List<Developer> Developer;
}

public class Contributors {
	@XmlElement(required = true, name = "contributor")
	protected List<Contributor> Contributor;
}

public class MailingLists {
	@XmlElement(required = true, name = "mailingList")
	protected List<MailingList> MailingList;
}

public class Modules {
	@XmlElement(required = true, name = "module")
	protected List<String> Module;
}

public class Properties {
}

public class Dependencies {
	@XmlElement(required = true, name = "dependency")
	protected List<Dependency> Dependency;
}

public class Repositories {
	@XmlElement(required = true, name = "repository")
	protected List<Repository> Repository;
}

public class PluginRepositories {
	@XmlElement(required = true, name = "pluginRepository")
	protected List<Repository> PluginRepository;
}

public class Reports {
}

public class Profiles {
	@XmlElement(required = true, name = "profile")
	protected List<Profile> Profile;
}

public class Model {
	@XmlAttribute(name = "child.project.url.inherit.append.path")
	protected StringAttr ChildProjectUrlInheritAppendPath;
	@XmlElement(required = true, name = "modelVersion")
	protected String ModelVersion;
	@XmlElement(required = true, name = "parent")
	protected Parent Parent;
	@XmlElement(required = true, name = "groupId")
	protected String GroupId;
	@XmlElement(required = true, name = "artifactId")
	protected String ArtifactId;
	@XmlElement(required = true, name = "version")
	protected String Version;
	@XmlElement(required = true, name = "packaging")
	protected String Packaging;
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "description")
	protected String Description;
	@XmlElement(required = true, name = "url")
	protected String Url;
	@XmlElement(required = true, name = "inceptionYear")
	protected String InceptionYear;
	@XmlElement(required = true, name = "organization")
	protected Organization Organization;
	@XmlElement(required = true, name = "licenses")
	protected Licenses Licenses;
	@XmlElement(required = true, name = "developers")
	protected Developers Developers;
	@XmlElement(required = true, name = "contributors")
	protected Contributors Contributors;
	@XmlElement(required = true, name = "mailingLists")
	protected MailingLists MailingLists;
	@XmlElement(required = true, name = "prerequisites")
	protected Prerequisites Prerequisites;
	@XmlElement(required = true, name = "modules")
	protected Modules Modules;
	@XmlElement(required = true, name = "scm")
	protected Scm Scm;
	@XmlElement(required = true, name = "issueManagement")
	protected IssueManagement IssueManagement;
	@XmlElement(required = true, name = "ciManagement")
	protected CiManagement CiManagement;
	@XmlElement(required = true, name = "distributionManagement")
	protected DistributionManagement DistributionManagement;
	@XmlElement(required = true, name = "properties")
	protected Properties Properties;
	@XmlElement(required = true, name = "dependencyManagement")
	protected DependencyManagement DependencyManagement;
	@XmlElement(required = true, name = "dependencies")
	protected Dependencies Dependencies;
	@XmlElement(required = true, name = "repositories")
	protected Repositories Repositories;
	@XmlElement(required = true, name = "pluginRepositories")
	protected PluginRepositories PluginRepositories;
	@XmlElement(required = true, name = "build")
	protected Build Build;
	@XmlElement(required = true, name = "reports")
	protected Reports Reports;
	@XmlElement(required = true, name = "reporting")
	protected Reporting Reporting;
	@XmlElement(required = true, name = "profiles")
	protected Profiles Profiles;
}

public class License {
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "url")
	protected String Url;
	@XmlElement(required = true, name = "distribution")
	protected String Distribution;
	@XmlElement(required = true, name = "comments")
	protected String Comments;
}

public class Notifiers {
	@XmlElement(required = true, name = "notifier")
	protected List<Notifier> Notifier;
}

public class CiManagement {
	@XmlElement(required = true, name = "system")
	protected String System;
	@XmlElement(required = true, name = "url")
	protected String Url;
	@XmlElement(required = true, name = "notifiers")
	protected Notifiers Notifiers;
}

public class Configuration {
}

public class Notifier {
	@XmlElement(required = true, name = "type")
	protected String Type;
	@XmlElement(required = true, name = "sendOnError")
	protected Boolean SendOnError;
	@XmlElement(required = true, name = "sendOnFailure")
	protected Boolean SendOnFailure;
	@XmlElement(required = true, name = "sendOnSuccess")
	protected Boolean SendOnSuccess;
	@XmlElement(required = true, name = "sendOnWarning")
	protected Boolean SendOnWarning;
	@XmlElement(required = true, name = "address")
	protected String Address;
	@XmlElement(required = true, name = "configuration")
	protected Configuration Configuration;
}

public class Scm {
	@XmlAttribute(name = "child.scm.connection.inherit.append.path")
	protected StringAttr ChildScmConnectionInheritAppendPath;
	@XmlAttribute(name = "child.scm.developerConnection.inherit.append.path")
	protected StringAttr ChildScmDeveloperConnectionInheritAppendPath;
	@XmlAttribute(name = "child.scm.url.inherit.append.path")
	protected StringAttr ChildScmUrlInheritAppendPath;
	@XmlElement(required = true, name = "connection")
	protected String Connection;
	@XmlElement(required = true, name = "developerConnection")
	protected String DeveloperConnection;
	@XmlElement(required = true, name = "tag")
	protected String Tag;
	@XmlElement(required = true, name = "url")
	protected String Url;
}

public class IssueManagement {
	@XmlElement(required = true, name = "system")
	protected String System;
	@XmlElement(required = true, name = "url")
	protected String Url;
}

public class DependencyManagement {
	@XmlElement(required = true, name = "dependencies")
	protected Dependencies Dependencies;
}

public class Exclusions {
	@XmlElement(required = true, name = "exclusion")
	protected List<Exclusion> Exclusion;
}

public class Dependency {
	@XmlElement(required = true, name = "groupId")
	protected String GroupId;
	@XmlElement(required = true, name = "artifactId")
	protected String ArtifactId;
	@XmlElement(required = true, name = "version")
	protected String Version;
	@XmlElement(required = true, name = "type")
	protected String Type;
	@XmlElement(required = true, name = "classifier")
	protected String Classifier;
	@XmlElement(required = true, name = "scope")
	protected String Scope;
	@XmlElement(required = true, name = "systemPath")
	protected String SystemPath;
	@XmlElement(required = true, name = "exclusions")
	protected Exclusions Exclusions;
	@XmlElement(required = true, name = "optional")
	protected String Optional;
}

public class Exclusion {
	@XmlElement(required = true, name = "artifactId")
	protected String ArtifactId;
	@XmlElement(required = true, name = "groupId")
	protected String GroupId;
}

public class Parent {
	@XmlElement(required = true, name = "groupId")
	protected String GroupId;
	@XmlElement(required = true, name = "artifactId")
	protected String ArtifactId;
	@XmlElement(required = true, name = "version")
	protected String Version;
	@XmlElement(required = true, name = "relativePath")
	protected String RelativePath;
}

public class Roles {
	@XmlElement(required = true, name = "role")
	protected List<String> Role;
}

public class Developer {
	@XmlElement(required = true, name = "id")
	protected String Id;
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "email")
	protected String Email;
	@XmlElement(required = true, name = "url")
	protected String Url;
	@XmlElement(required = true, name = "organization")
	protected String Organization;
	@XmlElement(required = true, name = "organizationUrl")
	protected String OrganizationUrl;
	@XmlElement(required = true, name = "roles")
	protected Roles Roles;
	@XmlElement(required = true, name = "timezone")
	protected String Timezone;
	@XmlElement(required = true, name = "properties")
	protected Properties Properties;
}

public class OtherArchives {
	@XmlElement(required = true, name = "otherArchive")
	protected List<String> OtherArchive;
}

public class MailingList {
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "subscribe")
	protected String Subscribe;
	@XmlElement(required = true, name = "unsubscribe")
	protected String Unsubscribe;
	@XmlElement(required = true, name = "post")
	protected String Post;
	@XmlElement(required = true, name = "archive")
	protected String Archive;
	@XmlElement(required = true, name = "otherArchives")
	protected OtherArchives OtherArchives;
}

public class Contributor {
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "email")
	protected String Email;
	@XmlElement(required = true, name = "url")
	protected String Url;
	@XmlElement(required = true, name = "organization")
	protected String Organization;
	@XmlElement(required = true, name = "organizationUrl")
	protected String OrganizationUrl;
	@XmlElement(required = true, name = "roles")
	protected Roles Roles;
	@XmlElement(required = true, name = "timezone")
	protected String Timezone;
	@XmlElement(required = true, name = "properties")
	protected Properties Properties;
}

public class Organization {
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "url")
	protected String Url;
}

public class DistributionManagement {
	@XmlElement(required = true, name = "repository")
	protected DeploymentRepository Repository;
	@XmlElement(required = true, name = "snapshotRepository")
	protected DeploymentRepository SnapshotRepository;
	@XmlElement(required = true, name = "site")
	protected Site Site;
	@XmlElement(required = true, name = "downloadUrl")
	protected String DownloadUrl;
	@XmlElement(required = true, name = "relocation")
	protected Relocation Relocation;
	@XmlElement(required = true, name = "status")
	protected String Status;
}

public class DeploymentRepository {
	@XmlElement(required = true, name = "uniqueVersion")
	protected Boolean UniqueVersion;
	@XmlElement(required = true, name = "releases")
	protected RepositoryPolicy Releases;
	@XmlElement(required = true, name = "snapshots")
	protected RepositoryPolicy Snapshots;
	@XmlElement(required = true, name = "id")
	protected String Id;
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "url")
	protected String Url;
	@XmlElement(required = true, name = "layout")
	protected String Layout;
}

public class RepositoryPolicy {
	@XmlElement(required = true, name = "enabled")
	protected String Enabled;
	@XmlElement(required = true, name = "updatePolicy")
	protected String UpdatePolicy;
	@XmlElement(required = true, name = "checksumPolicy")
	protected String ChecksumPolicy;
}

public class Relocation {
	@XmlElement(required = true, name = "groupId")
	protected String GroupId;
	@XmlElement(required = true, name = "artifactId")
	protected String ArtifactId;
	@XmlElement(required = true, name = "version")
	protected String Version;
	@XmlElement(required = true, name = "message")
	protected String Message;
}

public class Site {
	@XmlAttribute(name = "child.site.url.inherit.append.path")
	protected StringAttr ChildSiteUrlInheritAppendPath;
	@XmlElement(required = true, name = "id")
	protected String Id;
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "url")
	protected String Url;
}

public class Plugins {
	@XmlElement(required = true, name = "plugin")
	protected List<ReportPlugin> Plugin;
}

public class Reporting {
	@XmlElement(required = true, name = "excludeDefaults")
	protected String ExcludeDefaults;
	@XmlElement(required = true, name = "outputDirectory")
	protected String OutputDirectory;
	@XmlElement(required = true, name = "plugins")
	protected Plugins Plugins;
}

public class ReportSets {
	@XmlElement(required = true, name = "reportSet")
	protected List<ReportSet> ReportSet;
}

public class ReportPlugin {
	@XmlElement(required = true, name = "groupId")
	protected String GroupId;
	@XmlElement(required = true, name = "artifactId")
	protected String ArtifactId;
	@XmlElement(required = true, name = "version")
	protected String Version;
	@XmlElement(required = true, name = "reportSets")
	protected ReportSets ReportSets;
	@XmlElement(required = true, name = "inherited")
	protected String Inherited;
	@XmlElement(required = true, name = "configuration")
	protected Configuration Configuration;
}

public class ReportSet {
	@XmlElement(required = true, name = "id")
	protected String Id;
	@XmlElement(required = true, name = "reports")
	protected Reports Reports;
	@XmlElement(required = true, name = "inherited")
	protected String Inherited;
	@XmlElement(required = true, name = "configuration")
	protected Configuration Configuration;
}

public class Profile {
	@XmlElement(required = true, name = "id")
	protected String Id;
	@XmlElement(required = true, name = "activation")
	protected Activation Activation;
	@XmlElement(required = true, name = "build")
	protected BuildBase Build;
	@XmlElement(required = true, name = "modules")
	protected Modules Modules;
	@XmlElement(required = true, name = "distributionManagement")
	protected DistributionManagement DistributionManagement;
	@XmlElement(required = true, name = "properties")
	protected Properties Properties;
	@XmlElement(required = true, name = "dependencyManagement")
	protected DependencyManagement DependencyManagement;
	@XmlElement(required = true, name = "dependencies")
	protected Dependencies Dependencies;
	@XmlElement(required = true, name = "repositories")
	protected Repositories Repositories;
	@XmlElement(required = true, name = "pluginRepositories")
	protected PluginRepositories PluginRepositories;
	@XmlElement(required = true, name = "reports")
	protected Reports Reports;
	@XmlElement(required = true, name = "reporting")
	protected Reporting Reporting;
}

public class Activation {
	@XmlElement(required = true, name = "activeByDefault")
	protected Boolean ActiveByDefault;
	@XmlElement(required = true, name = "jdk")
	protected String Jdk;
	@XmlElement(required = true, name = "os")
	protected ActivationOS Os;
	@XmlElement(required = true, name = "property")
	protected ActivationProperty Property;
	@XmlElement(required = true, name = "file")
	protected ActivationFile File;
}

public class ActivationProperty {
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "value")
	protected String Value;
}

public class ActivationFile {
	@XmlElement(required = true, name = "missing")
	protected String Missing;
	@XmlElement(required = true, name = "exists")
	protected String Exists;
}

public class ActivationOS {
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "family")
	protected String Family;
	@XmlElement(required = true, name = "arch")
	protected String Arch;
	@XmlElement(required = true, name = "version")
	protected String Version;
}

public class Repository {
	@XmlElement(required = true, name = "releases")
	protected RepositoryPolicy Releases;
	@XmlElement(required = true, name = "snapshots")
	protected RepositoryPolicy Snapshots;
	@XmlElement(required = true, name = "id")
	protected String Id;
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "url")
	protected String Url;
	@XmlElement(required = true, name = "layout")
	protected String Layout;
}

public class Resources {
	@XmlElement(required = true, name = "resource")
	protected List<Resource> Resource;
}

public class TestResources {
	@XmlElement(required = true, name = "testResource")
	protected List<Resource> TestResource;
}

public class Filters {
	@XmlElement(required = true, name = "filter")
	protected List<String> Filter;
}

public class BuildBase {
	@XmlElement(required = true, name = "defaultGoal")
	protected String DefaultGoal;
	@XmlElement(required = true, name = "resources")
	protected Resources Resources;
	@XmlElement(required = true, name = "testResources")
	protected TestResources TestResources;
	@XmlElement(required = true, name = "directory")
	protected String Directory;
	@XmlElement(required = true, name = "finalName")
	protected String FinalName;
	@XmlElement(required = true, name = "filters")
	protected Filters Filters;
	@XmlElement(required = true, name = "pluginManagement")
	protected PluginManagement PluginManagement;
	@XmlElement(required = true, name = "plugins")
	protected Plugins Plugins;
}

public class Executions {
	@XmlElement(required = true, name = "execution")
	protected List<PluginExecution> Execution;
}

public class Goals {
}

public class Plugin {
	@XmlElement(required = true, name = "groupId")
	protected String GroupId;
	@XmlElement(required = true, name = "artifactId")
	protected String ArtifactId;
	@XmlElement(required = true, name = "version")
	protected String Version;
	@XmlElement(required = true, name = "extensions")
	protected String Extensions;
	@XmlElement(required = true, name = "executions")
	protected Executions Executions;
	@XmlElement(required = true, name = "dependencies")
	protected Dependencies Dependencies;
	@XmlElement(required = true, name = "goals")
	protected Goals Goals;
	@XmlElement(required = true, name = "inherited")
	protected String Inherited;
	@XmlElement(required = true, name = "configuration")
	protected Configuration Configuration;
}

public class PluginExecution {
	@XmlElement(required = true, name = "id")
	protected String Id;
	@XmlElement(required = true, name = "phase")
	protected String Phase;
	@XmlElement(required = true, name = "goals")
	protected Goals Goals;
	@XmlElement(required = true, name = "inherited")
	protected String Inherited;
	@XmlElement(required = true, name = "configuration")
	protected Configuration Configuration;
}

public class Includes {
	@XmlElement(required = true, name = "include")
	protected List<String> Include;
}

public class Excludes {
	@XmlElement(required = true, name = "exclude")
	protected List<String> Exclude;
}

public class Resource {
	@XmlElement(required = true, name = "targetPath")
	protected String TargetPath;
	@XmlElement(required = true, name = "filtering")
	protected String Filtering;
	@XmlElement(required = true, name = "directory")
	protected String Directory;
	@XmlElement(required = true, name = "includes")
	protected Includes Includes;
	@XmlElement(required = true, name = "excludes")
	protected Excludes Excludes;
}

public class PluginManagement {
	@XmlElement(required = true, name = "plugins")
	protected Plugins Plugins;
}

public class Prerequisites {
	@XmlElement(required = true, name = "maven")
	protected String Maven;
}

public class Extensions {
	@XmlElement(required = true, name = "extension")
	protected List<Extension> Extension;
}

public class Build {
	@XmlElement(required = true, name = "sourceDirectory")
	protected String SourceDirectory;
	@XmlElement(required = true, name = "scriptSourceDirectory")
	protected String ScriptSourceDirectory;
	@XmlElement(required = true, name = "testSourceDirectory")
	protected String TestSourceDirectory;
	@XmlElement(required = true, name = "outputDirectory")
	protected String OutputDirectory;
	@XmlElement(required = true, name = "testOutputDirectory")
	protected String TestOutputDirectory;
	@XmlElement(required = true, name = "extensions")
	protected Extensions Extensions;
	@XmlElement(required = true, name = "defaultGoal")
	protected String DefaultGoal;
	@XmlElement(required = true, name = "resources")
	protected Resources Resources;
	@XmlElement(required = true, name = "testResources")
	protected TestResources TestResources;
	@XmlElement(required = true, name = "directory")
	protected String Directory;
	@XmlElement(required = true, name = "finalName")
	protected String FinalName;
	@XmlElement(required = true, name = "filters")
	protected Filters Filters;
	@XmlElement(required = true, name = "pluginManagement")
	protected PluginManagement PluginManagement;
	@XmlElement(required = true, name = "plugins")
	protected Plugins Plugins;
}

public class Extension {
	@XmlElement(required = true, name = "groupId")
	protected String GroupId;
	@XmlElement(required = true, name = "artifactId")
	protected String ArtifactId;
	@XmlElement(required = true, name = "version")
	protected String Version;
}
