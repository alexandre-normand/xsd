// Code generated by xgen. DO NOT EDIT.

package schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;

// OECDNameType_EnumType is It is possible for stf documents to contain several names for the same party. This is a qualifier to indicate the type of a particular name. Such types include nicknames ('nick'), names under which a party does business ('dba' a short name for the entity, or a name that is used for public acquaintance instead of the official business name) etc. Examples: in the United States, DaimlerChrysler is still known simply as Chrysler, Dr. William Black dba Quality Pedriatics, Inc. 'SMFAliasOrOther' should be chosen if the document is generated from a legacy SMF record, where no further distinction is possible.
// Possible values are:
// OECD201=SMFAliasOrOther
// OECD202=indiv
// OECD203=alias
// OECD204=nick
// OECD205=aka
// OECD206=dba
// OECD207=legal
// OECD208=atbirth
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "OECDNameType_EnumType")
public class OECDNameType_EnumType {
	protected String OECDNameType_EnumType;
}

// OECDLegalAddressType_EnumType is This is a datatype for an attribute to an address. It serves to indicate the legal character of that address (residential, business etc.)
// Possible values are:
// OECD301=residentialOrBusiness
// OECD302=residential
// OECD303=business
// OECD304=registeredOffice
// OECD305=unspecified
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "OECDLegalAddressType_EnumType")
public class OECDLegalAddressType_EnumType {
	protected String OECDLegalAddressType_EnumType;
}
